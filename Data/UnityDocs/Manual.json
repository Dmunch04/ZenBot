[{
  "description": "When creating a new project, you can specify whether to start the Unity Editor in 2D mode or 3D mode.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/2DAnd3DModeSettings.html",
  "title": "2D and 3D Mode Settings"
}, {
  "description": "Unity is equally suited to creating both 2D and 3D games.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/2Dor3D.html",
  "title": "2D or 3D projects"
}, {
  "description": "Unity supports importing Meshes and animation from two different types of files:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/3D-formats.html",
  "title": "Model file formats"
}, {
  "description": "9-slicing is a 2D technique which allows you to reuse an image at various sizes without needing to prepare multiple Assets.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/9SliceSprites.html",
  "title": "9-slicing Sprites "
}, {
  "description": "How many machines can I install my copy of Unity on?",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ActivationFAQ.html",
  "title": "Activation FAQ"
}, {
  "description": "This section covers more advanced development techniques, which will be useful to developers and teams who are comfortable with the basics of developing in Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AdvancedDevelopment.html",
  "title": "Advanced Development"
}, {
  "description": "This section reveals more about what goes on under the hood of the Editor, from how Assets and Scenes are stored, to customising the build pipeline and extending the Editor itself.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AdvancedEditor.html",
  "title": "Advanced Editor Topics"
}, {
  "description": "Two further features which can improve the visual realism obtained from Reflection Probes are described below: Interreflections and Box Projection.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AdvancedRefProbe.html",
  "title": "Advanced Reflection Probe Features"
}, {
  "description": "This page explains how to play back ambisonics and the changes to our audio plugin interface to support ambisonic audio decoders.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AmbisonicAudio.html",
  "title": "Ambisonic Audio"
}, {
  "description": "A car’s speedometer typically works by measuring the rotational speed of the wheels.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AmountVectorMagnitudeInAnotherDirection.html",
  "title": "The Amount of One Vector's Magnitude that Lies in Another Vector's Direction"
}, {
  "description": "A mesh consists of triangles arranged in 3D space to create the impression of a solid object.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AnatomyofaMesh.html",
  "title": "Anatomy of a Mesh"
}, {
  "description": "Most features of the Android devices are exposed through the Input and Handheld classes.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/android-API.html",
  "title": "Android Scripting"
}, {
  "description": "Before submitting a bug report, refer to the Troubleshooting Android development page of the Unity Manual and the Unity Android forum for solutions to common crashes and problems.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/android-bugreporting.html",
  "title": "Reporting crash bugs under Android"
}, {
  "description": "There are two Android build process output types in Unity: the output package (APK) and the exported project.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/android-BuildProcess.html",
  "title": "Inside the Android build process"
}, {
  "description": "The Android environment setup topic of the Unity Manual contains a basic outline of the tasks that you must complete before you are able to run code on your Android device, or in the Android emulator.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/android-GettingStarted.html",
  "title": "Getting started with Android development"
}, {
  "description": "Gradle is an Android build system which automates a number of build processes.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/android-gradle-overview.html",
  "title": "Gradle for Android"
}, {
  "description": "If you just switched to export your Android project using Gradle instead of the old system, you may encounter build errors, especially if you are using additional Android libraries, or if you have added a custom AndroidManifest.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/android-gradle-troubleshooting.html",
  "title": "Gradle troubleshooting"
}, {
  "description": "The Android Manifest is an XML file which contains important metadata about the Android app.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/android-manifest.html",
  "title": "Android Manifest"
}, {
  "description": "APK expansion files are used as a solution for the 100MB app size limit in the Google Play Store.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/android-OBBsupport.html",
  "title": "Support for APK expansion files (OBB)"
}, {
  "description": "Android Remote is a Android application that makes your device act as a remote control for the project in Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/android-remote.html",
  "title": "Android Remote (DEPRECATED)"
}, {
  "description": "Whether you’re building an Android application in Unity or programming it from scratch, you must set up the Android Software Development Kit (SDK) before you can build and run any code on your Android device.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/android-sdksetup.html",
  "title": "Android environment setup"
}, {
  "description": "Single-pass stereo rendering is currently supported on Gear VR and Daydream devices.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Android-SinglePassStereoRendering.html",
  "title": "Single-Pass Stereo Rendering for Android"
}, {
  "description": "This section of the User Manual contains documentation on developing for the Android platform.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/android.html",
  "title": "Android"
}, {
  "description": "Android Archive (AAR) plug-ins are bundles that include compiled Java and native (C\/C++) code, resources, and an Android Manifest.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AndroidAARPlugins.html",
  "title": "AAR plug-ins and Android Libraries"
}, {
  "description": "JAR(Java Archive) plug-ins are primarily used to enable interaction with the Android OS or to call methods written in Java from within your C# scripts.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AndroidJARPlugins.html",
  "title": "JAR plug-ins"
}, {
  "description": "There are a number of device-specific properties that you can access when developing for mobile.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AndroidMobileAdvanced.html",
  "title": "Advanced Unity mobile scripting"
}, {
  "description": "If you use Unity Personal Edition to make your project, a default splash screen displays while your game loads.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AndroidMobileCustomizeSplashScreen.html",
  "title": "Customizing an Android Splash Screen"
}, {
  "description": "Unity supports native plug-ins for Android written in C\/C++ and packaged in a shared library (.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AndroidNativePlugins.html",
  "title": "Native (C++) plug-ins for Android"
}, {
  "description": "When developing a Unity Android application, it is possible to extend the standard UnityPlayerActivity class (the primary Java class for the Unity Player on Android, similar to AppController.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AndroidUnityPlayerActivity.html",
  "title": "Extending the UnityPlayerActivity Java Code"
}, {
  "description": "Animation Clips are one of the core elements to Unity’s animation system.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AnimationClips.html",
  "title": "Animation Clips"
}, {
  "description": "You can attach animation curves to imported animation clips in the Animatios tab.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AnimationCurvesOnImportedClips.html",
  "title": "Curves"
}, {
  "description": "The Animation Window in Unity allows you to create and modify Animation Clips directly inside Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AnimationEditorGuide.html",
  "title": "Animation Window Guide"
}, {
  "description": "Rotations in 3D applications are usually represented as Quaternions or Euler angles.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AnimationEulerCurveImport.html",
  "title": "Euler curve resampling"
}, {
  "description": "You can attach animation events to imported animation clips in the Animation tab.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AnimationEventsOnImportedClips.html",
  "title": "Events"
}, {
  "description": "Did you find this page useful? Please give it a rating:\r\n",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AnimationGlossary.html",
  "title": "A Glossary of animation terms"
}, {
  "description": "Unity uses Animation Layers for managing complex state machines for different body parts.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AnimationLayers.html",
  "title": "Animation Layers"
}, {
  "description": "Masking allows you to discard some of the animation data within a clip, allowing the clip to animate only parts of the object or character rather than the entire thing.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AnimationMaskOnImportedClips.html",
  "title": "Mask"
}, {
  "description": "Unity has a rich and sophisticated animation system (sometimes referred to as ‘Mecanim’).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AnimationOverview.html",
  "title": "Animation System Overview"
}, {
  "description": "Animation Parameters are variables that are defined within an Animator Controller that can be accessed and assigned values from scripts.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AnimationParameters.html",
  "title": "Animation Parameters"
}, {
  "description": "When an imported animation clip contains root motion, Unity uses that motion to drive the movement and rotation of the GameObject that is playing the animation.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AnimationRootMotionNodeOnImportedClips.html",
  "title": "Motion"
}, {
  "description": "Prior to the introduction of Mecanim, Unity used a simpler animation system.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Animations.html",
  "title": "Legacy Animation System"
}, {
  "description": "Unity’s Animation System allows you to create beautifully animated skinned characters.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AnimationScripting.html",
  "title": "Animation Scripting (Legacy)"
}, {
  "description": "Unity’s Animation features include retargetable animations, full control of animation weights at runtime, event calling from within the animation playback, sophisticated state machine hierarchies and transitions, blend shapes for facial animations, and much more.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AnimationSection.html",
  "title": "Animation"
}, {
  "description": "Animation from external sources is imported into Unity in the same way as regular 3D files.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AnimationsImport.html",
  "title": "Animation from external sources "
}, {
  "description": "In complex state machines, it is useful to preview the operation of some parts of the machine separately.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AnimationSoloMute.html",
  "title": "Solo and Mute functionality"
}, {
  "description": "It is common for a character or other animated Game Object to have several different animations that correspond to different actions it can perform in the game.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AnimationStateMachines.html",
  "title": "Animation State Machines"
}, {
  "description": "When you have an animation clips ready to use, you need to use an Animator Controller to bring them together.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Animator.html",
  "title": "The Animator Controller Asset"
}, {
  "description": "You can view and set up character behavior from the Animator Controller view (Menu: Window > Animator Controller).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AnimatorControllerCreation.html",
  "title": "Creating an AnimatorController"
}, {
  "description": "An Animator Controller allows you to arrange and maintain a set of animations for a character or other animated Game Object.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AnimatorControllers.html",
  "title": "Animator Controllers"
}, {
  "description": "The Animator Override Controller is a type of asset which allows you to extend an existing Animator Controller, replacing the specific animations used but otherwise retaining the original’s structure, parameters and logic.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AnimatorOverrideController.html",
  "title": "Animator Override Controllers"
}, {
  "description": "The Animator Window allows you to create, view and modify Animator Controller assets.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AnimatorWindow.html",
  "title": "The Animator Window"
}, {
  "description": "Box Selection is used to select multiple keys while viewing the Animation window in Dopesheet mode.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/animeditor-AdvancedKeySelectionAndManipulation.html",
  "title": "Key manipulation in Dopesheet mode"
}, {
  "description": "Once you have saved the new Animation clip Asset, you are ready to begin adding keyframes to the clip.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/animeditor-AnimatingAGameObject.html",
  "title": "Animating a GameObject"
}, {
  "description": "In an Animation Clip, any animatable property can have an Animation Curve, which means that the Animation Clip controls how that property changes over time.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/animeditor-AnimationCurves.html",
  "title": "Using Animation Curves"
}, {
  "description": "You can increase the usefulness of Animation clips by using Animation Events, which allow you to call functions in the object’s script at specified points in the timeline.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/animeditor-AnimationEvents.html",
  "title": "Using Animation Events"
}, {
  "description": "To animate GameObjects in Unity, the object or objects need an Animator Component attached.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/animeditor-CreatingANewAnimationClip.html",
  "title": "Creating a New Animation Clip"
}, {
  "description": "Box Selection is used to select multiple keys while viewing the Animation window in Curves mode.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/animeditor-KeyManipulationInCurvesMode.html",
  "title": "Key manipulation in Curves mode"
}, {
  "description": "You may want to animate Game Objects that have multiple moving parts, such as a gun turret with a moving barrel, or a character with many body parts.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/animeditor-MultipleParts.html",
  "title": "Objects with Multiple Moving Parts"
}, {
  "description": "The Animation view is used to preview and edit Animation Clips for animated GameObjects in Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/animeditor-UsingAnimationEditor.html",
  "title": "Using the Animation view"
}, {
  "description": "Sometimes, during development of the Unity software, we make the decision to change and improve the way the classes, functions and properties (the API) work.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/APIUpdater.html",
  "title": "Using the Automatic API Updater"
}, {
  "description": "This section of the User Manual contains documentation on developing for the Apple Mac platform.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AppleMac.html",
  "title": "Apple Mac"
}, {
  "description": "This section of the User Manual contains documentation on developing for the Apple TV platform.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AppleTV.html",
  "title": "Apple TV"
}, {
  "description": "The Apple store and iOS optimize the installation of iOS, tvOS, and watchOS apps by tailoring app delivery to the capabilities of a user’s particular device.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AppThinning.html",
  "title": "App thinning"
}, {
  "description": "In versions of Unity earlier than Unity 5, assets dependencies had to be defined using editor scripts alone.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AssetBundleDependencies4x.html",
  "title": "Managing Asset Dependencies in Unity 4"
}, {
  "description": "\r\nNOTE: This tool is extra functionality to Unity’s standard functionality.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AssetBundles-Browser.html",
  "title": "Unity Asset Bundle Browser tool"
}, {
  "description": "In the documentation on the AssetBundle Workflow, we have a code sample which passes three arguments to the BuildPipeline.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AssetBundles-Building.html",
  "title": "Building AssetBundles"
}, {
  "description": "AssetBundles can become dependent on other AssetBundles if one or more of the UnityEngine.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AssetBundles-Dependencies.html",
  "title": "AssetBundle Dependencies"
}, {
  "description": "The AssetBundle Manager, which can be downloaded here, is a tool made by Unity to make using AssetBundles more streamlined.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AssetBundles-Manager.html",
  "title": "AssetBundle Manager"
}, {
  "description": "There are four different APIs that you can use to load AssetBundles.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AssetBundles-Native.html",
  "title": "Using AssetBundles Natively"
}, {
  "description": "Patching AssetBundles is as simple as downloading a new AssetBundle and replacing the existing one.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AssetBundles-Patching.html",
  "title": "Patching with AssetBundles"
}, {
  "description": "When using AssetBundles you are free to assign any asset to any bundle you desire.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AssetBundles-Preparing.html",
  "title": "Preparing Assets for AssetBundles"
}, {
  "description": "This section describes several problems that commonly appear in projects using AssetBundles.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AssetBundles-Troubleshooting.html",
  "title": "Troubleshooting"
}, {
  "description": "To get started with AssetBundles, follow these steps.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AssetBundles-Workflow.html",
  "title": "AssetBundle Workflow"
}, {
  "description": "Unity 4.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AssetBundles4x.html",
  "title": "Legacy Asset Bundles"
}, {
  "description": "An AssetBundle is an archive file containing platform specific Assets (Models, Textures, Prefabs, Audio clips, and even entire Scenes) that can be loaded at runtime.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AssetBundlesIntro.html",
  "title": "AssetBundles"
}, {
  "description": "AssetDatabase is an API which allows you to access the assets contained in your project.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AssetDatabase.html",
  "title": "AssetDatabase"
}, {
  "description": "Unity uses two types of packages:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AssetPackages.html",
  "title": "Asset packages"
}, {
  "description": "\r\nPlasticSCM\r\nPerForce\r\n",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AssetServer.html",
  "title": "Asset Server (Team License)"
}, {
  "description": "The Unity Asset Store is home to a growing library of free and commercial Assets created both by Unity Technologies and also members of the community.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AssetStore.html",
  "title": "Using the Asset Store"
}, {
  "description": "The Publisher Administration section is a place where you can manage your presence as a publisher.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AssetStoreAdmin.html",
  "title": "Publisher Admin Section Overview"
}, {
  "description": "Google Analytics is a web-based information center that displays statistics on websites and web pages.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AssetStoreAnalytics.html",
  "title": "Setting up Google Analytics"
}, {
  "description": "All payouts are scheduled for the 15th of each month",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AssetStoreFAQ.html",
  "title": "Asset Store FAQ"
}, {
  "description": "This is the table of contents for all asset store related subjects for both customers and publishers.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AssetStoreHOWTO.html",
  "title": "Asset Store Manual"
}, {
  "description": "Keywords are just a space delimited list of keywords that publishers use to influence their asset’s results in Asset Store’s search.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AssetStoreMassLabeler.html",
  "title": "Adding Keywords to Assets"
}, {
  "description": "If you would like your Asset package to be included in any of Unity’s promotional sales, please apply to join a sale via the Asset Store Sales Application Form page.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AssetStorePromotion.html",
  "title": "Asset Store promotions"
}, {
  "description": "Open the Asset Store, sign in, and download the latest version of Asset Store Tools.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AssetStorePublisherAdministration.html",
  "title": "Asset Store Publisher Administration"
}, {
  "description": "This section of the User Manual describes how to publish and manage Assets in the Unity Asset Store.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AssetStorePublishing.html",
  "title": "Asset Store Publishing"
}, {
  "description": "Visit the Publisher Administration page and log in with your Unity Account.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AssetStorePublishingGuide.html",
  "title": "Asset Store Publishing Guide"
}, {
  "description": "Customers may contact you to request a refund on your asset.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AssetStoreRefunding.html",
  "title": "Refunding your customers"
}, {
  "description": "To disable an assets that you have successfully published to the Asset Store, email assetstore@unity3d.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AssetStoreRemoving.html",
  "title": "Removing your Assets from the Asset Store"
}, {
  "description": "You can view the publishing status of your asset via the Pending tab in your Publisher Administration Page\r\n",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AssetStoreStatus.html",
  "title": "Viewing the status of your Asset Store submissions"
}, {
  "description": "As an Asset Store publisher, you are required to provide customer support on all your published assets.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AssetStoreSupport.html",
  "title": "Providing support"
}, {
  "description": "Unity supports most common image file types, such as BMP, TIF, TGA, JPG, and PSD.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AssetTypes.html",
  "title": "Common types of Assets"
}, {
  "description": "These steps will give you a general overview of the basic principles of working with assets in Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AssetWorkflow.html",
  "title": "Asset Workflow"
}, {
  "description": "Unity allows you to assign custom icons for GameObjects and scripts.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AssigningIcons.html",
  "title": "Assigning icons"
}, {
  "description": "Asynchronous Texture Upload enables asynchronous loading of Texture Data from disk and enables time-sliced upload to GPU on the Render-thread.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AsyncTextureUpload.html",
  "title": "Asynchronous Texture Upload"
}, {
  "description": "\r\nAttributes are markers that can be placed above a class, property or function in a script to indicate special behaviour.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Attributes.html",
  "title": "Attributes"
}, {
  "description": "Unity’s Audio features include full 3D spatial sound, real-time mixing and mastering, hierarchies of mixers, snapshots, predefined effects and much more.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Audio.html",
  "title": "Audio"
}, {
  "description": "As with Meshes or Textures, the workflow for Audio File assets is designed to be smooth and trouble free.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AudioFiles.html",
  "title": "Audio files"
}, {
  "description": "The Unity Audio Mixer allows you to mix various audio sources, apply effects to them, and perform mastering.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AudioMixer.html",
  "title": "Audio Mixer"
}, {
  "description": "Selecting an AudioGroup in the AudioGroup Hierarchy, the AudioGroup View or the Project window (as a sub-asset) will show the inspector for that AudioGroup.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AudioMixerInspectors.html",
  "title": "AudioGroup Inspector"
}, {
  "description": "This document describes the built-in native audio plugin interface of Unity 5.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AudioMixerNativeAudioPlugin.html",
  "title": "Native Audio Plugin SDK"
}, {
  "description": "The AudioMixer is an Asset that can be referenced by AudioSources to provide more complex routing and mixing of the audio signal generated from AudioSources.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AudioMixerOverview.html",
  "title": "An overview of the concepts and AudioMixer"
}, {
  "description": "The Mixers Panel shows a complete list of all AudioMixers within the project.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AudioMixerSpecifics.html",
  "title": "Specifics on the AudioMixer window"
}, {
  "description": "The AudioMixer is a very self-contained asset with a streamlined API.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AudioMixerUsage.html",
  "title": "Overview of Usage and API"
}, {
  "description": "A game would be incomplete without some kind of audio, be it background music or sound effects.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AudioOverview.html",
  "title": "Audio Overview"
}, {
  "description": "The profiler window contains an audio pane that can reveal detailed information about performance metrics and a log for any audio activity for the past rendered frames.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AudioProfiler.html",
  "title": "Audio Profiler"
}, {
  "description": "Did you find this page useful? Please give it a rating:\r\n",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AudioReference.html",
  "title": "Audio Reference"
}, {
  "description": "The audio spatializer SDK is an extension of the native audio plugin SDK that allows changing the way audio is transmitted from an audio source into the surrounding space.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AudioSpatializerSDK.html",
  "title": "Audio Spatializer SDK"
}, {
  "description": "Unity’s Animation System has special features for working with humanoid characters.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/AvatarCreationandSetup.html",
  "title": "Humanoid Avatars"
}, {
  "description": "Unity automatically imports assets and manages various kinds of additional data about them for you, such as what import settings should be used to import the asset, and where the asset is used throughout your project.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/BehindtheScenes.html",
  "title": "Behind the Scenes"
}, {
  "description": "Learn production-tested best practices from our Enterprise Support engineers and the Unity R&D Content team.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/BestPracticeGuides.html",
  "title": "Best practice guides"
}, {
  "description": "This Best Practice Guide looks at the fundamental steps for setting up a good baseline for believable visuals.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/BestPracticeMakingBelievableVisuals.html",
  "title": "Making believable visuals in Unity"
}, {
  "description": "The first step is to get your Assets into a format suitable for what you want to do.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/BestPracticeMakingBelievableVisuals1.html",
  "title": "Preparing Assets for Unity"
}, {
  "description": "The following advice helps you understand how to use Unity’s rendering features to realistically mimic the real world, and quickly achieve your project’s believable visual goal.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/BestPracticeMakingBelievableVisuals2.html",
  "title": "Preparing render settings in Unity"
}, {
  "description": "Before starting to create final Assets and approach lighting for a Scene, you need to figure out your lighting strategy.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/BestPracticeMakingBelievableVisuals3.html",
  "title": "Lighting strategy"
}, {
  "description": "It’s really important to plan ahead before modeling.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/BestPracticeMakingBelievableVisuals4.html",
  "title": "Modelling"
}, {
  "description": "Materials define how light reacts with the surface of a model, and are an essential ingredient in making believable visuals.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/BestPracticeMakingBelievableVisuals5.html",
  "title": "Shading"
}, {
  "description": "At this stage, you should have meshes that are properly textured and an assembled Scene with proper tonemapped Unity render settings.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/BestPracticeMakingBelievableVisuals6.html",
  "title": "Outdoor lighting and Scene setup"
}, {
  "description": "For indoor and local lighting, consider the following:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/BestPracticeMakingBelievableVisuals7.html",
  "title": "Indoor and local lighting"
}, {
  "description": "Post-processes are rendering effects that are based on an existing rendered Scene.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/BestPracticeMakingBelievableVisuals8.html",
  "title": "Understanding post-processing"
}, {
  "description": "Dynamically-lit GameObjects, especially large GameObjects, require more tricks than their static counterparts.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/BestPracticeMakingBelievableVisuals9.html",
  "title": "Dynamic lighting"
}, {
  "description": "This Best Practice Guide is a companion piece to the Unite Unity Europe 2016 talk Optimizing Mobile Applications.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/BestPracticeUnderstandingPerformanceInUnity.html",
  "title": "Understanding optimization in Unity"
}, {
  "description": "When discussing performance, it is vital to remember that all optimization attempts must start with a discovery process.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/BestPracticeUnderstandingPerformanceInUnity1.html",
  "title": "Profiling"
}, {
  "description": "Memory consumption is a critical performance indicator, and is especially important on platforms with limited memory resources, such as low-end mobile devices.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/BestPracticeUnderstandingPerformanceInUnity2.html",
  "title": "Memory"
}, {
  "description": "Coroutines execute differently from other script code.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/BestPracticeUnderstandingPerformanceInUnity3.html",
  "title": "Coroutines"
}, {
  "description": "Another common problem faced by many Unity developers is the unexpected expansion of the managed heap.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/BestPracticeUnderstandingPerformanceInUnity4-1.html",
  "title": "Understanding the managed heap"
}, {
  "description": "Many of the problems found in real projects occur because of honest mistakes – temporary “test” changes and misclicks by a tired developer can silently add poorly-performing Assets, or change the import settings of existing Assets.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/BestPracticeUnderstandingPerformanceInUnity4.html",
  "title": "Asset auditing"
}, {
  "description": "Handling strings and text is a common source of performance problems in Unity projects.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/BestPracticeUnderstandingPerformanceInUnity5.html",
  "title": "Strings and text"
}, {
  "description": "The Resources folder is a common source of many problems in Unity projects.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/BestPracticeUnderstandingPerformanceInUnity6.html",
  "title": "The Resources folder"
}, {
  "description": "There are as many different ways to optimize code as there are reasons for performance problems.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/BestPracticeUnderstandingPerformanceInUnity7.html",
  "title": "General Optimizations"
}, {
  "description": "While the previous section described optimizations applicable to all projects, this section details optimizations that should not be applied prior to gathering profiling data.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/BestPracticeUnderstandingPerformanceInUnity8.html",
  "title": "Special optimizations"
}, {
  "description": "Once you have your Blend Shapes set up in Maya:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/BlendShapes.html",
  "title": "Animation Blend Shapes"
}, {
  "description": "The first option in the Inspector of a Blend Node is the Blend Type.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/BlendTree-1DBlending.html",
  "title": "1D Blending"
}, {
  "description": "The first option in the Inspector of a Blend Node is the Blend Type.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/BlendTree-2DBlending.html",
  "title": "2D Blending"
}, {
  "description": "The options below are common to both 1D and 2D blending.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/BlendTree-AdditionalOptions.html",
  "title": "Additional Blend Tree Options"
}, {
  "description": "Using a Direct Blend Tree allows you to map animator parameters directly to the weight of a BlendTree child.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/BlendTree-DirectBlending.html",
  "title": "Direct Blending"
}, {
  "description": "In versions of Unity earlier than Unity 5, assets had to be selected and added to bundles using editor scripts alone.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/BuildingAssetBundles4x.html",
  "title": "Creating Asset Bundles in Unity 4"
}, {
  "description": "When building a player, you sometimes want to modify the built player in some way.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/BuildPlayerPipeline.html",
  "title": "Build Player Pipeline"
}, {
  "description": "The Build Settings window allows you to choose your target platform, adjust settings for your build, and start the build process.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/BuildSettings.html",
  "title": "Build Settings"
}, {
  "description": "Prior to the introduction of the Physically Based Standard Shader, Unity was supplied with more than eighty built-in shaders which each served different purposes.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Built-inShaderGuide.html",
  "title": "Legacy Shaders"
}, {
  "description": "Unity has a completely automatic Asset pipeline.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/CacheServer.html",
  "title": "Cache Server"
}, {
  "description": "In the section Understanding the View Frustum, it was explained that any point in the camera’s view corresponds to a line in world space.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/CameraRays.html",
  "title": "Rays from the Camera"
}, {
  "description": "Just as cameras are used in films to display the story to the audience, Cameras in Unity are used to display the game world to the player.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Cameras.html",
  "title": "Cameras"
}, {
  "description": "A Unity scene is created by arranging and moving objects in a three-dimensional space.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/CamerasOverview.html",
  "title": "Cameras"
}, {
  "description": "This section contains more detailed information on Cameras.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/CamerasReference.html",
  "title": "Cameras Reference"
}, {
  "description": "It is useful to understand how the camera works when designing certain visual effects or interactions with objects in the scene.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/CameraTricks.html",
  "title": "Camera Tricks"
}, {
  "description": "The character in a first- or third-person game will often need some collision-based physics so that it doesn’t fall through the floor or walk through walls.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/CharacterControllers.html",
  "title": "Character Controllers"
}, {
  "description": "An Aim Constraint rotates a GameObject to face its source GameObjects.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AimConstraint.html",
  "title": "Aim Constraints"
}, {
  "description": "Use the Analytics Event Tracker component to send both Standard and Custom Events.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AnalyticsEventTracker.html",
  "title": "Analytics Event Tracker"
}, {
  "description": "This is the Legacy Animation component, which was used on GameObjects for animation purposes prior to the introduction of Unity’s current animation system.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-Animation.html",
  "title": "Animation"
}, {
  "description": "\r\nAnimation Clips are the smallest building blocks of animation in Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AnimationClip.html",
  "title": "Animation tab"
}, {
  "description": "The Animator component is used to assign animation to a GameObject in your scene.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-Animator.html",
  "title": "Animator Component"
}, {
  "description": "An Animator Controller allows you to arrange and maintain a set of Animation Clips and associated Animation Transitions for a character or object.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AnimatorController.html",
  "title": "Animator Controller"
}, {
  "description": "The Area Effector 2D applies forces within an area defined by the attached Collider 2Ds when another (target) Collider 2D comes into contact with the Effector 2D.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AreaEffector2D.html",
  "title": "Area Effector 2D"
}, {
  "description": "The Audio Chorus Effect takes an Audio Mixer group output and processes it creating a chorus effect.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AudioChorusEffect.html",
  "title": "Audio Chorus Effect"
}, {
  "description": "The Audio Chorus Filter takes an Audio Clip and processes it creating a chorus effect.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AudioChorusFilter.html",
  "title": "Audio Chorus Filter"
}, {
  "description": "\r\nAudio Clips contain the audio data used by Audio Sources.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AudioClip.html",
  "title": "Audio Clip"
}, {
  "description": "The Audio Compressor Effect reduces the volume of loud sounds or amplifies quiet sounds by narrowing or “compressing” an audio signal’s dynamic range.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AudioCompressor.html",
  "title": "Audio Compressor Effect"
}, {
  "description": "The Distortion Effect distorts the sound from an AudioMixer group.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AudioDistortionEffect.html",
  "title": "Audio Distortion Effect"
}, {
  "description": "The Audio Distortion Filter distorts the sound from an AudioSource or sounds reaching the AudioListener.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AudioDistortionFilter.html",
  "title": "Audio Distortion Filter"
}, {
  "description": "The Audio Echo Effect repeats a sound after a given Delay, attenuating the repetitions based on the Decay Ratio.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AudioEchoEffect.html",
  "title": "Audio Echo Effect"
}, {
  "description": "The Audio Echo Filter repeats a sound after a given Delay, attenuating the repetitions based on the Decay Ratio.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AudioEchoFilter.html",
  "title": "Audio Echo Filter"
}, {
  "description": "You can modify the output of Audio Source and Audio Listener components by applying Audio Effects.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AudioEffect.html",
  "title": "Audio Filters"
}, {
  "description": "You can modify the output of Audio Mixer components by applying Audio Effects.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AudioEffectMixer.html",
  "title": "Audio Effects"
}, {
  "description": "The Audio Flange Effect is used to create the audio effect produced by mixing two identical signals together, one signal delayed by a small and gradually changing period, usually smaller than 20 milliseconds.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AudioFlangeEffect.html",
  "title": "Audio Flange Effect"
}, {
  "description": "The Highpass Effect passes high frequencies of an AudioMixer group and cuts off signals with frequencies lower than the Cutoff Frequency.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AudioHighPassEffect.html",
  "title": "Audio High Pass Effect"
}, {
  "description": "The Audio High Pass Filter passes high frequencies of an AudioSource and cuts off signals with frequencies lower than the Cutoff Frequency.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AudioHighPassFilter.html",
  "title": "Audio High Pass Filter"
}, {
  "description": "The Highpass Simple Effect passes high frequencies of an AudioMixer group and cuts off signals with frequencies lower than the Cutoff Frequency.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AudioHighPassSimpleEffect.html",
  "title": "Audio High Pass Simple Effect"
}, {
  "description": "The Audio Listener acts as a microphone-like device.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AudioListener.html",
  "title": "Audio Listener"
}, {
  "description": "The Audio Low Pass Effect passes low frequencies of an AudioMixer group while removing frequencies higher than the Cutoff Frequency.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AudioLowPassEffect.html",
  "title": "Audio Low Pass Effect"
}, {
  "description": "The Audio Low Pass Filter passes low frequencies of an AudioSource or all sound reaching an AudioListener while removing frequencies higher than the Cutoff Frequency.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AudioLowPassFilter.html",
  "title": "Audio Low Pass Filter"
}, {
  "description": "The Audio Low Pass Simple Effect passes low frequencies of an AudioMixer group while removing frequencies higher than the Cutoff Frequency.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AudioLowPassSimpleEffect.html",
  "title": "Audio Low Pass Simple Effect"
}, {
  "description": "The Audio Manager allows you to tweak the maximum volume of all sounds playing in the scene.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AudioManager.html",
  "title": "Audio Manager"
}, {
  "description": "When you select Add you can select from a list of effects that can be applied to the group.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AudioMixer.html",
  "title": "Audio Mixer"
}, {
  "description": "The Audio Normalize Effect applies a constant amount of gain to an audio stream to bring the average or peak amplitude to a target level.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AudioNormalizeEffect.html",
  "title": "Audio Normalize Effect"
}, {
  "description": "The Audio Param EQ Effect is used to alter the frequency response of an audio system using linear filters.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AudioParamEQEffect.html",
  "title": "Audio Parametric Equalizer Effect"
}, {
  "description": "The Audio Pitch Shifter Effect is used to shift a signal up or down in pitch.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AudioPitchShifterEffect.html",
  "title": "Audio Pitch Shifter Effect"
}, {
  "description": "The SFX Reverb Effect takes the output of an Audio Mixer group and distorts it to create a custom reverb effect.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AudioReverbEffect.html",
  "title": "Audio SFX Reverb Effect"
}, {
  "description": "The Audio Reverb Filter takes an Audio Clip and distorts it to create a custom reverb effect.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AudioReverbFilter.html",
  "title": "Audio Reverb Filter"
}, {
  "description": "\r\nReverb Zones take an Audio Clip and distorts it depending where the audio listener is located inside the reverb zone.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AudioReverbZone.html",
  "title": "Reverb Zones"
}, {
  "description": "The AudioSettings class contains various bits of global information relating to the sound system, but most importantly it contains API that allows resetting the audio system at runtime in order to change settings such as speaker mode, sample rate (if supported by the platform), DSP buffer size and real\/virtual voice counts.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AudioSettings.html",
  "title": "Audio Settings"
}, {
  "description": "The Audio Source plays back an Audio Clip in the scene.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AudioSource.html",
  "title": "Audio Source"
}, {
  "description": "After you save the scene, the Avatar Mapping tab appears in the Inspector displaying Unity’s bone mapping:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-Avatar.html",
  "title": "Avatar Mapping tab"
}, {
  "description": "There are two ways to define which parts of your animation should be masked: ",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-AvatarMask.html",
  "title": "Avatar Mask window"
}, {
  "description": "A Billboard Asset is a collection of pre-rendered images of a more complicated Mesh intended for use with the Billboard Renderer, in order to render an object at some distance from a Camera at a lower level of detail (LOD) to save on rendering time.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-BillboardAsset.html",
  "title": "Billboard Asset"
}, {
  "description": "The Billboard Renderer renders BillboardAssets, either from a premade Asset (exported from SpeedTree) or from a custom-created file (created using a script at runtime or from a custom editor, for example).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-BillboardRenderer.html",
  "title": "Billboard Renderer"
}, {
  "description": "A common task in game animation is to blend between two or more similar motions.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-BlendTree.html",
  "title": "Blend Trees"
}, {
  "description": "The Box Collider is a basic cube-shaped collision primitive.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-BoxCollider.html",
  "title": "Box Collider"
}, {
  "description": "The Box Collider 2D component is a Collider for use with 2D physics.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-BoxCollider2D.html",
  "title": "Box Collider 2D"
}, {
  "description": "The Buoyancy Effector 2D defines simple fluid behaviour such as floating and the drag and flow of fluid.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-BuoyancyEffector2D.html",
  "title": "Buoyancy Effector 2D"
}, {
  "description": "\r\nCameras are the devices that capture and display the world to the player.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-Camera.html",
  "title": "Camera"
}, {
  "description": "The Canvas component represents the abstract space in which the UI is laid out and rendered.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-Canvas.html",
  "title": "Canvas"
}, {
  "description": "The Canvas Group can be used to control certain aspects of a whole group of UI elements from one place without needing to handle them each individually.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-CanvasGroup.html",
  "title": "Canvas Group"
}, {
  "description": "The Canvas Renderer component renders a graphical UI object contained within a Canvas.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-CanvasRenderer.html",
  "title": "Canvas Renderer"
}, {
  "description": "The Capsule Collider is made of two half-spheres joined together by a cylinder.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-CapsuleCollider.html",
  "title": "Capsule Collider"
}, {
  "description": "The Capsule Collider 2D component is a 2D physics primitive that you can elongate in either a vertical or horizontal direction.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-CapsuleCollider2D.html",
  "title": "Capsule Collider 2D"
}, {
  "description": "The Character Controller is mainly used for third-person or first-person player control that does not make use of Rigidbody physics.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-CharacterController.html",
  "title": "Character Controller"
}, {
  "description": "\r\nCharacter Joints are mainly used for Ragdoll effects.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-CharacterJoint.html",
  "title": "Character Joint"
}, {
  "description": "The Circle Collider 2D class is a collider for use with 2D physics.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-CircleCollider2D.html",
  "title": "Circle Collider 2D"
}, {
  "description": "The Cloth component works with the Skinned Mesh Renderer to provide a physics-based solution for simulating fabrics.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-Cloth.html",
  "title": "Cloth"
}, {
  "description": "The Composite Collider 2D component is a Collider for use with 2D physics.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-CompositeCollider2D.html",
  "title": "Composite Collider 2D"
}, {
  "description": "\r\nConfigurable Joints are extremely customisable since they incorporate all the functionality of the other joint types.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-ConfigurableJoint.html",
  "title": "Configurable Joint"
}, {
  "description": "\r\nConstant Force is a quick utility for adding constant forces to a Rigidbody.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-ConstantForce.html",
  "title": "Constant Force"
}, {
  "description": "\r\nConstant Force 2D is a quick utility for adding constant forces to a Rigidbody 2D.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-ConstantForce2D.html",
  "title": "Constant Force 2D"
}, {
  "description": "A Cubemap is a collection of six square textures that represent the\r\nreflections on an environment.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-Cubemap.html",
  "title": "Cubemap"
}, {
  "description": "\r\nDistance Joint 2D is a 2D joint that attaches two GameObjects controlled by Rigidbody 2D physics, and keeps them a certain distance apart.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-DistanceJoint2D.html",
  "title": "Distance Joint 2D"
}, {
  "description": "The Edge Collider 2D component is a Collider for use with 2D physics.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-EdgeCollider2D.html",
  "title": "Edge Collider 2D"
}, {
  "description": "2017–11–03 Documentation updated to reflect multiple changes since 5.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-EditorManager.html",
  "title": "Editor Settings"
}, {
  "description": "The Ellipsoid Particle Emitter spawns particles inside a sphere.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-EllipsoidParticleEmitter.html",
  "title": "Ellipsoid Particle Emitter (Legacy)"
}, {
  "description": "When you put Model files in the Assets folder under your Unity Project, Unity automatically imports and stores them as Unity Assets.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-FBXImporter.html",
  "title": "Model Import Settings window"
}, {
  "description": "\r\nFixed Joints restricts an object’s movement to be dependent upon another object.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-FixedJoint.html",
  "title": "Fixed Joint"
}, {
  "description": "Apply this component to two GameObjects controlled by Rigidbody 2D physics to keep them in a position relative to each other, so the GameObjects are always offset at a given position and angle.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-FixedJoint2D.html",
  "title": "Fixed Joint 2D"
}, {
  "description": "\r\nFlare objects are the source assets that are used by Lens Flare Components.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-Flare.html",
  "title": "Flare"
}, {
  "description": "The Flare Layer Component can be attached to Cameras to make Lens Flares appear in the image.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-FlareLayer.html",
  "title": "Flare Layer"
}, {
  "description": "\r\nFonts can be created or imported for use in either the GUI Text or the Text Mesh Components.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-Font.html",
  "title": "Font"
}, {
  "description": "The Friction Joint 2D connects GameObjects controlled by Rigidbody 2D physics.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-FrictionJoint2D.html",
  "title": "Friction Joint 2D"
}, {
  "description": "\r\nGameObjects are the fundamental objects in Unity that represent characters, props and scenery.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-GameObject.html",
  "title": "GameObject"
}, {
  "description": "This is an experimental setting which allows you to define a series of commands to control exactly how the Scene should be rendered (instead of using the default rendering pipeline used by Unity).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-GraphicsSettings.html",
  "title": "Graphics Settings"
}, {
  "description": "\r\nPlease Note: This component relates to legacy methods for drawing UI textures and images to the screen.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-GUILayer.html",
  "title": "GUI Layer (Legacy)"
}, {
  "description": "\r\nGUISkins are a collection of GUIStyles that can be applied to your GUI.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-GUISkin.html",
  "title": "GUI Skin (IMGUI System)"
}, {
  "description": "\r\nGUI Styles are a collection of custom attributes for use with UnityGUI.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-GUIStyle.html",
  "title": "GUI Style (IMGUI System)"
}, {
  "description": "\r\nGUI Text displays text of any font you import in screen coordinates.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-GUIText.html",
  "title": "GUI Text (Legacy UI Component)"
}, {
  "description": "\r\nPlease Note: This component relates to legacy methods for drawing UI textures and images to the screen.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-GUITexture.html",
  "title": "GUI Texture (Legacy UI Component)"
}, {
  "description": "\r\nHalos are light areas around light sources, used to give the impression of small dust particles in the air.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-Halo.html",
  "title": "Halo"
}, {
  "description": "The Hinge Joint groups together two Rigidbodies, constraining them to move like they are connected by a hinge.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-HingeJoint.html",
  "title": "Hinge Joint"
}, {
  "description": "The Hinge Joint 2D component allows a GameObject controlled by RigidBody 2D physics to be attached to a point in space around which it can rotate.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-HingeJoint2D.html",
  "title": "Hinge Joint 2D"
}, {
  "description": "A Human Template file (*.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-HumanTemplate.html",
  "title": "Human Template window"
}, {
  "description": "The Input Manager is where you define all the different input axes and game actions for your project.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-InputManager.html",
  "title": "Input Manager"
}, {
  "description": "\r\nLens Flares simulate the effect of lights refracting inside camera lens.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-LensFlare.html",
  "title": "Lens Flare"
}, {
  "description": "Lights determine the shading of an object and the shadows it casts.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-Light.html",
  "title": "The Light Inspector"
}, {
  "description": "A Lightmap Parameters Asset stores a set of values for the parameters which control Unity’s Global Illumination (GI) features.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-LightmapParameters.html",
  "title": "Lightmap Parameters"
}, {
  "description": "To place Light Probes in your scene, you must use a GameObject with a Light Probe Group component attached.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-LightProbeGroup.html",
  "title": "Placing Light Probes"
}, {
  "description": "The Light Probe Proxy Volume (LPPV) component allows you to use more lighting information for large dynamic GameObjects that cannot use baked lightmaps (for example, large Particle Systems or skinned Meshes).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-LightProbeProxyVolume.html",
  "title": "Light Probe Proxy Volume component"
}, {
  "description": "The Line Renderer component takes an array of two or more points in 3D space, and draws a straight line between each one.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-LineRenderer.html",
  "title": "Line Renderer"
}, {
  "description": "As your scenes get larger, performance becomes a bigger consideration.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-LODGroup.html",
  "title": "LOD Group"
}, {
  "description": "Materials are used in conjunction with Mesh Renderers, Particle Systems and other rendering components used in Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-Material.html",
  "title": "Material"
}, {
  "description": "\r\nMeshes make up a large part of your 3D worlds.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-Mesh.html",
  "title": "Meshes"
}, {
  "description": "The Mesh Collider takes a Mesh Asset and builds its Collider based on that Mesh.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-MeshCollider.html",
  "title": "Mesh Collider"
}, {
  "description": "The Mesh Filter takes a mesh from your assets and passes it to the Mesh Renderer for rendering on the screen.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-MeshFilter.html",
  "title": "Mesh Filter"
}, {
  "description": "The Mesh Particle Emitter emits particles around a mesh.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-MeshParticleEmitter.html",
  "title": "Mesh Particle Emitter (Legacy)"
}, {
  "description": "The Mesh Renderer takes the geometry from the Mesh Filter and renders it at the position defined by the object’s Transform component.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-MeshRenderer.html",
  "title": "Mesh Renderer"
}, {
  "description": "The Microphone class is useful for capturing input from a built-in (physical) microphone on your PC or mobile device.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-Microphone.html",
  "title": "Microphone"
}, {
  "description": "See documentation on the execution order of event functions to learn how Unity handle event functions by default.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-MonoManager.html",
  "title": "Script Execution Order Settings"
}, {
  "description": "\r\nMovie Textures are animated Textures that are created from a video file.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-MovieTexture.html",
  "title": "Movie Texture"
}, {
  "description": "The NavMesh Modifier Volume component is not in the Unity standard install; see documentation on high-level NavMesh building components for information on how to access it.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-NavMesh-ModifierVolume.html",
  "title": "NavMesh Modifier Volume"
}, {
  "description": "NavMeshAgent components help you to create characters which avoid each other while moving towards their goal.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-NavMeshAgent.html",
  "title": "NavMesh Agent"
}, {
  "description": "The NavMesh Link component is not in the Unity standard install; see documentation on high-level NavMesh building components for information on how to access it.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-NavMeshLink.html",
  "title": "NavMesh Link"
}, {
  "description": "NavMesh Modifiers adjust how a specific GameObject behaves during NavMesh baking at runtime.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-NavMeshModifier.html",
  "title": "NavMesh Modifier"
}, {
  "description": "The Nav Mesh Obstacle component allows you to describe moving obstacles that Nav Mesh Agents should avoid while navigating the world (for example, barrels or crates controlled by the physics system).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-NavMeshObstacle.html",
  "title": "Nav Mesh Obstacle"
}, {
  "description": "The NavMesh Surface component represents the walkable area for a specific NavMesh Agent type, and defines a part of the Scene where a NavMesh should be built.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-NavMeshSurface.html",
  "title": "NavMesh Surface"
}, {
  "description": "The Network Animator component allows you to synchronize animation states for networked objects.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-NetworkAnimator.html",
  "title": "Network Animator"
}, {
  "description": "NetworkBehaviour scripts work with GameObjects that have a Network Identity component.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-NetworkBehaviour.html",
  "title": "NetworkBehaviour"
}, {
  "description": "\r\nNetworkClient is a high-level API class that manages a network connection from a client to a server, and can send and receive messages between the client and the server.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-NetworkClient.html",
  "title": "NetworkClient"
}, {
  "description": "NetworkConnection is a high-level API class that encapsulates a network connection.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-NetworkConnection.html",
  "title": "NetworkConnection "
}, {
  "description": "Network Discovery is a component that allows Unity applications using the networking system to find each other on a local network (LAN).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-NetworkDiscovery.html",
  "title": "Network Discovery"
}, {
  "description": "The Network Identity component is at the heart of the Unity networking high-level API.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-NetworkIdentity.html",
  "title": "Network Identity"
}, {
  "description": "The NetworkLobbyManager is a specialized type of NetworkManager that provides a multiplayer lobby before entering the main play scene of the game.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-NetworkLobbyManager.html",
  "title": "Network Lobby Manager"
}, {
  "description": "The Network Lobby Player stores per-player state for the Network Lobby Manager while in the lobby.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-NetworkLobbyPlayer.html",
  "title": "Network Lobby Player"
}, {
  "description": "(This class is part of the old networking system and is deprecated.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-NetworkManager.html",
  "title": "Network Manager"
}, {
  "description": "The Network Manager HUD is a simple and quick way to provide the basic functions that players of your game need in order to host a networked game, or find and join an existing networked game.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-NetworkManagerHUD.html",
  "title": "Network Manager HUD"
}, {
  "description": "The Network Manager component allows you to control the state of a networked game.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-NetworkManagerUNet.html",
  "title": "Network Manager"
}, {
  "description": "The Network Proximity Checker component controls the visibility of GameObjects for network clients, based on proximity to players.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-NetworkProximityChecker.html",
  "title": "Network Proximity Checker"
}, {
  "description": "NetworkServer is a High-Level-API class that manages connections from multiple clients.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-NetworkServer.html",
  "title": "NetworkServer "
}, {
  "description": "NetworkServerSimple is a High Level API (HLAPI) class that manages connections from multiple clients.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-NetworkServerSimple.html",
  "title": "NetworkServerSimple "
}, {
  "description": "NetworkStartPosition is used by the NetworkManager when creating player objects.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-NetworkStartPosition.html",
  "title": "NetworkStartPosition "
}, {
  "description": "The Network Transform component synchronizes the movement and rotation of GameObjects across the network.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-NetworkTransform.html",
  "title": "Network Transform"
}, {
  "description": "The Network Transform Child component synchronizes the position and rotation of the child GameObject of a GameObject with a Network Transform component.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-NetworkTransformChild.html",
  "title": "Network Transform Child"
}, {
  "description": "The Network Transform Visualizer is a utility component that allows you to visualize the interpolation of GameObjects that use the Network Transform component.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-NetworkTransformVisualizer.html",
  "title": "Network Transform Visualizer"
}, {
  "description": "(This class is part of the old networking system and is deprecated.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-NetworkView.html",
  "title": "Network View"
}, {
  "description": "To apply occlusion culling to moving objects you have to create an Occlusion Area and then modify its size to fit the space where the moving objects will be located (of course the moving objects cannot be marked as static).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-OcclusionArea.html",
  "title": "Occlusion Area"
}, {
  "description": "In order to create occlusion primitives which are openable and closable at runtime, Unity uses Occlusion Portals.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-OcclusionPortal.html",
  "title": "Occlusion Portals"
}, {
  "description": "OffMeshLink component allows you to incorporate navigation shortcuts which cannot be represented using a walkable surface.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-OffMeshLink.html",
  "title": "Off-Mesh Link"
}, {
  "description": "A Parent Constraint moves and rotates a GameObject as if it is the child of another GameObject in the Hierarchy window.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-ParentConstraint.html",
  "title": "Parent Constraints "
}, {
  "description": "\r\nParticle Animators move your particles over time, you use them to apply wind, drag & color cycling to your particle systems.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-ParticleAnimator.html",
  "title": "Particle Animator (Legacy)"
}, {
  "description": "The Particle Renderer renders the Particle System on screen.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-ParticleRenderer.html",
  "title": "Particle Renderer (Legacy)"
}, {
  "description": "A Particle System component simulates fluid entities such as liquids, clouds and flames by generating and animating large numbers of small 2D images in the scene.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-ParticleSystem.html",
  "title": "Particle System"
}, {
  "description": "The Physic Material is used to adjust friction and bouncing effects of colliding objects.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-PhysicMaterial.html",
  "title": "Physic Material"
}, {
  "description": "The Physics 2D Settings allow you to provide global settings for 2D physics (menu: Edit > Project Settings > Physics 2D).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-Physics2DManager.html",
  "title": "Physics 2D Settings"
}, {
  "description": "Use the Physics Manager to apply global settings for 3D physics.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-PhysicsManager.html",
  "title": "Physics Manager"
}, {
  "description": "A Physics Material 2D is used to adjust the friction and bounce that occurs between 2D physics objects when they collide.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-PhysicsMaterial2D.html",
  "title": "Physics Material 2D"
}, {
  "description": "The Platform Effector 2D applies various “platform” behaviour such as one-way collisions, removal of side-friction\/bounce etc.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-PlatformEffector2D.html",
  "title": "Platform Effector 2D"
}, {
  "description": "The Playable Director component stores the link between a Timeline instance and a Timeline Asset.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-PlayableDirector.html",
  "title": "Playable Director component"
}, {
  "description": "The Player Settings (menu: Edit > Project Settings > Player) let you set various options for the final game built by Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-PlayerSettings.html",
  "title": "Player Settings"
}, {
  "description": "This page details the Player Settings specific to Android.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-PlayerSettingsAndroid.html",
  "title": "Android Player Settings"
}, {
  "description": "This page details the Player Settings specific to the Facebook platform.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-PlayerSettingsFacebook.html",
  "title": "Facebook Player Settings"
}, {
  "description": "This page details the Player Settings specific to iOS.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-PlayerSettingsiOS.html",
  "title": "iOS Player Settings"
}, {
  "description": "The Unity Editor allows you to configure a Splash Screen for your project.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-PlayerSettingsSplashScreen.html",
  "title": "Splash Screen"
}, {
  "description": "This page details the Player Settings specific to standalone platforms (Mac OSX, Windows and Linux).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-PlayerSettingsStandalone.html",
  "title": "Standalone Player Settings"
}, {
  "description": "This page details the Player Settings specific to WebGL.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-PlayerSettingsWebGL.html",
  "title": "WebGL Player Settings"
}, {
  "description": "This page details the Player Settings specific to Universal Windows Platform.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-PlayerSettingsWSA.html",
  "title": "Universal Windows Platform Player Settings"
}, {
  "description": "The Point Effector 2D applies forces to attract\/repulse against a source point which can be defined as the position of the rigid-body or the center of a collider used by the effector.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-PointEffector2D.html",
  "title": "Point Effector 2D"
}, {
  "description": "The Polygon Collider 2D component is a Collider for use with 2D physics.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-PolygonCollider2D.html",
  "title": "Polygon Collider 2D"
}, {
  "description": "A Position Constraint component moves a GameObject to follow its source GameObjects.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-PositionConstraint.html",
  "title": "Position Constraints"
}, {
  "description": "Use Presets to specify default properties for new components and assets.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-PresetManager.html",
  "title": "Preset Manager"
}, {
  "description": "A Projector allows you to project a Material onto all objects that intersect its frustum.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-Projector.html",
  "title": "Projector"
}, {
  "description": "Unity allows you to set the level of graphical quality it will attempt to render.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-QualitySettings.html",
  "title": "Quality Settings"
}, {
  "description": "The Rect Transform component is the 2D layout counterpart of the Transform component.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-RectTransform.html",
  "title": "Rect Transform"
}, {
  "description": "A Reflection Probe is rather like a camera that captures a spherical view of its surroundings in all directions.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-ReflectionProbe.html",
  "title": "Reflection Probe"
}, {
  "description": "This joint component allows two game objects controlled by rigidbody physics to maintain in a position based on each other’s location.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-RelativeJoint2D.html",
  "title": "Relative Joint 2D"
}, {
  "description": "\r\nRender Textures are special types of Textures that are created and updated at runtime.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-RenderTexture.html",
  "title": "Render Texture"
}, {
  "description": "\r\nRigidbodies enable your GameObjects to act under the control of physics.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-Rigidbody.html",
  "title": "Rigidbody"
}, {
  "description": "A Rigidbody 2D component places an object under the control of the physics engine.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-Rigidbody2D.html",
  "title": "Rigidbody 2D"
}, {
  "description": "A Rotation Constraint component rotates a GameObject to match the rotation of its source GameObjects.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-RotationConstraint.html",
  "title": "Rotation Constraints"
}, {
  "description": "A Scale Constraint component resizes a GameObject to match the scale of its source GameObjects.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-ScaleConstraint.html",
  "title": "Scale Constraints"
}, {
  "description": "ScriptableObject is a class that allows you to store large quantities of shared data independent from script instances.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-ScriptableObject.html",
  "title": "ScriptableObject"
}, {
  "description": "Shaders are assets that contain code and instructions for the graphics card to execute.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-Shader.html",
  "title": "Shader assets"
}, {
  "description": "Unity uses the Skinned Mesh Renderer component to render Bone animations, where the shape of the Mesh is deformed by predefined animation sequences.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-SkinnedMeshRenderer.html",
  "title": "Skinned Mesh Renderer"
}, {
  "description": "\r\nSkyboxes are a wrapper around your entire scene that shows what the world looks like beyond your geometry.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-Skybox.html",
  "title": "Skybox"
}, {
  "description": "This joint allows a game object controlled by rigidbody physics to slide along a line in space, like sliding doors, for example.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-SliderJoint2D.html",
  "title": "Slider Joint 2D"
}, {
  "description": "The Sphere Collider is a basic sphere-shaped collision primitive.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-SphereCollider.html",
  "title": "Sphere Collider"
}, {
  "description": "The Spring Joint joins two Rigidbodies together but allows the distance between them to change as though they were connected by a spring.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-SpringJoint.html",
  "title": "Spring Joint"
}, {
  "description": "The Spring Joint 2D component allows two game objects controlled by rigidbody physics to be attached together as if by a spring.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-SpringJoint2D.html",
  "title": "Spring Joint 2D"
}, {
  "description": "Sprite Masks are used to either hide or reveal parts of a Sprite or group of Sprites.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-SpriteMask.html",
  "title": "Sprite Masks"
}, {
  "description": "The Sprite Renderer component lets you display images as Sprites for use in both 2D and 3D scenes.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-SpriteRenderer.html",
  "title": "Sprite Renderer"
}, {
  "description": "\r\nAnimation States are the basic building blocks of an Animation State Machine.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-State.html",
  "title": "Animation States"
}, {
  "description": "The Surface Effector 2D applies tangent forces along the surfaces of colliders used by the effector in an attempt to match a specified speed along the surface.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-SurfaceEffector2D.html",
  "title": "Surface Effector 2D"
}, {
  "description": "The Tags and Layers Manager allows you to set up Tags, Sorting Layers and Layers.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-TagManager.html",
  "title": "Tags and Layers"
}, {
  "description": "This joint connects to a specified target, rather than another rigid body object, as other joints do.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-TargetJoint2D.html",
  "title": "Target Joint 2D"
}, {
  "description": "The Terrain Collider implements a collision surface with the same shape as the Terrain object it is attached to.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-TerrainCollider.html",
  "title": "Terrain Collider"
}, {
  "description": "\r\nText Assets are a format for imported text files.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-TextAsset.html",
  "title": "Text Asset"
}, {
  "description": "The Text Mesh generates 3D geometry that displays text strings.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-TextMesh.html",
  "title": "Text Mesh"
}, {
  "description": "See Advanced ShaderLab topics.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-Texture2DArray.html",
  "title": "Texture arrays"
}, {
  "description": "3D Textures can only be created from script.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-Texture3D.html",
  "title": "3D Textures"
}, {
  "description": "Textures are image or movie files that lay over or wrap around your GameObjects to give them a visual effect.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-TextureImporter.html",
  "title": "Textures"
}, {
  "description": "This page details the Texture Overrides specific to Android.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-TextureImporterAndroid.html",
  "title": "Android 2D Textures Overrides"
}, {
  "description": "When you are building for different platforms, you have to think about the resolution of your textures for the target platform, the size and the quality.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-TextureImporterIos.html",
  "title": "iOS 2D Texture Overrides"
}, {
  "description": "While Unity supports many common image formats as source files for importing your Textures (such as JPG, PNG, PSD and TGA), these formats are not used during realtime rendering by 3D graphics hardware such as a graphics card or mobile device.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-TextureImporterOverride.html",
  "title": "Texture compression formats for platform-specific overrides"
}, {
  "description": "The Time Manager (menu: Edit > Project Settings > Time) lets you set a number of properties that control timing within your game.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-TimeManager.html",
  "title": "Time Manager"
}, {
  "description": "The Trail Renderer is used to make trails behind GameObjects in the Scene as they move.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-TrailRenderer.html",
  "title": "Trail Renderer"
}, {
  "description": "The Transform component determines the Position, Rotation, and Scale of each object in the scene.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-Transform.html",
  "title": "Transform"
}, {
  "description": "Animation transitions allow the state machine to switch or blend from one animation state to another.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-Transition.html",
  "title": "Animation transitions"
}, {
  "description": "Unity provides a tool called Tree Editor that lets you design trees directly within the editor.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-Tree.html",
  "title": "Tree Editor"
}, {
  "description": "A Video Clip is an imported video file, which the Video Player component uses to play video content (and accompanying audio content, if the video also has sound).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-VideoClip.html",
  "title": "Video Clips"
}, {
  "description": "Use the Video Player component to attach video files to GameObjects, and play them on the GameObject’s Texture at run time.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-VideoPlayer.html",
  "title": "Video Player component"
}, {
  "description": "The Wheel Collider is a special collider for grounded vehicles.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-WheelCollider.html",
  "title": "Wheel Collider"
}, {
  "description": "Use the Wheel Joint 2D to simulate a rolling wheel, on which an object can move.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-WheelJoint2D.html",
  "title": "Wheel Joint 2D"
}, {
  "description": "\r\nWind Zones add realism to the trees you create by making them wave their branches and leaves as if blown by the wind.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-WindZone.html",
  "title": "Tree - Wind Zones"
}, {
  "description": "The World Particle Collider is used to collide particles against other Colliders in the scene.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/class-WorldParticleCollider.html",
  "title": "World Particle Collider (Legacy)"
}, {
  "description": "A reference of common class ID numbers used by the YAML file format is given below, both in numerical order of class IDs and alphabetical order of class names.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ClassIDReference.html",
  "title": "YAML Class ID Reference"
}, {
  "description": "This page describes the supported features when running the Unity Editor and Standalone Player in batch mode.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/CLIBatchmodeCoroutines.html",
  "title": "Batch mode and built-in coroutine compatibility"
}, {
  "description": "Unity Collaborate constantly monitors the changes team members make to your Project.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/CollaborateInProgress.html",
  "title": "In-Progress edit notifications"
}, {
  "description": "\r\nCollider 2D components define the shape of a 2D GameObject for the purposes of physical collisions.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Collider2D.html",
  "title": "Collider 2D"
}, {
  "description": "\r\nCollider components define the shape of an object for the purposes of physical collisions.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/CollidersOverview.html",
  "title": "Colliders"
}, {
  "description": "You can run Unity from the command line (from the macOS Terminal or the Windows Command Prompt).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/CommandLineArguments.html",
  "title": "Command line arguments"
}, {
  "description": "For a detailed explanation of the Unity Animation System, please see the Animation System Overview introduction.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/comp-AnimationGroup.html",
  "title": "Animation Reference"
}, {
  "description": "All UI Components are placed within a Canvas.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/comp-CanvasComponents.html",
  "title": "Canvas Components"
}, {
  "description": "Visual effects can be applied to cameras, GameObjects, light sources, and other elements of your game.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/comp-Effects.html",
  "title": "Visual Effects Reference"
}, {
  "description": "\r\nProject Settings are available from the menu Edit > Project Settings.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/comp-ManagerGroup.html",
  "title": "Project Settings"
}, {
  "description": "3D Meshes are the main graphics primitive of Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/comp-MeshGroup.html",
  "title": "Mesh Components"
}, {
  "description": "\r\nParticles are essentially 2D images rendered in 3D space.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/comp-ParticlesLegacy.html",
  "title": "Particle Systems (Legacy, prior to release 3.5)"
}, {
  "description": "This group contains all Components that have to do with rendering in-game and user interface elements.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/comp-RenderingGroup.html",
  "title": "Rendering Components"
}, {
  "description": "This group contains all Components that have to do with Textures.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/comp-Textures.html",
  "title": "Texture Components"
}, {
  "description": "The auto layout system provides ways to place elements in nested layout groups such as horizontal groups, vertical groups, or grids.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/comp-UIAutoLayout.html",
  "title": "Auto Layout"
}, {
  "description": "The effects components allow adding simple effects to Text and Image graphics, such as shadow and outline.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/comp-UIEffects.html",
  "title": "UI Effect Components"
}, {
  "description": "The interaction components in the UI system handle interaction, such as mouse or touch events and interaction using a keyboard or controller.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/comp-UIInteraction.html",
  "title": "Interaction Components"
}, {
  "description": "The visual components allow for ease of creation and GUI specific functionality.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/comp-UIVisual.html",
  "title": "Visual Components"
}, {
  "description": "A GameObject contains components.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Components.html",
  "title": "Introduction to components"
}, {
  "description": "Compute shaders are programs that run on the graphics card, outside of the normal rendering pipeline.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ComputeShaders.html",
  "title": "Compute shaders"
}, {
  "description": "A normal vector (ie, a vector perpendicular to a plane) is required frequently during mesh generation and may also be useful in path following and other situations.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ComputingNormalPerpendicularVector.html",
  "title": "Computing a Normal\/Perpendicular vector"
}, {
  "description": "When Unity imports Model files that contain Humanoid Rigs and Animation, it needs to reconcile the bone structure of the Model to its Animation.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ConfiguringtheAvatar.html",
  "title": "Importing humanoid animations"
}, {
  "description": "The Console Window (menu: Window > Console) shows errors, warnings and other messages generated by Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Console.html",
  "title": "Console Window"
}, {
  "description": "A Constraint component links the position, rotation, or scale of a GameObject to another GameObject.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Constraints.html",
  "title": "Constraints"
}, {
  "description": "You should now have a local clone.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ContributingApply.html",
  "title": "Step 4: Apply modifications to your fork"
}, {
  "description": "Our open-source components are hosted on Bitbucket under the Unity-Technologies team.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ContributingBitbucket.html",
  "title": "Step 1: Get a Bitbucket account"
}, {
  "description": "Next, clone your fork locally so that you can make your modifications.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ContributingClone.html",
  "title": "Step 3: Clone your fork"
}, {
  "description": "Here, we’ve compiled some frequently asked questions:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ContributingFAQ.html",
  "title": "FAQ"
}, {
  "description": "You now need to wait for feedback from the Unity developers, who are monitoring the repository you are contributing changes to and will have been notified automatically of your pull request.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ContributingFeedback.html",
  "title": "Step 6: Wait for feedback"
}, {
  "description": "This demonstration uses the Unity Test Tools Repo.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ContributingFork.html",
  "title": "Step 2: Fork the repository you want to contribute to"
}, {
  "description": "The final step is to open a pull request on Bitbucket.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ContributingPullRequest.html",
  "title": "Step 5: Open a pull request on Bitbucket"
}, {
  "description": "The following external references may be helpful for users who are new to open-source projects and repositories:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ContributingReading.html",
  "title": "Further Reading"
}, {
  "description": "This guide provides help and support for Unity users who may not have participated in an open-source project before.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ContributingToUnity.html",
  "title": "How to contribute to Unity"
}, {
  "description": "In the Unity Editor, you make changes to Component properties using the Inspector.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ControllingGameObjectsComponents.html",
  "title": "Controlling GameObjects using components"
}, {
  "description": "Unity supports keyboard, joystick and gamepad input.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ConventionalGameInput.html",
  "title": "Conventional Game Input"
}, {
  "description": "In theatre and film, lighting effects have long been used to create an impression of objects that don’t really exist in the set.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Cookies.html",
  "title": "Cookies"
}, {
  "description": "When you call a function, it runs to completion before returning.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Coroutines.html",
  "title": "Coroutines"
}, {
  "description": "Some games keep a constant number of objects in the scene, but it is very common for characters, treasures and other object to be created and removed during gameplay.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/CreateDestroyObjects.html",
  "title": "Creating and Destroying GameObjects"
}, {
  "description": "The behavior of GameObjects is controlled by the Components that are attached to them.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/CreatingAndUsingScripts.html",
  "title": "Creating and Using Scripts"
}, {
  "description": "Scripting (or creating scripts) is writing your own additions to the Unity Editor’s functionality in code, using the Unity Scripting API.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/CreatingComponents.html",
  "title": "Creating components with scripting"
}, {
  "description": "Unity empowers game designers to make games.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/CreatingGameplay.html",
  "title": "Creating Gameplay"
}, {
  "description": "Scenes contain the environments and menus of your game.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/CreatingScenes.html",
  "title": "Scenes"
}, {
  "description": "Most of Unity’s API and project structure is identical for all supported platforms and in some cases a project can simply be rebuilt to run on different devices.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/CrossPlatformConsiderations.html",
  "title": "Cross-Platform Considerations"
}, {
  "description": "CullingGroup offers a way to integrate your own systems into Unity’s culling and LOD pipeline.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/CullingGroupAPI.html",
  "title": "CullingGroup API"
}, {
  "description": "You can customize your Layout of Views by click-dragging the Tab of any View to one of several locations.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/CustomizingYourWorkspace.html",
  "title": "Customizing Your Workspace"
}, {
  "description": "The Sprite Editor’s Custom Physics Shape allows you to edit a Sprite’s Physics Shape, which defines the initial shape of the Sprite’s Collider 2D Mesh.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/CustomPhysicsShape.html",
  "title": "Sprite Editor: Custom Physics Shape"
}, {
  "description": "Custom Render Textures are an extension to Render Textures that allows users to easily update said texture with a shader.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/CustomRenderTextures.html",
  "title": "Custom Render Textures"
}, {
  "description": "A GameObject can be temporarily removed from the scene by marking it as inactive.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/DeactivatingGameObjects.html",
  "title": "Deactivating GameObjects"
}, {
  "description": "For large projects, you might use several Presets for importing the same type of asset.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/DefaultPresetsByFolder.html",
  "title": "Applying defaults to assets by folder"
}, {
  "description": "The Unity Download Assistant supports offline deployment.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/DeployingUnityOffline.html",
  "title": "Deploying Unity offline"
}, {
  "description": "When a package is deprecated it is no longer available in the Asset Store.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/DeprecateAssetGuide.html",
  "title": "DeprecateAssetGuide"
}, {
  "description": "If one point in space is subtracted from another, then the result is a vector that “points” from one object to the other:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/DirectionDistanceFromOneObjectToAnother.html",
  "title": "Direction and Distance from One Object to Another"
}, {
  "description": "A directional light typically simulates sunlight and a single light can illuminate the whole of a scene.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/DirLightShadows.html",
  "title": "Directional light shadows"
}, {
  "description": "Some Unity User Manual pages contain a status referring to “editorial review”.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/DocumentationEditorialReview.html",
  "title": "Documentation editorial review"
}, {
  "description": "Dolly Zoom is the well-known visual effect where the camera simultaneously moves towards a target object and zooms out from it.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/DollyZoom.html",
  "title": "Dolly Zoom (AKA the \"Trombone\" Effect)"
}, {
  "description": "If a Unity Project needs access to a part of the .",
  "link": "https:\/\/docs.unity3d.com\/Manual\/dotnetProfileAssemblies.html",
  "title": "Referencing additional class library assemblies"
}, {
  "description": "Unity supports a modern .",
  "link": "https:\/\/docs.unity3d.com\/Manual\/dotnetProfileLimitations.html",
  "title": "Stable scripting runtime: known limitations"
}, {
  "description": "Unity supports a number of .",
  "link": "https:\/\/docs.unity3d.com\/Manual\/dotnetProfileSupport.html",
  "title": ".NET profile support"
}, {
  "description": "To draw a GameObject on the screen, the engine has to issue a draw call to the graphics API (such as OpenGL or Direct3D).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/DrawCallBatching.html",
  "title": "Draw call batching"
}, {
  "description": "There are several different features and windows in the Unity Editor which use Curves to display and edit data.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/EditingCurves.html",
  "title": "Editing Curves"
}, {
  "description": "\r\nProperties are settings and options for components that can be edited in the inspector.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/EditingValueProperties.html",
  "title": "Editing Properties"
}, {
  "description": "A key to increasing the speed of game creation is to create custom editors for commonly used components.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/editor-CustomEditors.html",
  "title": "Custom Editors"
}, {
  "description": "You can create any number of custom windows in your app.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/editor-EditorWindows.html",
  "title": "Editor Windows"
}, {
  "description": "Property Drawers can be used to customize the look of certain controls in the Inspector window by using attributes on your scripts, or by controlling how a specific Serializable class should look.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/editor-PropertyDrawers.html",
  "title": "Property Drawers"
}, {
  "description": "The Unity editor is configured to send anonymous usage data back to Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/EditorAnalytics.html",
  "title": "Editor Analytics"
}, {
  "description": "This section details some of the editor’s basic features, which you will find useful in most projects - from choosing preferences, integrating with version control system, to preparing your project for a build.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/EditorFeatures.html",
  "title": "Editor Features"
}, {
  "description": "Use Effector 2D components with Collider 2D components to direct the forces of physics in your project when GameObject colliders come into contact with each other.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Effectors2D.html",
  "title": "Effectors 2D"
}, {
  "description": "A script in Unity is not like the traditional idea of a program where the code runs continuously in a loop until it completes its task.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/EventFunctions.html",
  "title": "Event Functions"
}, {
  "description": "The Event System is a way of sending events to objects in the application based on input, be it keyboard, mouse, touch, or custom input.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/EventSystem.html",
  "title": "Event System"
}, {
  "description": "Did you find this page useful? Please give it a rating:\r\n",
  "link": "https:\/\/docs.unity3d.com\/Manual\/EventSystemReference.html",
  "title": "Event System Reference"
}, {
  "description": "Unity comes with the Plane and Quad primitive objects to represent flat surfaces (see the Primitive Objects page for further details).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Example-CreatingaBillboardPlane.html",
  "title": "Example - Creating a Quad"
}, {
  "description": "In Unity scripting, there are a number of event functions that get executed in a predetermined order as a script executes.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ExecutionOrder.html",
  "title": "Execution Order of Event Functions"
}, {
  "description": "Unity features which are in development.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Experimental.html",
  "title": "Experimental"
}, {
  "description": "The Expert Guides in this section are written by Unity’s area experts in their own words.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ExpertGuides.html",
  "title": "Expert guides"
}, {
  "description": "Unity lets you extend the editor with your own custom inspectors and Editor Windows and you can define how properties are displayed in the inspector with custom Property Drawers.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ExtendingTheEditor.html",
  "title": "Extending the Editor"
}, {
  "description": "Unity offers an Asset Server add-on product for easy integrated versioning of your projects and you can also use Perforce and PlasticSCM as external tools (see Version Control Integration for further details).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ExternalVersionControlSystemSupport.html",
  "title": "Using external version control systems with Unity"
}, {
  "description": "The Facebook build target makes it easy to publish Unity games to Facebook and to use Facebook functionality in your games.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Facebook-GettingStarted.html",
  "title": "Getting started with Facebook development"
}, {
  "description": "This section of the User Manual contains documentation on developing for the Facebook platform.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Facebook.html",
  "title": "Facebook"
}, {
  "description": "You can use this tab to change how Unity deals with Materials and Textures when importing your model.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/FBXImporter-Materials.html",
  "title": "Material tab"
}, {
  "description": "The Import Settings for a Model file appear in the Model tab of the Inspector window when you select the Model.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/FBXImporter-Model.html",
  "title": "Model tab"
}, {
  "description": "The settings on the Rig tab define how Unity maps the deformers to the Mesh in the imported Model so that you can animate it.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/FBXImporter-Rig.html",
  "title": "Rig tab"
}, {
  "description": "Unity’s scene format is implemented with the YAML data serialization language.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/FormatDescription.html",
  "title": "Description of the Format"
}, {
  "description": "The Frame Debugger lets you freeze playback for a running game on a particular frame and view the individual draw calls that are used to render that frame.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/FrameDebugger.html",
  "title": "Frame Debugger"
}, {
  "description": "A cross-section of the view frustum at a certain distance from the camera defines a rectangle in world space that frames the visible area.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/FrustumSizeAtDistance.html",
  "title": "The Size of the Frustum at a Given Distance from the Camera"
}, {
  "description": "The GameObject is the most important concept in the Unity Editor.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/GameObjects.html",
  "title": "GameObjects"
}, {
  "description": "The Game View is rendered from the Camera(s) in your game.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/GameView.html",
  "title": "The Game view"
}, {
  "description": "The Mesh class gives script access to an object’s mesh geometry, allowing meshes to be created or modified at runtime.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/GeneratingMeshGeometryProcedurally.html",
  "title": "Procedural Mesh Geometry"
}, {
  "description": "A Humanoid model is a very specific structure, containing at least 15 bones organized in a way that loosely conforms to an actual human skeleton.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/GenericAnimations.html",
  "title": "Importing non-humanoid animations"
}, {
  "description": "Some functions in the script reference (for example, the various GetComponent functions) are listed with\r\na variant that has a letter T or a type name in angle brackets after the function name:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/GenericFunctions.html",
  "title": "Generic Functions"
}, {
  "description": "There are two ways to create a new Project:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/GettingStarted.html",
  "title": "Starting Unity for the first time"
}, {
  "description": "This topic provides information to help you plan and configure your Unity Hub deployment to work with your choice of deployment system (for example, Microsoft SCCM).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/GettingStartedHubAdvancedConsiderations.html",
  "title": "Unity Hub advanced deployment considerations"
}, {
  "description": "The Unity Hub is a management tool that allows you to manage all of your Unity projects and installations.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/GettingStartedInstallingHub.html",
  "title": "Installing Unity using the Hub"
}, {
  "description": "This page details how to open an existing Project from both the Hub and the Unity Launcher.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/GettingStartedOpeningProjects.html",
  "title": "Opening existing Projects"
}, {
  "description": "The Unity Hub is a standalone application that streamlines the way you find, download, and manage your Unity Projects and installations.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/GettingStartedUnityHub.html",
  "title": "Unity Hub"
}, {
  "description": "Unity provides two distinct techniques for precomputing global illumination (GI) and bounced lighting.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/GI-Enlighten.html",
  "title": "Enlighten"
}, {
  "description": "The GI cache is used by the Global Illumination (GI) system to store intermediate files when precomputing real-time GI, and when baking Static Lightmaps, Light Probes and Reflection Probes.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/GICache.html",
  "title": "GI cache"
}, {
  "description": "\r\nGlobal Illumination (GI) is a system that models how light is bounced off of surfaces onto other surfaces (indirect light) rather than being limited to just the light that hits a surface directly from a light source (direct light).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/GIIntro.html",
  "title": "Global Illumination"
}, {
  "description": "The Scene view has a number of Draw Modes to help you visualize different aspects of the Scene’s content.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/GIVis.html",
  "title": "GI visualizations in the Scene view"
}, {
  "description": "The Scene view and the Game view both have a Gizmos menu.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/GizmosMenu.html",
  "title": "Gizmos menu"
}, {
  "description": "The Lighting window (menu: Window > Lighting > Settings) is the main control point for Unity’s Global Illumination (GI) features.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/GlobalIllumination.html",
  "title": "Lighting Window"
}, {
  "description": "This section gives an overview of the supported APIs and SDKs for developing Google VR applications with Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/googlevr_apis_and_sdks.html",
  "title": "Supported APIs and SDKs"
}, {
  "description": "For full details on specific features provided by Google VR, see Google’s Daydream Developer documentation.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/googlevr_features_overview.html",
  "title": "Google VR features overview"
}, {
  "description": "Currently the only official firtst party input device for Daydream is the Daydream controller.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/googlevr_input_devices.html",
  "title": "Google VR controllers and input devices"
}, {
  "description": "This section helps you get started with developing Google VR applications using Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/googlevr_quick_start.html",
  "title": "Google VR quick start guide"
}, {
  "description": "This section provides an overview of both the minimum and recommended hardware and software requirements for using the Google VR SDK.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/googlevr_requirements.html",
  "title": "Google VR hardware and software requirements"
}, {
  "description": "Below is a list of useful external links for further reading into Google VR development topics.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/googlevr_resources.html",
  "title": "Google VR resources and troubleshooting"
}, {
  "description": "Google VR is the technology behind both Google Daydream and Google Cardboard VR platforms.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/googlevr_sdk_overview.html",
  "title": "Google VR"
}, {
  "description": "Use GPU Instancing to draw (or render) multiple copies of the same Mesh at once, using a small number of draw calls.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/GPUInstancing.html",
  "title": "GPU instancing"
}, {
  "description": "Make your game look just how you envisaged it with Real-time Global Illumination and our physically-based shader.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Graphics.html",
  "title": "Graphics"
}, {
  "description": "Unity supports DirectX, Metal, OpenGL, and Vulkan graphics APIs, depending on the availability of the API on a particular platform.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/GraphicsAPIs.html",
  "title": "Graphics API support"
}, {
  "description": "It is possible to extend Unity’s rendering pipeline with so called “command buffers”.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/GraphicsCommandBuffers.html",
  "title": "Graphics Command Buffers"
}, {
  "description": "The graphics hardware that ultimately renders a Scene is controlled by specialised programs called Shaders.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/GraphicsEmulation.html",
  "title": "Graphics hardware capabilities and emulation"
}, {
  "description": "Did you find this page useful? Please give it a rating:\r\n",
  "link": "https:\/\/docs.unity3d.com\/Manual\/GraphicsFeatures.html",
  "title": "Advanced Rendering Features"
}, {
  "description": "This section contains a list of common graphics-related tasks in Unity, and how to carry them out.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/GraphicsHowTos.html",
  "title": "Graphics HOWTOs"
}, {
  "description": "Understanding graphics is key to adding an element of depth to your game.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/GraphicsOverview.html",
  "title": "Graphics Overview"
}, {
  "description": "This section goes into more depth about Unity’s graphical features.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/GraphicsReference.html",
  "title": "Graphics Reference"
}, {
  "description": "This section contains a number of graphics tutorials to help you learn Unity’s graphics systems.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/GraphicsTutorials.html",
  "title": "Graphics Tutorials"
}, {
  "description": "This section will explain the bare necessities for scripting Controls with Unity’s Immediate Mode GUI system (IMGUI).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/gui-Basics.html",
  "title": "IMGUI Basics"
}, {
  "description": "There are a number of different IMGUI Controls that you can create.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/gui-Controls.html",
  "title": "Controls"
}, {
  "description": "Although Unity’s IMGUI system is mainly intended for creating developer tools and debugging interfaces, you can still customize and style them in many ways.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/gui-Customization.html",
  "title": "Customization"
}, {
  "description": "There are a number of ways to leverage and extend the IMGUI system to meet your needs.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/gui-Extending.html",
  "title": "Extending IMGUI"
}, {
  "description": "There are two different modes you can use to arrange and organize your UI when using the IMGUI system: Fixed and Automatic.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/gui-Layout.html",
  "title": "IMGUI Layout Modes"
}, {
  "description": "Unity originally had just two GUI Components.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/GUIReference.html",
  "title": "Legacy GUI"
}, {
  "description": "The “Immediate Mode” GUI system (also known as IMGUI) is an entirely separate feature to Unity’s main GameObject-based UI System.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/GUIScriptingGuide.html",
  "title": "Immediate Mode GUI (IMGUI)"
}, {
  "description": "In standard rendering, the red, green and blue values for a pixel are each represented by a fraction in the range 0.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/HDR.html",
  "title": "High Dynamic Range Rendering"
}, {
  "description": "The HDR Color picker looks similar to the ordinary color picker, but it has a few additional properties.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/HDRColorPicker.html",
  "title": "HDR color picker"
}, {
  "description": "The Hierarchy window contains a list of every GameObject (referred to in this guide as an “object”) in the current Scene.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Hierarchy.html",
  "title": "The Hierarchy window"
}, {
  "description": "Unity uses straight alpha blending.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/HOWTO-alphamaps.html",
  "title": "How do I Import Alpha Textures?"
}, {
  "description": "Unity supports textured 3D models from a variety of programs or sources.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/HOWTO-ArtAssetBestPracticeGuide.html",
  "title": "Art Asset best practice guide"
}, {
  "description": "Unity supports FBX files which you can export from many 3D modeling applications.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/HOWTO-exportFBX.html",
  "title": "Exporting from other applications"
}, {
  "description": "As you build your game, Unity stores a lot of metadata about your assets, such as import settings and links to other assets, among other information.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/HOWTO-exportpackage.html",
  "title": "Exporting Packages"
}, {
  "description": "Some 3D art packages export their models so that the z-axis faces upward.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/HOWTO-FixZAxisIsUp.html",
  "title": "How do I fix the rotation of an imported model?"
}, {
  "description": "There are two ways to import Models into Unity:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/HOWTO-importObject.html",
  "title": "Importing models from 3D modeling software"
}, {
  "description": "When Unity imports a proprietary file, it launches the 3D modeling software in the background.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/HOWTO-ImportObjectsFrom3DApps.html",
  "title": "Limitations when importing from other applications"
}, {
  "description": "SketchUp is software that is commonly used for architecture modeling.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/HOWTO-ImportObjectSketchUp.html",
  "title": "SketchUp Settings"
}, {
  "description": "Unity ships with a few Light Cookies in the Standard Assets.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/HOWTO-LightCookie.html",
  "title": "How do I make a Spot Light Cookie?"
}, {
  "description": "\r\nMesh Particle Emitters are generally used when you need high control over where to emit particles.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/HOWTO-MeshParticleEmitter.html",
  "title": "How do I make a Mesh Particle Emitter? (Legacy Particle System)"
}, {
  "description": "This page describes the process of delivering your application to the Mac App Store.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/HOWTO-PortToAppleMacStore.html",
  "title": "Delivering your application to the Mac App Store"
}, {
  "description": "If you are creating a dynamic UI where UI elements appear, disappear, or change based on user actions or other actions in the game, you may need to make a script that instantiates new UI elements based on custom logic.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/HOWTO-UICreateFromScripting.html",
  "title": "Creating UI elements from scripting"
}, {
  "description": "Normally when positioning a UI element with its Rect Transform, its position and size is specified manually (optionally including behavior to stretch with the parent Rect Transform).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/HOWTO-UIFitContentSize.html",
  "title": "Making UI elements fit the size of their content"
}, {
  "description": "Modern games and applications often need to support a wide variety of different screen resolutions and particularly UI layouts need to be able to adapt to that.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/HOWTO-UIMultiResolution.html",
  "title": "Designing UI for Multiple Resolutions"
}, {
  "description": "The need to transition between multiple UI screens is fairly common.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/HOWTO-UIScreenTransition.html",
  "title": "Creating Screen Transitions"
}, {
  "description": "The UI system makes it easy to create UI that is positioned in the world among other 2D or 3D objects in the Scene.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/HOWTO-UIWorldSpace.html",
  "title": "Creating a World Space UI"
}, {
  "description": "A Skybox is a 6-sided cube that is drawn behind all graphics in the game.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/HOWTO-UseSkybox.html",
  "title": "How do I Make a Skybox?"
}, {
  "description": "Unity includes several water Prefabs (including the necessary Shaders, scripts and art Assets) within the Standard Assets packages.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/HOWTO-Water.html",
  "title": "Water in Unity"
}, {
  "description": "IAP Promo allows developers to easily promote micro-transactions.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/IAPPromo.html",
  "title": "IAP Promo"
}, {
  "description": "\r\nImportant note: Your game must initialize Unity IAP before initializing Unity Ads for IAP Promo to work.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/IAPPromoIntegration.html",
  "title": "IAP Promo integration"
}, {
  "description": "Use Placements to control when and how your Promotions display in-game.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/IAPPromoPlacements.html",
  "title": "IAP Promo Placements"
}, {
  "description": "Unity IAP provides quick and easy tools to create and export Product Catalogs.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/IAPPromoProducts.html",
  "title": "IAP Promo Product Catalogs"
}, {
  "description": "IAP Promotions work in confluence with Placements to target players with precise purchase opportunities tailored to their unique situations.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/IAPPromoPromotions.html",
  "title": "Promotions"
}, {
  "description": "To build your project using IL2CPP, open the Build Settings window (File > Build Settings).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/IL2CPP-BuildingProject.html",
  "title": "Building a project using IL2CPP"
}, {
  "description": "Managed bytecode stripping removes unused code from managed assemblies (DLLs).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/IL2CPP-BytecodeStripping.html",
  "title": "Managed bytecode stripping with IL2CPP"
}, {
  "description": "When using the IL2CPP scripting backend, it is possible to control how il2cpp.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/IL2CPP-CompilerOptions.html",
  "title": "Compiler options"
}, {
  "description": "Upon starting a build using IL2CPP, Unity automatically performs the following steps: ",
  "link": "https:\/\/docs.unity3d.com\/Manual\/IL2CPP-HowItWorks.html",
  "title": "How IL2CPP works"
}, {
  "description": "Project build times can be much longer when building a project with IL2CPP.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/IL2CPP-OptimizingBuildTimes.html",
  "title": "Optimizing IL2CPP build times"
}, {
  "description": "Unity includes Windows Runtime support for IL2CPP on Universal Windows Platform and Xbox One platforms.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/IL2CPP-WindowsRuntimeSupport.html",
  "title": "Windows Runtime support"
}, {
  "description": "IL2CPP (Intermediate Language To C++) is a Unity-developed scripting backend which you can use as an alternative to Mono when building projects for various platforms.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/IL2CPP.html",
  "title": "IL2CPP"
}, {
  "description": "An input method is an operating system component or program that allows users to enter characters and symbols not found on their input device.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/IMEInput.html",
  "title": "IME in Unity"
}, {
  "description": "You can bring Assets created outside of Unity into your Unity Project by either exporting the file directly into the Assets folder under your Project, or copying it into that folder.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ImportingAssets.html",
  "title": "Importing"
}, {
  "description": "\r\nNote: This workflow assumes you already have a Model file to import.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ImportingModelFiles.html",
  "title": "Model import workflows"
}, {
  "description": "This page offers details and tips on importing Textures using the Unity Editor Texture Importer.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ImportingTextures.html",
  "title": "Importing Textures"
}, {
  "description": "From the graphical point of view, the units of distance in Unity are arbitrary and don’t correspond to real world measurements.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ImpressionOfSize.html",
  "title": "Creating an Impression of Large or Small Size"
}, {
  "description": "Use the Unity Editor to create 2D and 3D games, apps and experiences.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/index.html",
  "title": "Unity User Manual (2018.1)"
}, {
  "description": "Unity supports the most conventional types of input device used with games (such as controllers, joypads, keyboard and mouse) but also the touchscreens and movement-sensing capabilities of mobile devices.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Input.html",
  "title": "Input"
}, {
  "description": "An Input Module is where the main logic of an event system can be configured and customised.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/InputModules.html",
  "title": "Input Modules"
}, {
  "description": "The Inspector Lock and the Inspector Debug Mode are two useful options that can help you in your workflow.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/InspectorOptions.html",
  "title": "Inspector Options"
}, {
  "description": "Download and install the Unity Editor from the Unity download page.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/InstallingUnity.html",
  "title": "Installing Unity without the hub"
}, {
  "description": "By this point you should understand the concept of Prefabs at a fundamental level.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/InstantiatingPrefabs.html",
  "title": "Instantiating Prefabs at runtime"
}, {
  "description": "Most animation is produced by rotating the angles of joints in a skeleton to predetermined values.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/InverseKinematics.html",
  "title": "Inverse Kinematics"
}, {
  "description": "You can use a plugin to replace the default code that Unity uses when handling requests with the WWW class.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/iosCustomWWWRequest.html",
  "title": "Customising WWW requests on iOS"
}, {
  "description": "When an exception occurs in managed code, the stack trace for the exception can help you understand the cause of the exception.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/iOSManagedStackTraces.html",
  "title": "Managed stack traces on iOS"
}, {
  "description": "There are a number of device-specific properties that you can access.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/iOSMobileAdvanced.html",
  "title": "Advanced Unity Mobile Scripting"
}, {
  "description": "iOS 64-bit support is implemented with the scripting backend called IL2CPP.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/iphone-64bit.html",
  "title": "Upgrading to 64-bit iOS"
}, {
  "description": "A free Apple ID is all you need to test your build on any iOS devices you own.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/iphone-accountsetup.html",
  "title": "iOS account setup"
}, {
  "description": "Did you find this page useful? Please give it a rating:\r\n",
  "link": "https:\/\/docs.unity3d.com\/Manual\/iphone-AdvancedTopics.html",
  "title": "iOS Advanced Topics"
}, {
  "description": "Most features of the iOS devices are exposed through the Input and Handheld classes.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/iphone-API.html",
  "title": "iOS Scripting"
}, {
  "description": "This section covers the most common and important questions that come up when starting to work with iOS.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/iphone-basic.html",
  "title": "Unity iOS Basics"
}, {
  "description": "Before submitting a bug report, please check the iOS Troubleshooting page, where you will find solutions to common crashes and other problems.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/iphone-bugreporting.html",
  "title": "Reporting crash bugs on iOS"
}, {
  "description": "The iPhone\/iPad application build process is a two step process: ",
  "link": "https:\/\/docs.unity3d.com\/Manual\/iphone-BuildProcess.html",
  "title": "Inside the iOS build process"
}, {
  "description": "This chapter does not describe how to integrate your game with Apple’s StoreKit API.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/iphone-Downloadable-Content.html",
  "title": "Preparing your application for In-App Purchases (IAP)"
}, {
  "description": "Building games for devices like the iPhone and iPad requires a different approach than you would use for desktop PC games.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/iphone-GettingStarted.html",
  "title": "Getting started with iOS development"
}, {
  "description": "The following list summarizes iOS hardware available in devices of various generations.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/iphone-Hardware.html",
  "title": "iOS Hardware Guide"
}, {
  "description": "Unity iOS and Android contain a built-in profiler.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/iphone-InternalProfiler.html",
  "title": "Measuring performance with the built-in profiler"
}, {
  "description": "This page details optimizations that are unique to iOS deployment.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/iphone-iOS-Optimization.html",
  "title": "iOS-specific optimizations"
}, {
  "description": "Unity supports a standardized Game Controller Input API provided by Apple as part of the standard Unity Input API.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/iphone-joystick.html",
  "title": "iOS Game Controller support"
}, {
  "description": "The NVIDIA PhysX physics engine used by Unity is available on iOS but the performance limits of the hardware will be reached more easily on mobile platforms than desktops.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/iphone-Optimizing-Physics.html",
  "title": "Optimizing Physics Performance"
}, {
  "description": "This section covers optimizations which are unique to iOS devices.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/iphone-performance.html",
  "title": "Optimizing Performance on iOS"
}, {
  "description": "The two main ways of reducing the size of the Player are by making a proper Release build within Xcode and by changing the Stripping Level within Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/iphone-playerSizeOptimization.html",
  "title": "Optimizing the size of the built iOS Player"
}, {
  "description": "It is recommended to minimize your references to external libraries, because 1 MB of .",
  "link": "https:\/\/docs.unity3d.com\/Manual\/iphone-unsupported.html",
  "title": "Features currently not supported by Unity iOS"
}, {
  "description": "This section of the User Manual contains documentation on developing for the iOS platform.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/iphone.html",
  "title": "iOS"
}, {
  "description": "The Unity C# Job System lets you write simple and safe multithreaded code that interacts with the Unity Engine for enhanced game performance.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/JobSystem.html",
  "title": "C# Job System"
}, {
  "description": "In Unity, to create a job you need to implement the IJob interface.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/JobSystemCreatingJobs.html",
  "title": "Creating jobs"
}, {
  "description": "When you call the Schedule method of a job it returns a JobHandle.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/JobSystemJobDependencies.html",
  "title": "JobHandle and dependencies"
}, {
  "description": "A job system manages multithreaded code by creating jobs instead of threads.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/JobSystemJobSystems.html",
  "title": "What is a job system?"
}, {
  "description": "In a single-threaded computing system, one instruction goes in at a time, and one result comes out at a time.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/JobSystemMultithreading.html",
  "title": "What is multithreading?"
}, {
  "description": "The drawback to the safety system’s process of copying data is that it also isolates the results of a job within each copy.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/JobSystemNativeContainer.html",
  "title": "NativeContainer"
}, {
  "description": "The Unity C# Job System allows users to write multithreaded code that interacts well with the rest of Unity and makes it easier to write correct code.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/JobSystemOverview.html",
  "title": "C# Job System Overview"
}, {
  "description": "When scheduling jobs, there can only be one job doing one task.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/JobSystemParallelForJobs.html",
  "title": "ParallelFor jobs"
}, {
  "description": "A ParallelForTransform job is another type of ParallelFor job; designed specifically for operating on Transforms.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/JobSystemParallelForTransformJobs.html",
  "title": "ParallelForTransform jobs"
}, {
  "description": "When writing multithreaded code, there is always a risk for race conditions.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/JobSystemSafetySystem.html",
  "title": "The safety system in the C# Job System"
}, {
  "description": "To schedule a job in the main thread, you must:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/JobSystemSchedulingJobs.html",
  "title": "Scheduling jobs"
}, {
  "description": "When using the Unity C# Job System, make sure you adhere to the following:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/JobSystemTroubleshooting.html",
  "title": "C# Job System tips and troubleshooting"
}, {
  "description": "You can attach one rigidbody object to another or to a fixed point in space using a Joint component.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Joints.html",
  "title": "Joints"
}, {
  "description": "As the name implies, joints attach GameObjects together.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Joints2D.html",
  "title": "2D Joints"
}, {
  "description": "The JSON Serialization feature converts objects to and from JSON format.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/JSONSerialization.html",
  "title": "JSON Serialization"
}, {
  "description": "Layer-based collision detection is a way to make a GameObject collide with another GameObject that is set up to a specific Layer or Layers.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LayerBasedCollision.html",
  "title": "Layer-based collision detection"
}, {
  "description": "\r\nLayers are most commonly used by Cameras to render only a part of the scene, and by Lights to illuminate only parts of the scene.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Layers.html",
  "title": "Layers"
}, {
  "description": "The Learn tab in the Home window gives you access to a variety of tutorials and learning resources (including example Projects that you can import directly into Unity) to help you get started with Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/learn-tab.html",
  "title": "The Learn tab"
}, {
  "description": "Take your time to look over the editor interface and familiarize yourself with it.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LearningtheInterface.html",
  "title": "Learning the interface"
}, {
  "description": "Find information here on historical functionality.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LegacyTopics.html",
  "title": "Legacy Topics"
}, {
  "description": "Here you can find older versions of Unity Remote for use in Legacy projects.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LegacyUnityRemote.html",
  "title": "LegacyUnityRemote"
}, {
  "description": "When a GameObject in the scene is a long way from the camera, the amount of detail that can be seen on it is greatly reduced.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LevelOfDetail.html",
  "title": "Level of Detail (LOD)"
}, {
  "description": "This section covers license activation and managing your Unity license.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LicensesAndActivation.html",
  "title": "Licenses and Activation"
}, {
  "description": "This section details the many different ways of creating light in Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Lighting.html",
  "title": "Types of light"
}, {
  "description": "\r\nAmbient occlusion (AO) approximates how much ambient lighting (lighting not coming from a specific direction) can hit a point on a surface.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LightingBakedAmbientOcclusion.html",
  "title": "Baked ambient occlusion"
}, {
  "description": "The Light Explorer allows you to select and edit light sources.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LightingExplorer.html",
  "title": "Light Explorer"
}, {
  "description": "Unity can unwrap your Mesh for you to generate lightmap UVs.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LightingGiUvs-GeneratingLightmappingUVs.html",
  "title": "Generating Lightmap UVs"
}, {
  "description": "Maya is a 3D computer animation software by Autodesk, with powerful modelling, rendering, simulation, texturing and animation tools for visual effects artists, modellers and animators (see www.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LightingGiUvs-ImportingFromMaya.html",
  "title": "Importing UVs from Maya to Unity"
}, {
  "description": "There are two sets of GI lightmaps: Baked and Realtime.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LightingGiUvs.html",
  "title": "Global Illumination UVs"
}, {
  "description": "In order to calculate the shading of a 3D object, Unity needs to know the intensity, direction and color of the light that falls on it.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LightingInUnity.html",
  "title": "Lighting overview"
}, {
  "description": "This section details the advanced lighting features available in Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LightingOverview.html",
  "title": "Lighting"
}, {
  "description": "Unity’s lighting system is affected by and can affect many of its other effects and systems.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LightingRelated.html",
  "title": "Related topics"
}, {
  "description": "Lightmap seam stitching is a technique that smooths unwanted hard edges in GameObjects rendered with baked lightmaps.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Lightmapping-SeamStitching.html",
  "title": "Lightmap seam stitching"
}, {
  "description": "This page provides an introduction to lightmapping in Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Lightmapping.html",
  "title": "Lightmapping: Getting started"
}, {
  "description": "There are two Directional Modes available for light maps: Directional and Non-Directional.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LightmappingDirectional.html",
  "title": "Lightmap Directional Modes"
}, {
  "description": "Unity stores lightmaps with different compressions and encoding schemes, depending on the target platform and the compression setting in the Lighting Window.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Lightmaps-TechnicalInformation.html",
  "title": "Lightmaps: Technical information"
}, {
  "description": "Lightmap Snapshot was renamed to Lighting Data Asset in Unity 5.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LightmapSnapshot.html",
  "title": "Lighting Data Asset"
}, {
  "description": "Baked Lights are Light components which have their Mode property set to Baked.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LightMode-Baked.html",
  "title": "Baked lighting"
}, {
  "description": "\r\nBaked Indirect mode is a lighting mode shared by all Mixed Lights in a Scene.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LightMode-Mixed-BakedIndirect.html",
  "title": "Baked Indirect mode"
}, {
  "description": "\r\nDistance Shadowmask is a version of the Shadowmask lighting mode.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LightMode-Mixed-DistanceShadowmask.html",
  "title": "Distance Shadowmask"
}, {
  "description": "\r\nShadowmask is a version of the Shadowmask lighting mode shared by all Mixed Lights in a Scene.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LightMode-Mixed-Shadowmask.html",
  "title": "Shadowmask"
}, {
  "description": "Shadowmask mode is a lighting mode shared by all Mixed Lights in a Scene.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LightMode-Mixed-ShadowmaskMode.html",
  "title": "Shadowmask mode"
}, {
  "description": "\r\nSubtractive mode is a lighting mode shared by all Mixed Lights in a Scene.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LightMode-Mixed-Subtractive.html",
  "title": "Subtractive mode"
}, {
  "description": "\r\nMixed Lights are Light components which have their Mode property set to Mixed.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LightMode-Mixed.html",
  "title": "Mixed lighting"
}, {
  "description": "Real-time Lights are Light components which have their Mode property set to Realtime.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LightMode-Realtime.html",
  "title": "Real-time lighting"
}, {
  "description": "\r\nSurface: All triangles from all meshes in a Scene together are called the surface of a scene.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LightModes-TechnicalInformation.html",
  "title": "Lighting: Technical information and terminology"
}, {
  "description": "This page assumes you have already read documentation on lighting in Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LightModes.html",
  "title": "Lighting Modes"
}, {
  "description": "Lights can be rendered using either of two methods: ",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LightPerformance.html",
  "title": "Light troubleshooting and performance"
}, {
  "description": "To use Light Probes on your moving GameObjects, the Mesh Renderer component on the moving GameObject must set correctly.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LightProbes-MeshRenderer.html",
  "title": "Light Probes and the Mesh Renderer"
}, {
  "description": "\r\nLightmapping adds greatly to the realism of a scene by capturing realistic bounced light as textures which are “baked” onto the surface of static objects.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LightProbes-MovingObjects.html",
  "title": "Light Probes for moving objects"
}, {
  "description": "Placing light probes over large levels by hand can be time consuming.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LightProbes-Placing-Scripting.html",
  "title": "Placing probes using scripting"
}, {
  "description": "The lighting information in the light probes are encoded as Spherical Harmonics basis functions.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LightProbes-TechnicalInformation.html",
  "title": "Light Probes: Technical information"
}, {
  "description": "\r\nLight Probes provide a way to capture and use information about light that is passing through the empty space in your scene.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LightProbes.html",
  "title": "Light Probes"
}, {
  "description": "\r\nLights are an essential part of every scene.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Lights.html",
  "title": "Lights"
}, {
  "description": "Lighting in Unity is primarily provided by Light objects.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LightSources.html",
  "title": "Light sources"
}, {
  "description": "The Unity Editor allows you to work in traditional gamma color space as well as linear color space.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LinearLighting.html",
  "title": "Linear rendering overview"
}, {
  "description": "The Unity Editor allows you to work with traditional gamma color space as well as linear color space.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LinearRendering-GammaTextures.html",
  "title": "Gamma Textures with linear rendering"
}, {
  "description": "The Unity Editor offers both linear and gamma workflows.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LinearRendering-LinearOrGammaWorkflow.html",
  "title": "Linear or gamma workflow"
}, {
  "description": "sRGB sampling allows the Unity Editor to render Shaders in linear color space when Textures are in gamma color space.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LinearRendering-LinearTextures.html",
  "title": "Working with linear Textures"
}, {
  "description": "In some situations, it is useful to make an asset available to a project without loading it in as part of a scene.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LoadingResourcesatRuntime.html",
  "title": "Loading Resources at Runtime"
}, {
  "description": "This page provides advice on baking light into models that use Unity’s LOD (level of detail) system.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LODForBakedGI.html",
  "title": "LOD for baked lightmaps"
}, {
  "description": "Read this page before you use Realtime Global Illumination (GI) on models which use the LOD (level of detail) feature.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LODRealtimeGI.html",
  "title": "LOD and Realtime GI"
}, {
  "description": "There might be times during development when you need to obtain information from the logs of the standalone player you’ve built, the target device, or the Editor.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LogFiles.html",
  "title": "Log Files"
}, {
  "description": "Look Dev is an experimental image-based lighting tool that allows you to check and compare different Assets through a viewer to ensure they are correctly authored for various lighting conditions.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LookDev.html",
  "title": "Look Dev"
}, {
  "description": "The Settings menu is located in the top left of the Look Dev view.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LookDevControlMenus.html",
  "title": "Settings menu"
}, {
  "description": "The Control Panel gathers all the most commonly used settings in the Look Dev Views menu, for easy and fast access.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LookDevControlPanel.html",
  "title": "Control panel"
}, {
  "description": "You can use Look Dev to simulate environmental shadows.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LookDevEnvironmentShadow.html",
  "title": "Environment Shadow"
}, {
  "description": "Lighting in Look Dev is represented by an HDRI (high dynamic range image).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LookDevHDRIEnvironments.html",
  "title": "HDRI environments in Look Dev"
}, {
  "description": "Use these settings to apply lighting and shadow changes to all HDRIs in the HDRI view with one action.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LookDevHDRIMenu.html",
  "title": "HDRI menus"
}, {
  "description": "Lighting in Look Dev is represented by an HDRI (high dynamic range image).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LookDevHDRIView.html",
  "title": "The HDRI view"
}, {
  "description": "To access Look Dev in Unity, go to Window > Experimental > Look Dev.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LookDevOverview.html",
  "title": "Overview"
}, {
  "description": "The Look Dev view is the main window.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LookDevView.html",
  "title": "The Look Dev view"
}, {
  "description": "The Views menu is located in the top-left corner of the Look Dev view, next to the Settings menu.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LookDevViewsMenus.html",
  "title": "Views menu"
}, {
  "description": "A common operation for people working with animations is to make sure they loop properly.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LoopingAnimationClips.html",
  "title": "Loop optimization on Animation clips"
}, {
  "description": "On top of the low-level native plugin interface, Unity also supports low level rendering extensions that can receive callbacks when certain events happen.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LowLevelNativePluginRenderingExtensions.html",
  "title": "Low-level native plugin rendering extensions"
}, {
  "description": "On top of the low-level native plugin interface, Unity also supports low level access to the shader compiler, allowing the user to inject different variants into a shader.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/LowLevelNativePluginShaderCompilerAccess.html",
  "title": "Low-level native plugin Shader compiler access"
}, {
  "description": "IL2CPP is a fully-supported scripting backend that you can use as an alternative to Mono when building Projects for macOS Player.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/macOSIL2CPPScriptingBackend.html",
  "title": "macOS Player: IL2CPP Scripting Backend"
}, {
  "description": "You can add C++ (.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/macOSPlayerCPlusPlusSourceCodePluginsForIL2CPP.html",
  "title": "macOS Player: C++ source code plugins for IL2CPP"
}, {
  "description": "You can return activations from the serial number(s) added to your webstore account.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ManagingYourUnityLicense.html",
  "title": "Managing your License"
}, {
  "description": "If Online Activation fails, this could be because:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ManualActivationGuide.html",
  "title": "Offline \/ Manual Activation"
}, {
  "description": "The Unity documentation is the Unity User Manual and Unity Scripting API Reference.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ManualVersions.html",
  "title": "Documentation versions"
}, {
  "description": "To create a new Material, use Assets->Create->Material from the main menu or the Project View context menu.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Materials.html",
  "title": "Creating and Using Materials"
}, {
  "description": "All the parameters of a Material that you see in the inspector when viewing a material are accessible via script, giving you the power to change or animate how a material works at runtime.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/MaterialsAccessingViaScript.html",
  "title": "Accessing and Modifying Material parameters via script"
}, {
  "description": "The Physically Based Rendering Material Validator is a draw mode in the Scene View.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/MaterialValidator.html",
  "title": "Physically Based Rendering Material Validator"
}, {
  "description": "What’s “Mecanim”?",
  "link": "https:\/\/docs.unity3d.com\/Manual\/MecanimFAQ.html",
  "title": "Animation FAQ"
}, {
  "description": "This page contains some tips to help you obtain the best performance from Unity’s animation system, covering character setup, the animation system and run-time optimizations.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/MecanimPeformanceandOptimization.html",
  "title": "﻿# Performance and optimization"
}, {
  "description": "The new UI system uses a messaging system designed to replace SendMessage.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/MessagingSystem.html",
  "title": "Messaging System"
}, {
  "description": "Metal is the standard graphics API for Apple devices.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Metal.html",
  "title": "Metal"
}, {
  "description": "The way an object looks is defined by its Shader.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/MetaPass.html",
  "title": "Material properties and the GI system"
}, {
  "description": "The Debug messages, warnings and errors all go to the console.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/MobileCrashes.html",
  "title": "Crashes"
}, {
  "description": "If you use Unity Personal Edition to make your project, a default splash screen displays while your game loads.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/MobileCustomizeSplashScreen.html",
  "title": "Customizing an iOS Splash Screen"
}, {
  "description": "If you are having problems when developing for a mobile platform, this is a checklist to help you solve various problems.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/MobileDeveloperChecklist.html",
  "title": "Mobile Developer Checklist"
}, {
  "description": "On mobile devices, the Input class offers access to touchscreen, accelerometer and geographical\/location input.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/MobileInput.html",
  "title": "Mobile Device Input"
}, {
  "description": "In most cases, Unity will handle keyboard input automatically for GUI elements but it is also easy to show the keyboard on demand from a script.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/MobileKeyboard.html",
  "title": "Mobile Keyboard"
}, {
  "description": "Unity’s Multiplayer system is fully compatible across Desktop, iOS and Android devices, players on all these platforms can play your multiplayer game together.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/MobileNetworking.html",
  "title": "Networking Tips for Mobile devices."
}, {
  "description": "Just like on PCs, mobile platforms like iOS and Android have devices of various levels of performance.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/MobileOptimisation.html",
  "title": "Optimizations"
}, {
  "description": "What are mobile devices capable of? How should you plan your game accordingly? If your game runs slow, and the profiler indicates that it’s a rendering bottleneck, how do you know what to change, and how to make your game look good but still run fast? This page is dedicated to a general and non-technical exposition of the methods.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/MobileOptimizationGraphicsMethods.html",
  "title": "Graphics Methods"
}, {
  "description": "This guide is for developers new to mobile game development, who are probably feeling overwhelmed and are either planning and prototyping a new mobile game or porting an existing project to run smoothly on a mobile device.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/MobileOptimizationPracticalGuide.html",
  "title": "Practical guide to optimization for mobiles"
}, {
  "description": "This section introduces the technicalities of rendering optimization.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/MobileOptimizationPracticalRenderingOptimizations.html",
  "title": "Rendering Optimizations"
}, {
  "description": "This section demonstrates how you would go about optimizing the actual scripts and methods your game uses, and it also goes into detail about the reasons why the optimizations work, and why applying them will benefit you in certain situations.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/MobileOptimizationPracticalScriptingOptimizations.html",
  "title": "Optimizing Scripts"
}, {
  "description": "This section demonstrates ways that mobile developers write code and structure their games so that they run fast.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/MobileOptimizationScriptingMethods.html",
  "title": "Scripting and Gameplay Methods"
}, {
  "description": "Unity relies on the CPU (heavily optimized for the SIMD part of it, like SSE on x86 or NEON on ARM) for skinning, batching, physics, user scripts, particles, etc.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/MobileProfiling.html",
  "title": "Profiling"
}, {
  "description": "Below are some tips for designing character models to give optimal rendering speed.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ModelingOptimizedCharacters.html",
  "title": "Modeling characters for optimal performance"
}, {
  "description": "Usually when you want to make a modification to any sort of game asset, you want it to happen at runtime and you want it to be temporary.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ModifyingSourceAssetsThroughScripting.html",
  "title": "Modifying Source Assets Through Scripting"
}, {
  "description": "Multi-display allows you to display up to 8 different camera views of your application on up to 8 different monitors at the same time.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/MultiDisplay.html",
  "title": "Multi-display"
}, {
  "description": "When created, a Unity scene contains just a single camera and this is all you need for most situations.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/MultipleCameras.html",
  "title": "Using more than one camera"
}, {
  "description": "Multi Scene Editing allows you to have multiple scenes open in the editor simultaneously, and makes it easier to manage scenes at runtime.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/MultiSceneEditing.html",
  "title": "Multi-Scene editing"
}, {
  "description": "Unity’s animation system allows you to control the range of motion of different bones using Muscles.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/MuscleDefinitions.html",
  "title": "Avatar Muscle & Settings tab"
}, {
  "description": "As projects become larger and the number of scripts increases, the likelihood of having clashes between script class names grows ever greater.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Namespaces.html",
  "title": "Namespaces"
}, {
  "description": "In addition to the basic script interface, Native Code Plugins in Unity can receive callbacks when certain events happen.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/NativePluginInterface.html",
  "title": "Low-level Native Plugin Interface"
}, {
  "description": "Unity has extensive support for native Plugins, which are libraries of native code written in C, C++, Objective-C, etc.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/NativePlugins.html",
  "title": "Native Plugins"
}, {
  "description": "The NavMeshes in different Scenes are not connect by default.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/nav-AdditiveLoading.html",
  "title": "Loading Multiple NavMeshes using Additive Loading"
}, {
  "description": "The Min Region Area advanced build settings allows you to cull away small non-connected NavMesh regions.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/nav-AdvancedSettings.html",
  "title": "Advanced NavMesh Bake Settings"
}, {
  "description": "Many games feature NPCs that patrol automatically around the playing area.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/nav-AgentPatrol.html",
  "title": "Making an Agent Patrol Between a Set of Points"
}, {
  "description": "The Navigation Areas define how difficult it is to walk across a specific area, the lower cost areas will be preferred during path finding.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/nav-AreasAndCosts.html",
  "title": "Navigation Areas and Costs"
}, {
  "description": "The process of creating a NavMesh from the level geometry is called NavMesh Baking.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/nav-BuildingNavMesh.html",
  "title": "Building a NavMesh"
}, {
  "description": "Some use cases for Off-Mesh Links can be detected automatically.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/nav-BuildingOffMeshLinksAutomatically.html",
  "title": "Building Off-Mesh Links Automatically"
}, {
  "description": "The goal of this document is to guide you to setup navigating humanoid characters to move using the navigation system.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/nav-CouplingAnimationAndNavigation.html",
  "title": "Coupling Animation and Navigation"
}, {
  "description": "Once you have a NavMesh baked for your level it is time to create a character which can navigate the scene.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/nav-CreateNavMeshAgent.html",
  "title": "Creating a NavMesh Agent"
}, {
  "description": "NavMesh Obstacle components can be used to describe obstacles the agents should avoid while navigating.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/nav-CreateNavMeshObstacle.html",
  "title": "Creating a NavMesh Obstacle"
}, {
  "description": "Off-Mesh Links are used to create paths crossing outside the walkable navigation mesh surface.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/nav-CreateOffMeshLink.html",
  "title": "Creating an Off-mesh Link"
}, {
  "description": "Height mesh allows you to place your character more accurately on the walkable surfaces.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/nav-HeightMesh.html",
  "title": "Building Height Mesh for Accurate Character Placement"
}, {
  "description": "This section provides a set of techniques and code samples to implement common tasks in navigation.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/nav-HowTos.html",
  "title": "Navigation How-Tos"
}, {
  "description": "When you want to intelligently move characters in your game (or agents as they are called in AI circles), you have to solve two problems: how to reason about the level to find the destination, then how to move there.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/nav-InnerWorkings.html",
  "title": "Inner Workings of the Navigation System"
}, {
  "description": "You can use NavMesh Agent, NavMesh Obstacle, and Off Mesh Link components with other Unity components too.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/nav-MixingComponents.html",
  "title": "Using NavMesh Agent with Other Components"
}, {
  "description": "This script lets you choose the destination point on the NavMesh by clicking the mouse on the object’s surface.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/nav-MoveToClickPoint.html",
  "title": "Moving an Agent to a Position Clicked by the Mouse"
}, {
  "description": "You can tell an agent to start calculating a path simply by setting the NavMeshAgent.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/nav-MoveToDestination.html",
  "title": "Telling a NavMeshAgent to Move to a Destination"
}, {
  "description": "The Navigation System allows you to create characters which can navigate the game world.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/nav-NavigationSystem.html",
  "title": "Navigation System in Unity"
}, {
  "description": "This section will dive into the details on building NavMeshes for your scene, creating NavMesh Agents, NavMesh Obstacles and Off-Mesh Links.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/nav-Overview.html",
  "title": "Navigation Overview"
}, {
  "description": "Did you find this page useful? Please give it a rating:\r\n",
  "link": "https:\/\/docs.unity3d.com\/Manual\/nav-Reference.html",
  "title": "Navigation Reference"
}, {
  "description": "The navigation system allows you to create characters that can intelligently move around the game world, using navigation meshes that are created automatically from your Scene geometry.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Navigation.html",
  "title": "Navigation and Pathfinding"
}, {
  "description": "\r\nNavMesh building components provide you with additional controls for building (also known as baking) and using NavMeshes at run time and in the Unity Editor.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/NavMesh-BuildingComponents-API.html",
  "title": "NavMesh building components API"
}, {
  "description": "\r\nNavMesh building components provide you with additional controls for building (also known as baking) and using NavMeshes at run time and in the Unity Editor.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/NavMesh-BuildingComponents.html",
  "title": "NavMesh building components"
}, {
  "description": "It is common for a character to have complex actions that consist of a number of stages.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/NestedStateMachines.html",
  "title": "Sub-State Machines"
}, {
  "description": "(For new projects, you should use the new networking system introduced in 5.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/net-HighLevelOverview.html",
  "title": "High Level Networking Concepts (Legacy)"
}, {
  "description": "(For new projects, you should use the new networking system introduced in 5.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/net-MasterServer.html",
  "title": "Master Server (Legacy)"
}, {
  "description": "(For new projects, you should use the new networking system introduced in 5.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/net-MasterServerBuild.html",
  "title": "Building the Unity Networking Servers on your own (Legacy)"
}, {
  "description": "(For new projects, you should use the new networking system introduced in 5.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/net-MinimizingBandwidth.html",
  "title": "Minimizing Network Bandwidth (Legacy)"
}, {
  "description": "(For new projects, you should use the new networking system introduced in 5.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/net-NetworkInstantiate.html",
  "title": "Network Instantiate (Legacy)"
}, {
  "description": "(For new projects, you should use the new networking system introduced in 5.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/net-NetworkLevelLoad.html",
  "title": "Network Level Loading (Legacy)"
}, {
  "description": "(For new projects, you should use the new networking system introduced in 5.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/net-NetworkView.html",
  "title": "Network Views (Legacy)"
}, {
  "description": "(For new projects, you should use the new networking system introduced in 5.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/net-RPCDetails.html",
  "title": "RPC Details (Legacy)"
}, {
  "description": "Social API is Unity’s point of access to social features, such as:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/net-SocialAPI.html",
  "title": "Social API"
}, {
  "description": "(For new projects, you should use the new networking system introduced in 5.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/net-StateSynchronization.html",
  "title": "State Synchronization Details (Legacy)"
}, {
  "description": "(For new projects, you should use the new networking system introduced in 5.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/net-UnityNetworkElements.html",
  "title": "Networking Elements in Unity (Legacy)"
}, {
  "description": "Like the Network Manager callbacks, there are a number of events relating to network behaviours that can occur over the course of a normal multiplayer game.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/NetworkBehaviourCallbacks.html",
  "title": "NetworkBehaviour callbacks"
}, {
  "description": "As part of Unity’s Networking feature set, you can choose to emulate slower internet connection speeds to test out your game experience for users in low-bandwidth areas.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/NetworkEmulation.html",
  "title": "Network Emulation"
}, {
  "description": "There are a number of events that can occur over the course of the normal operation of a multiplayer game, such as the host starting up, a player joining, or a player leaving.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/NetworkManagerCallbacks.html",
  "title": "Network Manager callbacks"
}, {
  "description": "Networking is a very large, detailed topic.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/NetworkReferenceGuide.html",
  "title": "Legacy Network Reference Guide"
}, {
  "description": "A NullReferenceException happens when you try to access a reference variable that isn’t referencing any object.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/NullReferenceException.html",
  "title": "What is a Null Reference Exception?"
}, {
  "description": "By default, the view frustum is arranged symmetrically around the camera’s centre line but it doesn’t necessarily need to be.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ObliqueFrustum.html",
  "title": "Using an Oblique Frustum"
}, {
  "description": "Occlusion Culling is a feature that disables rendering of objects when they are not currently seen by the camera because they are obscured (occluded) by other objects.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/OcclusionCulling.html",
  "title": "Occlusion Culling"
}, {
  "description": "Oculus Rift has three inputs: two Oculus Touch Controllers, and one Oculus Remote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/OculusControllers.html",
  "title": "Input for Oculus"
}, {
  "description": "You can download the Unity Documentation as a zip file for offline use.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/OfflineDocumentation.html",
  "title": "Offline documentation"
}, {
  "description": "Online activation is the easiest and fastest way to get up and running with Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/OnlineActivationGuide.html",
  "title": "Online Activation"
}, {
  "description": "OpenGL Core is a back-end capable of supporting the latest OpenGL features on Windows, MacOS X and Linux.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/OpenGLCoreDetails.html",
  "title": "OpenGL Core"
}, {
  "description": "Our decision to start open-sourcing components of Unity is intended to help us engage with you, our customers and users.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/OpenSourceRepositories.html",
  "title": "Open-source repositories"
}, {
  "description": "For the Unity Editor to support OpenVR tracked controllers, the Unity VR subsystem presents VR controller inputs as separate joysticks.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/OpenVRControllers.html",
  "title": "Input for OpenVR controllers"
}, {
  "description": "Good performance is critical to the success of many games.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/OptimizingGraphicsPerformance.html",
  "title": "Optimizing graphics performance"
}, {
  "description": "Shaders are small programs that execute on the GPU, and loading them can take some time.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/OptimizingShaderLoadTime.html",
  "title": "Optimizing Shader Load Time"
}, {
  "description": "To create or manage Organizations, sign in to the Unity ID dashboard and select Organizations from the left navigation bar.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/OrgsManagingyourOrganization.html",
  "title": "Managing your Organization"
}, {
  "description": "When you create a new Project, it is assigned to an Organization.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/OrgsManagingyourOrganizationsProjects.html",
  "title": "Managing your Organization’s Projects"
}, {
  "description": "To use the Unity Editor and Services, you must create a Unity Developer Network (UDN) account.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/OrgsSubscriptionsAndSeats.html",
  "title": "Subscriptions and seats"
}, {
  "description": "Unity Organizations are the containers for your Projects and subscriptions.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/OrgsUnityOrganizations.html",
  "title": "Unity Organizations"
}, {
  "description": "Unity Teams enables creative teams to work more efficiently together with features that enable collaboration and simplify workflows.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/OrgsWorkingwithUnityTeams.html",
  "title": "Working with Unity Teams"
}, {
  "description": "The Windows described on this page covers the basics of the interface in Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/OtherViews.html",
  "title": "Other Windows"
}, {
  "description": "While famous for its 3D capabilities, Unity can also be used to create 2D games.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Overview2D.html",
  "title": "Gameplay in 2D"
}, {
  "description": "A package contains features to fit the various needs of your project.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PackagesList.html",
  "title": "Packages Documentation"
}, {
  "description": "This section explains how to implement common types of particle system.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ParticleSystemHowTo.html",
  "title": "Particle System How-Tos"
}, {
  "description": "The Particle System component has a powerful set of properties that are organized into modules for ease of use.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ParticleSystemModules.html",
  "title": "Particle System modules"
}, {
  "description": "In a 3D game, most characters, props and scenery elements are represented as meshes, while a 2D game uses sprites for these purposes.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ParticleSystems.html",
  "title": "Particle Systems"
}, {
  "description": "This module controls how particles collide with GameObjects in the Scene.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PartSysCollisionModule.html",
  "title": "Collision module"
}, {
  "description": "The color of a particle can be set here to change according to its speed in distance units per second.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PartSysColorBySpeedModule.html",
  "title": "Color By Speed module"
}, {
  "description": "This module specifies how a particle’s color and transparency changes over its lifetime.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PartSysColorOverLifeModule.html",
  "title": "Color Over Lifetime module"
}, {
  "description": "The Custom Data module allows you to define custom data formats in the Editor to be attached to particles.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PartSysCustomDataModule.html",
  "title": "Custom Data module"
}, {
  "description": "The properties in this module affect the rate and timing of Particle System emissions.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PartSysEmissionModule.html",
  "title": "Emission module"
}, {
  "description": "Cars and many other vehicles emit exhaust smoke as they convert fuel into power.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PartSysExhaust.html",
  "title": "Exhaust Smoke from a Vehicle"
}, {
  "description": "You can use a particle system to create a convincing explosion but the dynamics are perhaps a little more complicated than they seem at first.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PartSysExplosion.html",
  "title": "A Simple Explosion"
}, {
  "description": "This property modifies the effect of wind zones on particles emitted by the system.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PartSysExtForceModule.html",
  "title": "External Forces module"
}, {
  "description": "Particles can be accelerated by forces (such as wind or attraction) that are specified in this module.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PartSysForceOverLifeModule.html",
  "title": "Force Over Lifetime module"
}, {
  "description": "This module controls how the speed of particles reacts to movement of their parent object over time.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PartSysInheritVelocity.html",
  "title": "Inherit Velocity module"
}, {
  "description": "GPU instancing offers a large performance boost compared with CPU rendering.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PartSysInstancing.html",
  "title": "Particle System GPU Instancing"
}, {
  "description": "Add real-time lights to a percentage of your particles using this module.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PartSysLightsModule.html",
  "title": "Lights module"
}, {
  "description": "This module controls how the speed of particles is reduced over their lifetime.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PartSysLimitVelOverLifeModule.html",
  "title": "Limit Velocity Over Lifetime module"
}, {
  "description": "The Particle System module contains global properties that affect the whole system.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PartSysMainModule.html",
  "title": "Particle System Main module"
}, {
  "description": "Add turbulence to particle movement using this module.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PartSysNoiseModule.html",
  "title": "Noise module"
}, {
  "description": "This section contains reference information for the Particle System component and each of its numerous modules.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PartSysReference.html",
  "title": "Particle Systems reference"
}, {
  "description": "The Renderer module’s settings determine how a particle’s image or Mesh is transformed, shaded and overdrawn by other particles.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PartSysRendererModule.html",
  "title": "Renderer module"
}, {
  "description": "The rotation of a particle can be set here to change according to its speed in distance units per second.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PartSysRotBySpeedModule.html",
  "title": "Rotation By Speed module"
}, {
  "description": "Here, you can configure particles to rotate as they move.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PartSysRotOverLifeModule.html",
  "title": "Rotation Over Lifetime module"
}, {
  "description": "This module defines the the volume or surface from which particles can be emitted, and the direction of the start velocity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PartSysShapeModule.html",
  "title": "Particle System Shape Module"
}, {
  "description": "This module allows you to create particles that change size according to their speed in distance units per second.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PartSysSizeBySpeedModule.html",
  "title": "Size by Speed module"
}, {
  "description": "Many effects involve a particle changing size according to a curve, which can be set in this module.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PartSysSizeOverLifeModule.html",
  "title": "Size over Lifetime module"
}, {
  "description": "This module allows you to set up sub-emitters.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PartSysSubEmitModule.html",
  "title": "Sub Emitters module"
}, {
  "description": "A particle’s graphic need not be a still image.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PartSysTexSheetAnimModule.html",
  "title": "Texture Sheet Animation module"
}, {
  "description": "Add trails to a percentage of your particles using this module.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PartSysTrailsModule.html",
  "title": "Trails module"
}, {
  "description": "Particle Systems have the ability to trigger a Callback whenever they interact with one or more Colliders in the Scene.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PartSysTriggersModule.html",
  "title": "Triggers module"
}, {
  "description": "Unity implements Particle Systems with a component, so placing a Particle System in a Scene is a matter of adding a pre-made GameObject (menu: GameObject > Effects > Particle System) or adding the component to an existing GameObject (menu: Component > Effects > Particle System).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PartSysUsage.html",
  "title": "Using Particle Systems in Unity"
}, {
  "description": "The Velocity over Lifetime module allows you to control the velocity of particles over their lifetime.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PartSysVelOverLifeModule.html",
  "title": "Velocity over Lifetime module"
}, {
  "description": "If you are comfortable writing your own Shaders, use this addition to the Renderer Module to configure your Particle Systems to pass a wider range of data into your custom Shaders.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PartSysVertexStreams.html",
  "title": "Particle System vertex streams and Standard Shader support"
}, {
  "description": "\r\nParticles are small, simple images or meshes that are displayed and moved in great numbers by a particle system.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PartSysWhatIs.html",
  "title": "What is a Particle System?"
}, {
  "description": "For more information on Perforce you can visit www.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/perForceIntegration.html",
  "title": "Perforce Integration"
}, {
  "description": "This section gives details of the components used with 2D physics.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Physics2DReference.html",
  "title": "Physics Reference 2D"
}, {
  "description": "This section gives details of the components used with 3D physics.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Physics3DReference.html",
  "title": "3D Physics Reference"
}, {
  "description": "Physics Debug Visualiser allows you to quickly inspect the Collider geometry in your Scene, and profile common physics-based scenarios.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PhysicsDebugVisualization.html",
  "title": "Physics Debug Visualization"
}, {
  "description": "This section contains a list of common physics-related tasks in Unity, and how to carry them out.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PhysicsHowTos.html",
  "title": "Physics HOWTOs"
}, {
  "description": "These pages briefly describe the main physics components available in Unity, and give details of their usage and links for further reading.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PhysicsOverview.html",
  "title": "Physics Overview"
}, {
  "description": "To have convincing physical behaviour, an object in a game must accelerate correctly and be affected by collisions, gravity and other forces.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PhysicsSection.html",
  "title": "Physics"
}, {
  "description": "For more information on Plastic SCM you can visit their website.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/plasticSCMIntegration.html",
  "title": "Plastic SCM Integration"
}, {
  "description": "Unity includes a feature called Platform Dependent Compilation.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PlatformDependentCompilation.html",
  "title": "Platform dependent compilation"
}, {
  "description": "This section covers specific information for the many non-desktop and web platforms supported by Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PlatformSpecific.html",
  "title": "Platform-specific"
}, {
  "description": "All of the examples in this document use the PlayableGraph Visualizer (Pictured below) to illustrate the trees and nodes created by the Playables API.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Playables-Examples.html",
  "title": "Playables Examples"
}, {
  "description": "The PlayableGraph defines a set of playable outputs that are bound to a GameObject or component.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Playables-Graph.html",
  "title": "The PlayableGraph"
}, {
  "description": "To create your own custom playable, it must be inherited from the PlayableBehaviour base class.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Playables-ScriptPlayable.html",
  "title": "ScriptPlayable and PlayableBehaviour"
}, {
  "description": "The Playables API provides a way to create tools, effects or other gameplay mechanisms by organizing and evaluating data sources in a tree-like structure known as the PlayableGraph.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Playables.html",
  "title": "Playables API"
}, {
  "description": "The Unity Test Runner tests your code in Edit mode and Play mode, as well as on target platforms such as Standalone, Android, or iOS.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PlaymodeTestFramework.html",
  "title": "Writing and executing tests in Unity Test Runner"
}, {
  "description": "The Plugin Inspector is used to select and manage target platforms for the plugins in your project.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PluginInspector.html",
  "title": "Plugin Inspector"
}, {
  "description": "In Unity, you normally use scripts to create functionality, but you can also include code created outside Unity in the form of a Plugin.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Plugins.html",
  "title": "Plugins"
}, {
  "description": "You can use plug-ins developed for Android to call Java and C++ code created outside of Unity from your C# scripts, allowing you to access features like OS calls and third-party code libraries that would otherwise not be available to Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PluginsForAndroid.html",
  "title": "Building and using plug-ins for Android"
}, {
  "description": "This page describes Native Code Plugins for desktop platforms (Windows\/Mac OS X\/Linux).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PluginsForDesktop.html",
  "title": "Building Plugins for Desktop Platforms"
}, {
  "description": "This page describes Native Code Plugins for the iOS platform.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PluginsForIOS.html",
  "title": "Building Plugins for iOS"
}, {
  "description": "To select a GameObject, click on it in the Scene view or click its name in the Hierarchy window.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PositioningGameObjects.html",
  "title": "Positioning GameObjects"
}, {
  "description": "The effect descriptions on this page refer to the default effects found within the post-processing stack.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PostProcessing-AmbientOcclusion.html",
  "title": "Ambient Occlusion"
}, {
  "description": "The effect descriptions on this page refer to the default effects found within the post-processing stack.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PostProcessing-Antialiasing.html",
  "title": "Anti-aliasing"
}, {
  "description": "The effect descriptions on this page refer to the default effects found within the post-processing stack.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PostProcessing-Bloom.html",
  "title": "Bloom"
}, {
  "description": "The effect descriptions on this page refer to the default effects found within the post-processing stack.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PostProcessing-ChromaticAberration.html",
  "title": "Chromatic Aberration"
}, {
  "description": "The effect descriptions on this page refer to the default effects found within the post-processing stack.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PostProcessing-ColorGrading.html",
  "title": "Color Grading"
}, {
  "description": "The post-processing stack comes with a selection of debug views to view specific effects or passes such as depth, normals and motion vectors.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PostProcessing-DebugViews.html",
  "title": "Debug Views"
}, {
  "description": "The effect descriptions on this page refer to the default effects found within the post-processing stack.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PostProcessing-DepthOfField.html",
  "title": "Depth of Field"
}, {
  "description": "The effect descriptions on this page refer to the default effects found within the post-processing stack.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PostProcessing-Dithering.html",
  "title": "Dithering"
}, {
  "description": "The effect descriptions on this page refer to the default effects found within the post-processing stack.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PostProcessing-EyeAdaptation.html",
  "title": "Eye Adaptation"
}, {
  "description": "The effect descriptions on this page refer to the default effects found within the post-processing stack.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PostProcessing-Fog.html",
  "title": "Fog"
}, {
  "description": "The effect descriptions on this page refer to the default effects found within the post-processing stack.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PostProcessing-Grain.html",
  "title": "Grain"
}, {
  "description": "To help artists control the overall look and exposure of a scene, the post-processing stack comes with a set of industry-standard monitors.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PostProcessing-Monitors.html",
  "title": "Monitors"
}, {
  "description": "The effect descriptions on this page refer to the default effects found within the post-processing stack.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PostProcessing-MotionBlur.html",
  "title": "Motion Blur"
}, {
  "description": "The effect descriptions on this page refer to the default effects found within the post-processing stack.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PostProcessing-ScreenSpaceReflection.html",
  "title": "Screen Space Reflection"
}, {
  "description": "For optimal post-processing results it is recommended that you work in the Linear color-space with HDR enabled.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PostProcessing-Stack-SetUp.html",
  "title": "Setting up the post-processing stack"
}, {
  "description": "The post-processing stack is an über effect that combines a complete set of effects into a single post-processing pipeline.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PostProcessing-Stack.html",
  "title": "Post-processing stack"
}, {
  "description": "The effect descriptions on this page refer to the default effects found within the post-processing stack.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PostProcessing-UserLut.html",
  "title": "User LUT"
}, {
  "description": "The effect descriptions on this page refer to the default effects found within the post-processing stack.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PostProcessing-Vignette.html",
  "title": "Vignette"
}, {
  "description": "\r\nPost-processing is the process of applying full-screen filters and effects to a camera’s image buffer before it is displayed to screen.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PostProcessingOverview.html",
  "title": "Post-processing overview"
}, {
  "description": "\r\nPost-processing is a way of applying effects to rendered images in Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PostProcessingWritingEffects.html",
  "title": "Writing post-processing effects"
}, {
  "description": "It is convenient to build a GameObject in the scene by adding components and setting their properties to the appropriate values.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Prefabs.html",
  "title": "Prefabs"
}, {
  "description": "Unity provides a number of preference settings to allow you to customise the behaviour of the Unity Editor.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Preferences.html",
  "title": "Preferences"
}, {
  "description": "Use swatch libraries to reuse, save, and share colors, gradients, and animation curves.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PresetLibraries.html",
  "title": "Swatch libraries"
}, {
  "description": "Use Presets to reuse property settings across multiple components and assets.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Presets.html",
  "title": "Presets"
}, {
  "description": "Unity can work with 3D models of any shape that can be created with modeling software.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PrimitiveObjects.html",
  "title": "Primitive and placeholder objects"
}, {
  "description": "The Unity Profiler Window helps you to optimize your game.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Profiler.html",
  "title": "Profiler overview"
}, {
  "description": "In the Profiler window there is a pane called Audio.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ProfilerAudio.html",
  "title": "Audio Profiler"
}, {
  "description": "The CPU Usage Profiler displays where time is spent in your game.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ProfilerCPU.html",
  "title": "CPU Usage Profiler"
}, {
  "description": "The Global Illumination Profiler shows statistics and how much CPU time is consumed by the real-time Global Illumination (GI) subsystem across all worker threads.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ProfilerGI.html",
  "title": "Global Illumination Profiler"
}, {
  "description": "The GPU Usage Profiler displays where GPU time is spent in your game.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ProfilerGPU.html",
  "title": "GPU Profiler"
}, {
  "description": "There are two modes you can use in the Memory Profiler to inspect the memory usage of your application.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ProfilerMemory.html",
  "title": "Memory Profiler"
}, {
  "description": "The Physics Profiler displays statistics about physics that have been processed by the physics engine in your Scene.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ProfilerPhysics.html",
  "title": "Physics Profiler"
}, {
  "description": "The Rendering Profiler displays rendering statistics.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ProfilerRendering.html",
  "title": "Rendering Profiler"
}, {
  "description": "The UI Profiler is a profiler module dedicated to in-game UI.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ProfilerUI.html",
  "title": "UI Profiler "
}, {
  "description": "Access the Profiler window in the Unity Editor via the toolbar: Window > Profiler.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ProfilerWindow.html",
  "title": "Profiler window"
}, {
  "description": "In the real world, light fades over distance, and dim lights have a lower range than bright lights.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ProgressiveLightmapper-CustomFallOff.html",
  "title": "Custom fall-off"
}, {
  "description": "Each lightmap contains a number of charts.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ProgressiveLightmapper-UVOverlap.html",
  "title": "UV overlap feedback "
}, {
  "description": "Progressive Lightmapper is a fast path-tracing-based lightmapper system that provides baked lightmaps and Light Probes with progressive updates in the Editor.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ProgressiveLightmapper.html",
  "title": "Progressive Lightmapper"
}, {
  "description": "Project Templates provide preselected settings based on common best practices for Projects.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ProjectTemplates.html",
  "title": "Project Templates"
}, {
  "description": "In this view, you can access and manage the assets that belong to your project.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ProjectView.html",
  "title": "The Project Window"
}, {
  "description": "At any time while you are creating your game, you might want to see how it looks when you build and run it outside of the editor as a standalone.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/PublishingBuilds.html",
  "title": "Publishing Builds"
}, {
  "description": "Rotations in 3D applications are usually represented in one of two ways, Quaternions or Euler angles.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/QuaternionAndEulerRotationsInUnity.html",
  "title": "Rotation and Orientation in Unity"
}, {
  "description": "This page provides tips for improving Joint and Ragdoll stability.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/RagdollStability.html",
  "title": "Joint and Ragdoll stability"
}, {
  "description": "Randomly chosen items or values are important in many games.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/RandomNumbers.html",
  "title": "Adding Random Gameplay Elements"
}, {
  "description": "The Event System needs a method for detecting where current input events need to be sent to, and this is provided by the Raycasters.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Raycasters.html",
  "title": "Raycasters"
}, {
  "description": "Keeping the file size of the built app to a minimum is important, especially for mobile devices or for app stores that impose a size limit.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ReducingFilesize.html",
  "title": "Reducing the file size of your build"
}, {
  "description": "CG films and animations commonly feature highly realistic reflections, which are important for giving a sense of “connectedness” among the objects in the scene.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ReflectionProbes.html",
  "title": "Reflection probes"
}, {
  "description": "Rendering a reflection probe’s cubemap takes a significant amount of processor time for a number of reasons:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/RefProbePerformance.html",
  "title": "Reflection probe performance and optimisation"
}, {
  "description": "Reflection probes come in three basic types as chosen by the Type property in the inspector (see the component reference page for further details).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/RefProbeTypes.html",
  "title": "Types of Reflection Probe"
}, {
  "description": "The Editor supports integrated launching and capture of the RenderDoc graphics debugger, for detailed frame introspection and debugging.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/RenderDocIntegration.html",
  "title": "RenderDoc Integration"
}, {
  "description": "This section explains the technical details behind various aspects of Unity’s rendering engine.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Rendering-Tech.html",
  "title": "Rendering Pipeline Details"
}, {
  "description": "Unity supports different Rendering Paths.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/RenderingPaths.html",
  "title": "Rendering Paths"
}, {
  "description": "The Game View has a Stats button in the top right corner.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/RenderingStatistics.html",
  "title": "Rendering Statistics Window"
}, {
  "description": "This page details the Legacy Deferred Lighting (light prepass) rendering path.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/RenderTech-DeferredLighting.html",
  "title": "Legacy Deferred Lighting Rendering Path"
}, {
  "description": "This page details the deferred shading rendering path.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/RenderTech-DeferredShading.html",
  "title": "Deferred shading rendering path"
}, {
  "description": "This page describes details of Forward rendering path.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/RenderTech-ForwardRendering.html",
  "title": "Forward Rendering Path Details"
}, {
  "description": "Realtime Shadows work on most PC, console & mobile platforms.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/RenderTech-HardwareRequirements.html",
  "title": "Hardware Requirements for Unity's Graphics Features"
}, {
  "description": "This page describes details of Vertex Lit rendering path.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/RenderTech-VertexLit.html",
  "title": "Vertex Lit Rendering Path Details"
}, {
  "description": "One of the most powerful features of Mecanim is retargeting of humanoid animations.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Retargeting.html",
  "title": "Retargeting of Humanoid animations"
}, {
  "description": "A Rigidbody is the main component that enables physical behaviour for a GameObject.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/RigidbodiesOverview.html",
  "title": "Rigidbody overview"
}, {
  "description": "The Body Transform is the mass center of the character.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/RootMotion.html",
  "title": "Root Motion - how it works"
}, {
  "description": "Sometimes, it is useful to be able to run some editor script code in a project as soon as Unity launches without requiring action from the user.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/RunningEditorCodeOnLaunch.html",
  "title": "Running Editor Script Code on Launch"
}, {
  "description": "Unity stores lots of different types of information about your project, and some of these are saved in different ways to others.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Saving.html",
  "title": "Saving Your Work"
}, {
  "description": "The Scene View has a set of navigation controls to help you move around quickly and efficiently.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SceneViewNavigation.html",
  "title": "Scene View navigation"
}, {
  "description": "The Aspect Ratio Fitter functions as a layout controller that controls the size of its own layout element.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-AspectRatioFitter.html",
  "title": "Aspect Ratio Fitter"
}, {
  "description": "The Button control responds to a click from the user and is used to initiate or confirm an action.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-Button.html",
  "title": "Button"
}, {
  "description": "The Canvas Scaler component is used for controlling the overall scale and pixel density of UI elements in the Canvas.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-CanvasScaler.html",
  "title": "Canvas Scaler"
}, {
  "description": "The Content Size Fitter functions as a layout controller that controls the size of its own layout element.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-ContentSizeFitter.html",
  "title": "Content Size Fitter"
}, {
  "description": "The Dropdown can be used to let the user choose a single option from a list of options.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-Dropdown.html",
  "title": "Dropdown"
}, {
  "description": "Use the Inspector window to change the name of a clip, its timing, its blend properties, and other clip properties.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-EditorClip.html",
  "title": "Setting Clip properties"
}, {
  "description": "Use the Inspector window to change the name of a track and its properties.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-EditorTrack.html",
  "title": "Setting Track properties"
}, {
  "description": "This subsystem is responsible for controlling all the other elements that make up eventing.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-EventSystem.html",
  "title": "Event System Manager"
}, {
  "description": "The Event Trigger receives events from the Event System and calls registered functions for each event.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-EventTrigger.html",
  "title": "Event Trigger"
}, {
  "description": "The Graphic Raycaster is used to raycast against a Canvas.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-GraphicRaycaster.html",
  "title": "Graphic Raycaster"
}, {
  "description": "The Grid Layout Group component places its child layout elements in a grid.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-GridLayoutGroup.html",
  "title": "Grid Layout Group"
}, {
  "description": "The Horizontal Layout Group component places its child layout elements next to each other, side by side.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-HorizontalLayoutGroup.html",
  "title": "Horizontal Layout Group"
}, {
  "description": "The Image control displays a non-interactive image to the user.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-Image.html",
  "title": "Image"
}, {
  "description": "An Input Field is a way to make the text of a Text Control editable.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-InputField.html",
  "title": "Input Field"
}, {
  "description": "If you want to override the minimum, preferred, or flexible size of a layout element, you can do that by adding a Layout Element component to the Game Object.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-LayoutElement.html",
  "title": "Layout Element"
}, {
  "description": "A Mask is not a visible UI control but rather a way to modify the appearance of a control’s child elements.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-Mask.html",
  "title": "Mask"
}, {
  "description": "The Outline component adds a simple outline effect to graphic components such as Text or Image.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-Outline.html",
  "title": "Outline"
}, {
  "description": "The 2D Raycaster raycasts against 2D objects in the scene.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-Physics2DRaycaster.html",
  "title": "Physics 2D Raycaster"
}, {
  "description": "The Raycaster raycasts against 3D objects in the scene.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-PhysicsRaycaster.html",
  "title": "Physics Raycaster"
}, {
  "description": "This adds a simple Position as UV1 effect to text and image graphics.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-PositionAsUV1.html",
  "title": "Position as UV1"
}, {
  "description": "The Raw Image control displays a non-interactive image to the user.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-RawImage.html",
  "title": "Raw Image"
}, {
  "description": "A RectMask2D is a masking control similar to the Mask control.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-RectMask2D.html",
  "title": "RectMask2D"
}, {
  "description": "The Scrollbar control allows the user to scroll an image or other view that is too large to see completely.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-Scrollbar.html",
  "title": "Scrollbar"
}, {
  "description": "A Scroll Rect can be used when content that takes up a lot of space needs to be displayed in a small area.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-ScrollRect.html",
  "title": "Scroll Rect"
}, {
  "description": "The Selectable Class is the base class for all the interaction components and it handles the items that are in common.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-Selectable.html",
  "title": "Selectable Base Class"
}, {
  "description": "In the above visualization mode, the arrows indicate how the change of focus is set up for the collection of controls as a group.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-SelectableNavigation.html",
  "title": "Navigation Options"
}, {
  "description": "Within a selectable component there are several transition options depending on what state the selectable is currently in.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-SelectableTransition.html",
  "title": "Transition Options"
}, {
  "description": "Some of the built-in features of Unity automatically use serialization.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-Serialization-BuiltInUse.html",
  "title": "Built-in serialization "
}, {
  "description": "Serialization is the automatic process of transforming data structures or object states into a format that Unity can store and reconstruct later.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-Serialization-Custom.html",
  "title": "Custom serialization"
}, {
  "description": "Serialization is the automatic process of transforming data structures or object states into a format that Unity can store and reconstruct later.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-Serialization-Errors.html",
  "title": "Script serialization errors"
}, {
  "description": "Serialization is the automatic process of transforming data structures or object states into a format that Unity can store and reconstruct later.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-Serialization.html",
  "title": "Script Serialization"
}, {
  "description": "The Shadow component adds a simple outline effect to graphic components such as Text or Image.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-Shadow.html",
  "title": "Shadow"
}, {
  "description": "The Slider control allows the user to select a numeric value from a predetermined range by dragging the mouse.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-Slider.html",
  "title": "Slider"
}, {
  "description": "The module is designed to work as you would expect a controller \/ mouse input to work.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-StandaloneInputModule.html",
  "title": "Standalone Input Module"
}, {
  "description": "Unity’s Terrain system allows you to add vast landscapes to your games.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-Terrain.html",
  "title": "Terrain Engine"
}, {
  "description": "The Text control displays a non-interactive piece of text to the user.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-Text.html",
  "title": "Text"
}, {
  "description": "Use the Inspector window to set the Frame Rate, the duration mode, and a fixed length for the selected Timeline Asset.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-TimelineAsset.html",
  "title": "Setting Timeline properties"
}, {
  "description": "The Toggle control is a checkbox that allows the user to switch an option on or off.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-Toggle.html",
  "title": "Toggle"
}, {
  "description": "A Toggle Group is not a visible UI control but rather a way to modify the behavior of a set of Toggles.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-ToggleGroup.html",
  "title": "Toggle Group"
}, {
  "description": "Note: TouchInputModule is obsolete.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-TouchInputModule.html",
  "title": "Touch Input Module"
}, {
  "description": "The Vertical Layout Group component places its child layout elements on top of each other.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/script-VerticalLayoutGroup.html",
  "title": "Vertical Layout Group"
}, {
  "description": "The Scriptable Render Pipeline (SRP) is an alternative to the Unity built-in pipeline.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ScriptableRenderPipeline.html",
  "title": "Scriptable Render Pipeline#"
}, {
  "description": "Unity automatically defines how scripts compile to managed assemblies.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ScriptCompilationAssemblyDefinitionFiles.html",
  "title": "Script compilation and assembly definition files"
}, {
  "description": "Unity reserves some project folder names to indicate that the contents have a special purpose.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ScriptCompileOrderFolders.html",
  "title": "Special folders and script compilation order"
}, {
  "description": "Scripted Importers are part of the Unity Scripting API.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ScriptedImporters.html",
  "title": "Scripted Importers"
}, {
  "description": "Although Unity uses an implementation of the standard Mono runtime for scripting, it still has its own practices and techniques for accessing the engine from scripts.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ScriptingConcepts.html",
  "title": "Scripting Overview"
}, {
  "description": "These are some of the most important classes you’ll be using when scripting with Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ScriptingImportantClasses.html",
  "title": "Important Classes "
}, {
  "description": "We strive to provide a common scripting API and experience across all platforms Unity supports.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ScriptingRestrictions.html",
  "title": "Scripting restrictions"
}, {
  "description": "Sometimes your animation comes as “in-place”, which means if you put it in a scene, it will not move the character that it’s on.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ScriptingRootMotion.html",
  "title": "Tutorial: Scripting Root Motion for \"in-place\" humanoid animations"
}, {
  "description": "For 2017.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ScriptingRuntimeUpgrade.html",
  "title": "Scripting Runtime Upgrade"
}, {
  "description": "Scripting is an essential ingredient in all games.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ScriptingSection.html",
  "title": "Scripting"
}, {
  "description": "This section covers the tools within the Unity Editor, and tools supplied with Unity that assist you in developing your scripts.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ScriptingTools.html",
  "title": "Scripting Tools"
}, {
  "description": "An integrated development environment (IDE) is a piece of computer software that provides tools and facilities to make it easier to develop other pieces of software.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ScriptingToolsIDEs.html",
  "title": "Integrated development environment (IDE) support"
}, {
  "description": "When working with large complex scenes it can be useful to search for specific objects.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Searching.html",
  "title": "Searching"
}, {
  "description": "To get started with Unity’s family of services, you must first link your project to a Unity Services Project ID.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SettingUpProjectServices.html",
  "title": "Setting up your project for Unity Services"
}, {
  "description": "The Asset Server is designed to be a simple one-time installation on a server machine.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SettinguptheAssetServer.html",
  "title": "Setting up the Asset Server"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-NormalBumpedDiffuse.html",
  "title": "Bumped Diffuse"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-NormalBumpedSpecular.html",
  "title": "Bumped Specular"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-NormalDecal.html",
  "title": "Decal"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-NormalDiffuse.html",
  "title": "Diffuse"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-NormalDiffuseDetail.html",
  "title": "Diffuse Detail"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-NormalFamily.html",
  "title": "Normal Shader Family"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-NormalParallaxDiffuse.html",
  "title": "Parallax Diffuse"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-NormalParallaxSpecular.html",
  "title": "Parallax Bumped Specular"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-NormalSpecular.html",
  "title": "Specular"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-NormalVertexLit.html",
  "title": "Vertex-Lit"
}, {
  "description": "Shaders in Unity are used through Materials, which essentially combine shader code with parameters like textures.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-Performance.html",
  "title": "Usage and Performance of Built-in Shaders"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-ReflectiveBumpedDiffuse.html",
  "title": "Reflective Bumped Diffuse"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-ReflectiveBumpedSpecular.html",
  "title": "Reflective Bumped Specular"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-ReflectiveBumpedUnlit.html",
  "title": "Reflective Normal Mapped Unlit"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-ReflectiveBumpedVertexLit.html",
  "title": "Reflective Normal mapped Vertex-lit"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-ReflectiveDiffuse.html",
  "title": "Reflective Diffuse"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-ReflectiveFamily.html",
  "title": "Reflective Shader Family"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-ReflectiveParallaxDiffuse.html",
  "title": "Reflective Parallax Diffuse"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-ReflectiveParallaxSpecular.html",
  "title": "Reflective Parallax Specular"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-ReflectiveSpecular.html",
  "title": "Reflective Specular"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-ReflectiveVertexLit.html",
  "title": "Reflective Vertex-Lit"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-SelfIllumBumpedDiffuse.html",
  "title": "Self-Illuminated Normal mapped Diffuse"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-SelfIllumBumpedSpecular.html",
  "title": "Self-Illuminated Normal mapped Specular"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-SelfIllumDiffuse.html",
  "title": "Self-Illuminated Diffuse"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-SelfIllumFamily.html",
  "title": "Self-Illuminated Shader Family"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-SelfIllumParallaxDiffuse.html",
  "title": "Self-Illuminated Parallax Diffuse"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-SelfIllumParallaxSpecular.html",
  "title": "Self-Illuminated Parallax Specular"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-SelfIllumSpecular.html",
  "title": "Self-Illuminated Specular"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-SelfIllumVertexLit.html",
  "title": "Self-Illuminated Vertex-Lit"
}, {
  "description": "The Unity Standard Shader is a built-in shader with a comprehensive set of features.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-StandardShader.html",
  "title": "Standard Shader"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-TransBumpedDiffuse.html",
  "title": "Transparent Bumped Diffuse"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-TransBumpedSpecular.html",
  "title": "Transparent Bumped Specular"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-TransCutBumpedDiffuse.html",
  "title": "Transparent Cutout Bumped Diffuse"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-TransCutBumpedSpecular.html",
  "title": "Transparent Cutout Bumped Specular"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-TransCutDiffuse.html",
  "title": "Transparent Cutout Diffuse"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-TransCutSpecular.html",
  "title": "Transparent Cutout Specular"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-TransCutVertexLit.html",
  "title": "Transparent Cutout Vertex-Lit"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-TransDiffuse.html",
  "title": "Transparent Diffuse"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-TransParallaxDiffuse.html",
  "title": "Transparent Parallax Diffuse"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-TransParallaxSpecular.html",
  "title": "Transparent Parallax Specular"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-TransparentCutoutFamily.html",
  "title": "Transparent Cutout Shader Family"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-TransparentFamily.html",
  "title": "Transparent Shader Family"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-TransSpecular.html",
  "title": "Transparent Specular"
}, {
  "description": "\r\nNote.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/shader-TransVertexLit.html",
  "title": "Transparent Vertex-Lit"
}, {
  "description": "Rendering in Unity uses Materials, Shaders and Textures.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Shaders.html",
  "title": "Materials, Shaders & Textures"
}, {
  "description": "Shaders in Unity can be written in one of three different ways:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ShadersOverview.html",
  "title": "Writing Shaders"
}, {
  "description": "This tutorial teaches you the first steps of creating your own shaders, to help you control the look of your game and optimise the performance of the graphics.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ShaderTut1.html",
  "title": "Shaders: ShaderLab and fixed function shaders"
}, {
  "description": "This tutorial will teach you the basics of how to write vertex and fragment programs in Unity shaders.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ShaderTut2.html",
  "title": "Shaders: vertex and fragment programs"
}, {
  "description": "Unity’s lights can cast Shadows from a GameObject onto other parts of itself or onto other nearby GameObjects.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ShadowOverview.html",
  "title": "Shadows"
}, {
  "description": "Unity’s lights can cast Shadows from an object onto other parts of itself or onto other nearby objects.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Shadows.html",
  "title": "Shadows"
}, {
  "description": "With Single Pass Instanced rendering (also known as Stereo Instancing), the GPU performs a single render pass, replacing each draw call with an instanced draw call.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SinglePassInstancing.html",
  "title": "Single Pass Instanced rendering"
}, {
  "description": "Single-Pass Stereo rendering is a feature for PC and Playstation 4 based VR apps.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SinglePassStereoRendering.html",
  "title": "Single-Pass Stereo rendering"
}, {
  "description": "There are two stereo rendering methods for Windows Holographic devices (HoloLens); multi-pass and single-pass instanced.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SinglePassStereoRenderingHoloLens.html",
  "title": "Single-Pass Stereo Rendering for HoloLens"
}, {
  "description": "Read those to improve your ShaderLab-fu!",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-AdvancedTopics.html",
  "title": "Advanced ShaderLab topics"
}, {
  "description": "The alpha test is a last chance to reject a pixel from being written to the screen.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-AlphaTest.html",
  "title": "ShaderLab: Legacy Alpha Testing"
}, {
  "description": "\r\nBindChannels command allows you to specify how vertex data maps to the graphics hardware.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-BindChannels.html",
  "title": "ShaderLab: Legacy BindChannels"
}, {
  "description": "Blending is used to make transparent objects.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-Blend.html",
  "title": "ShaderLab: Blending"
}, {
  "description": "Unity has a number of built-in utility functions designed to make writing shaders simpler and easier.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-BuiltinFunctions.html",
  "title": "Built-in shader helper functions"
}, {
  "description": "Unity contains several files that can be used by your shader programs to bring in predefined variables and helper functions.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-BuiltinIncludes.html",
  "title": "Built-in shader include files"
}, {
  "description": "Unity defines several preprocessor macros when compiling Shader programs.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-BuiltinMacros.html",
  "title": "Predefined Shader preprocessor macros"
}, {
  "description": "A Camera can generate a depth, depth+normals, or motion vector Texture.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-CameraDepthTexture.html",
  "title": "Camera's Depth Texture"
}, {
  "description": "Culling is an optimization that does not render polygons facing away from the viewer.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-CullAndDepth.html",
  "title": "ShaderLab: Culling & Depth Testing"
}, {
  "description": "A CustomEditor can be defined for your shader.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-CustomEditor.html",
  "title": "ShaderLab: CustomEditor"
}, {
  "description": "Sometimes you have a shader with some interesting data types that can not be nicely represented using the built in Unity material editor.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-CustomShaderGUI.html",
  "title": "Custom Shader GUI"
}, {
  "description": "The standard Shader language in Unity is HLSL, and general HLSL data types are supported.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-DataTypesAndPrecision.html",
  "title": "Shader data types and precision"
}, {
  "description": "In Visual Studio 2012, Microsoft has indroduced Graphics Debugger, you can use it to capture a frame from platforms like Unity Editor, Windows Standalone or Universal Windows Platform.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-DebuggingD3D11ShadersWithVS.html",
  "title": "Debugging DirectX 11 shaders with Visual Studio"
}, {
  "description": "It is possible to create Render Textures where each pixel contains a high-precision Depth value.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-DepthTextures.html",
  "title": "Using Depth Textures"
}, {
  "description": "After all Subshaders a Fallback can be defined.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-Fallback.html",
  "title": "ShaderLab: Fallback"
}, {
  "description": "Fog parameters are controlled with Fog command.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-Fog.html",
  "title": "ShaderLab: Legacy Fog"
}, {
  "description": "In addition to using Cg\/HSL shader programs, OpenGL Shading Language (GLSL) Shaders can be written directly.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-GLSLShaderPrograms.html",
  "title": "GLSL Shader programs"
}, {
  "description": "GrabPass is a special pass type - it grabs the contents of the screen where the object is about to be drawn into a texture.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-GrabPass.html",
  "title": "ShaderLab: GrabPass"
}, {
  "description": "Before Unity 5, texture properties could have options inside the\r\ncurly brace block, e.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-ImplementingTexGen.html",
  "title": "Implementing Fixed Function TexGen in Shaders"
}, {
  "description": "The material and lighting parameters are used to control the built-in vertex lighting.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-Material.html",
  "title": "ShaderLab: Legacy Lighting"
}, {
  "description": "Often it is convenient to keep most of a piece of shader code fixed but also allow slightly different shader “variants” to be produced.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-MultipleProgramVariants.html",
  "title": "Making multiple shader program variants"
}, {
  "description": "Gives the PassName name to the current pass.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-Name.html",
  "title": "ShaderLab: Name"
}, {
  "description": "\r\nCategory is a logical grouping of any commands below it.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-Other.html",
  "title": "ShaderLab: other commands"
}, {
  "description": "The Pass block causes the geometry of a GameObject to be rendered once.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-Pass.html",
  "title": "ShaderLab: Pass"
}, {
  "description": "Passes use tags to tell how and when they expect to be rendered to the rendering engine.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-PassTags.html",
  "title": "ShaderLab: Pass Tags"
}, {
  "description": "Unity runs on various graphics library platforms: Open GL, Direct3D, Metal, and games consoles.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-PlatformDifferences.html",
  "title": "Platform-specific rendering differences"
}, {
  "description": "Shaders can define a list of parameters to be set by artists in Unity’s material inspector.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-Properties.html",
  "title": "ShaderLab: Properties"
}, {
  "description": "Shader declares Material properties in a Properties block.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-PropertiesInPrograms.html",
  "title": "Accessing shader properties in Cg\/HLSL"
}, {
  "description": "Shaders in Unity can be written in one of three different ways:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-Reference.html",
  "title": "Shader Reference"
}, {
  "description": "Shaders define both how an object looks by itself (its material properties) and how it reacts to the light.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-RenderPipeline.html",
  "title": "Unity's Rendering Pipeline"
}, {
  "description": "Most of the time when sampling textures in shaders, the texture sampling state should come form texture settings – essentially, textures and samplers are coupled together.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-SamplerStates.html",
  "title": "Using sampler states"
}, {
  "description": "After the basic vertex lighting has been calculated, textures are applied.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-SetTexture.html",
  "title": "ShaderLab: Legacy Texture Combiners"
}, {
  "description": "All Shaders files in Unity are written in a declarative language called “ShaderLab”.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-Shader.html",
  "title": "ShaderLab Syntax"
}, {
  "description": "When writing either Surface Shaders or regular\r\nShader Programs, the HLSL source can be\r\ncompiled into different “shader models”.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-ShaderCompileTargets.html",
  "title": "Shader Compilation Target Levels"
}, {
  "description": "Shader Level of Detail (LOD) works by only using shaders or subshaders that have their LOD value less than a given number.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-ShaderLOD.html",
  "title": "Shader Level of Detail"
}, {
  "description": "The more computations and processing your shader code needs to do, the more it will impact the performance of your game.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-ShaderPerformance.html",
  "title": "Performance tips when writing shaders"
}, {
  "description": "\r\nShaderLab shaders encompass more than just “hardware shaders”.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-ShaderPrograms.html",
  "title": "Writing vertex and fragment shaders"
}, {
  "description": "Some rendering effects require rendering a scene with a different set of shaders.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-ShaderReplacement.html",
  "title": "Rendering with Replaced Shaders"
}, {
  "description": "When writing HLSL shader programs,\r\ninput and output variables need to have their “intent” indicated\r\nvia semantics.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-ShaderSemantics.html",
  "title": "Shader semantics"
}, {
  "description": "In Unity, shader programs are written in a variant of HLSL language (also called Cg but for most practical uses the two are the same).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-ShadingLanguage.html",
  "title": "Shading Language used in Unity"
}, {
  "description": "The stencil buffer can be used as a general purpose per pixel mask for saving or discarding pixels.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-Stencil.html",
  "title": "ShaderLab: Stencil"
}, {
  "description": "Each shader in Unity consists of a list of subshaders.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-SubShader.html",
  "title": "ShaderLab: SubShader"
}, {
  "description": "Subshaders use tags to tell how and when they expect to be rendered to the rendering engine.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-SubShaderTags.html",
  "title": "ShaderLab: SubShader Tags"
}, {
  "description": "Here are some examples of Surface Shaders.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-SurfaceShaderExamples.html",
  "title": "Surface Shader examples"
}, {
  "description": "When writing Surface Shaders, you describe the properties of a surface (such as albedo color and normal), and a Lighting Model computes the lighting interaction.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-SurfaceShaderLighting.html",
  "title": "Custom lighting models in Surface Shaders"
}, {
  "description": "This page provides examples of custom Surface Shader lighting models in Surface Shaders.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-SurfaceShaderLightingExamples.html",
  "title": "Surface Shader lighting examples"
}, {
  "description": "Writing shaders that interact with lighting is complex.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-SurfaceShaders.html",
  "title": "Writing Surface Shaders"
}, {
  "description": "\r\nSurface Shaders have some support for DirectX 11 \/ OpenGL Core GPU Tessellation.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-SurfaceShaderTessellation.html",
  "title": "Surface Shaders with DX11 \/ OpenGL Core Tessellation"
}, {
  "description": "Similar to regular 2D textures (Texture2D class, sampler2D in shaders), cube maps (Cubemap class, samplerCUBE in shaders), and 3D textures (Texture3D class, sampler3D in shaders), Unity also supports 2D texture arrays.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-TextureArrays.html",
  "title": "Texture arrays"
}, {
  "description": "Unity provides a handful of built-in global variables for your shaders: things like current object’s transformation matrices, light parameters, current time and so on.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-UnityShaderVariables.html",
  "title": "Built-in shader variables"
}, {
  "description": "The UsePass command uses named passes from another shader.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-UsePass.html",
  "title": "ShaderLab: UsePass"
}, {
  "description": "This page contains vertex and fragment program examples.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-VertexFragmentShaderExamples.html",
  "title": "Vertex and fragment shader examples"
}, {
  "description": "For Cg\/HLSL vertex programs, the\r\nMesh vertex data is passed as inputs to the vertex\r\nshader function.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SL-VertexProgramInputs.html",
  "title": "Providing vertex data to vertex programs"
}, {
  "description": "Unity incorporates a tool called UnityYAMLMerge that can merge scene and prefab files in a semantically correct way.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SmartMerge.html",
  "title": "Smart Merge"
}, {
  "description": "A Sorting Group is a component which alters the order in which Sprite Renderers do their rendering.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SortingGroup.html",
  "title": "Sorting Group"
}, {
  "description": "\r\nSparse textures (also known as “tiled textures” or “mega-textures”) are textures that are too large to fit in graphic memory in their entirety.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SparseTextures.html",
  "title": "Sparse Textures"
}, {
  "description": "HoloLens has built-in cameras that continuously scan the environment, allowing it to construct virtual world geometry for real-world objects.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SpatialMapping.html",
  "title": "HoloLens Spatial Mapping"
}, {
  "description": "The Spatial Mapping Collider component allows holographic content to interact with real-world physical Surfaces.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SpatialMappingCollider.html",
  "title": "Spatial Mapping Collider"
}, {
  "description": "To facilitate Spatial Mapping in Unity and allow easy access to its features, Unity provides two Spatial Mapping XR components: ",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SpatialMappingComponents.html",
  "title": "Spatial Mapping components"
}, {
  "description": "The Spatial Mapping Renderer and Collider components allow you to use the features of Spatial Mapping easily without worrying about the finer details of the system.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SpatialMappingLowLevelApi.html",
  "title": "Spatial Mapping low level API"
}, {
  "description": "The Spatial Mapping Renderer component provides a visual representation of Spatial Mapping Surfaces.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SpatialMappingRenderer.html",
  "title": "Spatial Mapping Renderer"
}, {
  "description": "Spatial Mapping generates a large amount of data.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SpatialMappingTroubleshooting.html",
  "title": "Spatial Mapping common troubleshooting issues"
}, {
  "description": "You can usually choose any name you like for the folders you create to organise your Unity project.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SpecialFolders.html",
  "title": "Special folder names"
}, {
  "description": "SpeedTree Assets (.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SpeedTree.html",
  "title": "SpeedTree"
}, {
  "description": "An animated character typically has a number of different movements that are activated in the game in different circumstances, called Animation Clips.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Splittinganimations.html",
  "title": "Extracting animation clips"
}, {
  "description": "Sprite Atlas is an asset",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SpriteAtlas.html",
  "title": "Sprite Atlas"
}, {
  "description": "With this tool you can create temporary placeholder sprite (2D) graphics.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SpriteCreator.html",
  "title": "Sprite Creator"
}, {
  "description": "Sometimes a sprite texture contains just a single graphic element but it is often more convenient to combine several related graphics together into a single image.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SpriteEditor.html",
  "title": "Sprite Editor"
}, {
  "description": "Use the Sprite Editor’s Edit Outline option to edit the generated Mesh for a Sprite, effectively editing its outline.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SpriteOutlineEditor.html",
  "title": "Sprite Editor: Edit Outline"
}, {
  "description": "When designing sprite graphics, it is convenient to work with a separate texture file for each character.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SpritePacker.html",
  "title": "Sprite Packer"
}, {
  "description": "\r\nSprites are 2D Graphic objects.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Sprites.html",
  "title": "Sprites"
}, {
  "description": "This section of the User Manual contains documentation on developing for standalone platforms.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Standalone.html",
  "title": "Standalone"
}, {
  "description": "When thinking about lighting in Unity, it is handy to divide the concepts into what we call the content the item being lit and rendered, and the context, which is the lighting that exists in the scene which affects the object being lit.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/StandardShaderContextAndContent.html",
  "title": "Content and Context"
}, {
  "description": "One important visual cue of objects in the real world has to do with how they become more reflective at grazing angles (illustrated below).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/StandardShaderFresnel.html",
  "title": "The Fresnel Effect"
}, {
  "description": "The Standard shader is a solid example of a shader using the new PBS System and should be valuable for a range of uses, but you can of course build on this editing the shader and bringing more esoteric materials and workflows to suit your projects.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/StandardShaderMakeYourOwn.html",
  "title": "Make your own"
}, {
  "description": "There are also hints on how to make realistic materials in these charts.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/StandardShaderMaterialCharts.html",
  "title": "Material charts"
}, {
  "description": "The Albedo parameter controls the base color of the surface.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/StandardShaderMaterialParameterAlbedoColor.html",
  "title": "Albedo Color and Transparency"
}, {
  "description": "Secondary Maps (or Detail maps) allow you to overlay a second set of textures on top of the main textures listed above.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/StandardShaderMaterialParameterDetail.html",
  "title": "Secondary Maps (Detail Maps) & Detail Mask"
}, {
  "description": "Controls colour and intensity of light emitted from the surface.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/StandardShaderMaterialParameterEmission.html",
  "title": "Emission"
}, {
  "description": "Height mapping (also known as parallax mapping) is a similar concept to normal mapping, however this technique is more complex - and therefore also more performance-expensive.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/StandardShaderMaterialParameterHeightMap.html",
  "title": "Heightmap"
}, {
  "description": "When working in the Metallic workflow (as opposed to the Specular workflow), the the reflectivity and light response of the surface are modified by the Metallic level and the Smoothness level.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/StandardShaderMaterialParameterMetallic.html",
  "title": "Metallic mode: Metallic Parameter"
}, {
  "description": "Normal maps are a type of Bump Map.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/StandardShaderMaterialParameterNormalMap.html",
  "title": "Normal map (Bump mapping)"
}, {
  "description": "The occlusion map is used to provide information about which areas of the model should receive high or low indirect lighting.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/StandardShaderMaterialParameterOcclusionMap.html",
  "title": "Occlusion Map"
}, {
  "description": "The first Material Parameter in the Standard Shader is Rendering Mode.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/StandardShaderMaterialParameterRenderingMode.html",
  "title": "Rendering Mode"
}, {
  "description": "The standard shader presents you with a list of material parameters.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/StandardShaderMaterialParameters.html",
  "title": "Material parameters"
}, {
  "description": "The concept of Smoothness applies to both the Specular workflow and the Metallic workflow, and works in very much the same way in both.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/StandardShaderMaterialParameterSmoothness.html",
  "title": "Smoothness"
}, {
  "description": "The Specular parameter is only visible when using the Specular setup, as shown in the Shader field in the image above.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/StandardShaderMaterialParameterSpecular.html",
  "title": "Specular mode: Specular parameter"
}, {
  "description": "When creating a material using the Standard shader you will have the choice of using one of two flavours, “Standard” and “Standard (Specular setup)”.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/StandardShaderMetallicVsSpecular.html",
  "title": "Metallic vs Specular Workflow"
}, {
  "description": "The basic idea is that a character is engaged in some particular kind of action at any given time.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/StateMachineBasics.html",
  "title": "State Machine Basics"
}, {
  "description": "A State Machine Behaviour is a special class of script.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/StateMachineBehaviours.html",
  "title": "State Machine Behaviours"
}, {
  "description": "State Machine Transitions exist to help you simplify large or complex State Machines.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/StateMachineTransitions.html",
  "title": "State Machine Transitions"
}, {
  "description": "Many optimisations need to know if an object can move during gameplay.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/StaticObjects.html",
  "title": "Static GameObjects"
}, {
  "description": "The minimum requirements are:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/StereoscopicRendering.html",
  "title": "How to do Stereoscopic Rendering"
}, {
  "description": "Most assets in Unity are combined into the project when it is built.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/StreamingAssets.html",
  "title": "Streaming Assets"
}, {
  "description": "When you build a project for the iOS platform, Unity will create a folder that contains an XCode project.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/StructureOfXcodeProject.html",
  "title": "Structure of a Unity XCode Project"
}, {
  "description": "The text for UI elements and text meshes can incorporate multiple font styles and sizes.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/StyledText.html",
  "title": "Rich Text"
}, {
  "description": "The Event System supports a number of events, and they can be customised further in user custom user written Input Modules.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SupportedEvents.html",
  "title": "Supported Events"
}, {
  "description": "In your Editor scripts, use the ObjectFactory API to create new GameObjects and components.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SupportingPresets.html",
  "title": "Supporting Presets"
}, {
  "description": "The Unity Manual and Scripting API hold documentation for several versions of Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/SwitchingDocumentationVersions.html",
  "title": "Switching between Unity versions in the documentation"
}, {
  "description": "A Tag is a reference word which you can assign to one or more GameObjects.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Tags.html",
  "title": "Tags"
}, {
  "description": "Often in games, a situation arises where a character must move in such a way that a hand or foot lands at a certain place at a certain time.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TargetMatching.html",
  "title": "Target Matching"
}, {
  "description": "A terrain can have grass clumps and other small objects such as rocks covering its surface.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/terrain-Grass.html",
  "title": "Grass and other details"
}, {
  "description": "The first three tools on the terrain inspector toolbar are used to paint changes in height onto the terrain.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/terrain-Height.html",
  "title": "Height Tools"
}, {
  "description": "The final tool on the terrain toolbar is for settings:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/terrain-OtherSettings.html",
  "title": "Terrain settings"
}, {
  "description": "You can add texture images to the surface of a terrain to create coloration and fine detail.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/terrain-Textures.html",
  "title": "Terrain Textures"
}, {
  "description": "Unity terrains can be furnished with trees.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/terrain-Trees.html",
  "title": "Trees"
}, {
  "description": "To add a Terrain GameObject to your Scene, select GameObject > 3D Object > Terrain from the menu.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/terrain-UsingTerrains.html",
  "title": "Creating and editing Terrains"
}, {
  "description": "You can create the effect of wind on your terrain by adding one or more objects with Wind Zone components.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/terrain-WindZones.html",
  "title": "Wind Zones"
}, {
  "description": "The Unity Test Runner is a tool that tests your code in both Edit mode and Play mode, and also on target platforms such as Standalone, Android, or iOS.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/testing-editortestsrunner.html",
  "title": "Unity Test Runner"
}, {
  "description": "As well as the default binary format, Unity also provides a text-based format for scene data.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TextSceneFormat.html",
  "title": "Text-Based Scene Files"
}, {
  "description": "Normally, the mesh geometry of an object only gives a rough approximation of the shape while most of the fine detail is supplied by Textures.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Textures.html",
  "title": "Textures"
}, {
  "description": "You can import different Texture types into the Unity Editor via the Texture Importer.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TextureTypes.html",
  "title": "Texture Types"
}, {
  "description": "From the GameObject menu, move to 2D Object and select Tilemap.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Tilemap-CreatingTilemaps.html",
  "title": "Creating Tilemaps"
}, {
  "description": "There are two ways to create Tiles.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Tilemap-CreatingTiles.html",
  "title": "Creating Tiles"
}, {
  "description": "To paint on a Tilemap it must be the selected Active Tilemap in the Tile Palette.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Tilemap-Painting.html",
  "title": "Painting Tilemaps"
}, {
  "description": "Alt + Left Mouse Button to pan",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Tilemap-Palette.html",
  "title": "Tilemap Palette"
}, {
  "description": "You can add a Tilemap Collider 2D component to the GameObject of a Tilemap to generate a collider based on the Tiles of the Tilemap.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Tilemap-Physics2D.html",
  "title": "Tilemaps and Physics 2D"
}, {
  "description": "\r\nLineBrush provides the ability to easily draw lines of Tiles onto the Tilemap by specifying the start point and the end point.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Tilemap-ScriptableBrushes-Example.html",
  "title": "Scriptable Brush example"
}, {
  "description": "All brushes added must inherit from GridBrushBase.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Tilemap-ScriptableBrushes-GridBrushBase.html",
  "title": "GridBrushBase"
}, {
  "description": "All brush editors added must inherit from GridBrushEditorBase.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Tilemap-ScriptableBrushes-GridBrushEditorBase.html",
  "title": "GridBrushEditorBase"
}, {
  "description": "\r\nSelect = 0 - Tool for Selection for a GridBrush",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Tilemap-ScriptableBrushes-OtherClasses.html",
  "title": "Other useful classes"
}, {
  "description": "Create a new class inheriting from GridBrushBase (or any useful sub-classes of GridBrushBase like GridBrush).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Tilemap-ScriptableBrushes.html",
  "title": "Scriptable Brushes"
}, {
  "description": "The RoadTile example provide the ability to easily layout linear segments onto the Tilemap, such as roads or pipes, with a minimal set of sprites.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Tilemap-ScriptableTiles-Example.html",
  "title": "Scriptable Tile example"
}, {
  "description": "\r\nNone = 0\r\n",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Tilemap-ScriptableTiles-OtherClasses.html",
  "title": "Other useful classes"
}, {
  "description": "The Tile class is a simple class that allows a sprite to be rendered on the Tilemap.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Tilemap-ScriptableTiles-Tile.html",
  "title": "Tile"
}, {
  "description": "This is an array of sprites for the Tile animation.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Tilemap-ScriptableTiles-TileAnimationData.html",
  "title": "TileAnimationData"
}, {
  "description": "All tiles to be added to the Tilemap must inherit from TileBase.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Tilemap-ScriptableTiles-TileBase.html",
  "title": "TileBase"
}, {
  "description": "This is the sprite that is rendered for the Tile.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Tilemap-ScriptableTiles-TileData.html",
  "title": "TileData"
}, {
  "description": "Create a new class inheriting from TileBase (or any useful sub-classes of TileBase, like Tile).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Tilemap-ScriptableTiles.html",
  "title": "Scriptable Tiles"
}, {
  "description": "Typically, Tiles are actually Sprites that are arranged on a Tilemap.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Tilemap-TileAsset.html",
  "title": "Tile Assets"
}, {
  "description": "The Tilemap feature allows you to quickly create 2D levels using tiles and a grid overlay.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Tilemap.html",
  "title": "Tilemap"
}, {
  "description": "The Update function allows you to monitor inputs and other events regularly from a script and take appropriate action.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimeFrameManagement.html",
  "title": "Time and Framerate Management"
}, {
  "description": "Use the Inspector window to change the name of an Activation clip and its Clip Timing.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineActivationClipProperties.html",
  "title": "Activation Clip properties"
}, {
  "description": "Use the Inspector window to change the name of an Activation track and to set the state of its bound GameObject when the Timeline Asset finishes playing.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineActivationTrackProperties.html",
  "title": "Activation Track properties"
}, {
  "description": "The Timeline Editor window supports different methods of adding clips to tracks depending on the type of track.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineAddingClips.html",
  "title": "Adding clips"
}, {
  "description": "The Curves view provides the following methods for adding keys:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineAddingKeys.html",
  "title": "Adding keys"
}, {
  "description": "The Timeline Editor window supports many different methods of adding tracks to the Track list.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineAddingTracks.html",
  "title": "Adding tracks"
}, {
  "description": "Use the Inspector window to change the playable asset properties of an Animation clip.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineAnimationClipPlayableProperties.html",
  "title": "Animation Clip playable asset properties"
}, {
  "description": "Use the Inspector window to change the common properties of an Animation clip.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineAnimationClipProperties.html",
  "title": "Animation Clip common properties"
}, {
  "description": "Use the Inspector window to change the name of an Animation track, apply an avatar mask, apply track offsets, and to specify the transforms that are matched when matching clip offsets between Animation clips.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineAnimationTrackProperties.html",
  "title": "Animation Track properties"
}, {
  "description": "Use the Inspector window to change the properties of an Audio clip.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineAudioClipProperties.html",
  "title": "Audio Clip properties"
}, {
  "description": "Blend two clips on the same track to create a smooth transition between two Animation clips, two Audio clips, or two Playable clips.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineBlendingClips.html",
  "title": "Blending clips"
}, {
  "description": "Change the play speed of clip speed to accelerate or decelerate its audio, motion, animation, or particle effect.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineChangingClipPlaySpeed.html",
  "title": "Changing clip play speed"
}, {
  "description": "Every key has one or two tangents that control the interpolation of the animation curve.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineChangingInterpolation.html",
  "title": "Changing interpolation and shape"
}, {
  "description": "The Clips view is where you add, position, and manipulate clips for each track in the Track list.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineClipsView.html",
  "title": "Clips view"
}, {
  "description": "The Curves view shows the animation curves for Infinite clips or for Animation clips that have been converted from Infinite clips.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineCurvesView.html",
  "title": "Curves view"
}, {
  "description": "The Curves view provides the following methods for deleting keys:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineDeletingKeys.html",
  "title": "Deleting keys"
}, {
  "description": "Delete a track to remove the track, its clips, blends, and properties from the Timeline Editor window.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineDeletingTracks.html",
  "title": "Deleting tracks"
}, {
  "description": "The Timeline Editor window supports the following different methods of duplicating clips:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineDuplicatingClips.html",
  "title": "Duplicating clips"
}, {
  "description": "The Timeline Editor window supports the following different methods of duplicating tracks:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineDuplicatingTracks.html",
  "title": "Duplicating tracks"
}, {
  "description": "Ease-in and ease-out a clip to create a smooth transition between a clip and its surrounding gaps.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineEasingClips.html",
  "title": "Easing-in and Easing-out clips"
}, {
  "description": "Edit a key to change its time, value, or both.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineEditingKeys.html",
  "title": "Editing keys"
}, {
  "description": "To access the Timeline Editor window, select Timeline Editor from the Window menu.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineEditorWindow.html",
  "title": "Timeline Editor window"
}, {
  "description": "Gap extrapolation refers to how an Animation track approximates animation data in the gaps before and after an Animation clip.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineGapExtrapolation.html",
  "title": "Setting gap extrapolation"
}, {
  "description": "This section provides an alphabetical list of the terminology used throughout the Timeline documentation.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineGlossary.html",
  "title": "Timeline glossary"
}, {
  "description": "For the selected Animation clip, the Curves view includes a hierarchical list of the properties with animation curves.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineHidingCurves.html",
  "title": "Hiding and showing curves"
}, {
  "description": "To hide the tracks in a Track group, click the Triangle icon beside the name of the Track group.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineHidingTrackGroups.html",
  "title": "Hiding and showing Track groups"
}, {
  "description": "The Inspector window displays information about the selected GameObject including all attached components and their properties.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineInspector.html",
  "title": "Timeline and the Inspector Window"
}, {
  "description": "Lock a track to lock editing of the track and any of the clips used by the track.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineLockingTracks.html",
  "title": "Locking tracks"
}, {
  "description": "Every Animation clip contains key animation, or motion, that animates the GameObject, or humanoid, bound to the Animation track.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineMatchOffsets.html",
  "title": "Matching clip offsets"
}, {
  "description": "Mute a track to disable its clips and hide them from the scene.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineMutingTracks.html",
  "title": "Muting tracks"
}, {
  "description": "Use one of the following methods to pan, zoom, or frame clips in the Clips view:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineNavigatingClipsView.html",
  "title": "Navigating the Clips view"
}, {
  "description": "Use one of the following methods to pan, zoom, resize, or frame the animation curves and keys in the Curves view:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineNavigatingCurvesView.html",
  "title": "Navigating the Curves view"
}, {
  "description": "Use Track groups to organize tracks when you are working with many tracks.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineOrganizingTrackGroups.html",
  "title": "Organizing tracks into Track groups"
}, {
  "description": "Use the Timeline Editor window to create cut-scenes, cinematics, and game-play sequences by visually arranging tracks and clips linked to GameObjects in your scene.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineOverview.html",
  "title": "Timeline overview"
}, {
  "description": "Use the buttons and fields in the Timeline Playback Controls to play the Timeline instance and to control the location of the Timeline Playhead.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelinePlaybackControls.html",
  "title": "Timeline Playback Controls"
}, {
  "description": "To position clips on a track, select one or more clips and drag.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelinePositioningClips.html",
  "title": "Positioning clips"
}, {
  "description": "Use the Timeline Selector to select the Timeline instance to view, modify, or preview in the Timeline Editor window.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelinePreviewSelector.html",
  "title": "Timeline Preview and Timeline Selector"
}, {
  "description": "The rendering and animation priority of tracks is from top to bottom.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineReorderingTracks.html",
  "title": "Reordering tracks and rendering priority"
}, {
  "description": "You can reset a clip to its original duration.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineResettingClips.html",
  "title": "Resetting clips"
}, {
  "description": "Use Unity’s Timeline to create cinematic content, game-play sequences, audio sequences, and complex particle effects.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineSection.html",
  "title": "Timeline"
}, {
  "description": "Click to select a single clip.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineSelectingClips.html",
  "title": "Selecting clips"
}, {
  "description": "Click to select a single key.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineSelectingKeys.html",
  "title": "Selecting keys"
}, {
  "description": "Click to select a single track.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineSelectingTracks.html",
  "title": "Selecting tracks"
}, {
  "description": "Use the Timeline Settings to set the unit of measurement for the Timeline Asset, to set the duration mode of the Timeline Asset, and to set the Timeline Editor window snap settings.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineSettings.html",
  "title": "Timeline Settings"
}, {
  "description": "You can split a clip into two identical clips with different starts, ends, and durations.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineSplittingClips.html",
  "title": "Splitting clips"
}, {
  "description": "Tile clips to remove gaps, blends, and overlaps between clips on the same track.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineTilingClips.html",
  "title": "Tiling clips"
}, {
  "description": "Use the Track List to add, select, duplicate, delete, lock, mute, and reorder the tracks that comprise a Timeline Asset.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineTrackList.html",
  "title": "Track List"
}, {
  "description": "Drag the start or end of a clip to trim its duration.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineTrimmingClips.html",
  "title": "Trimming clips"
}, {
  "description": "An Infinite clip appears as a dopesheet.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineWorkflowConvertingInfiniteClip.html",
  "title": "Converting an Infinite clip to an Animation clip"
}, {
  "description": "To use a Timeline Asset in your scene, associate the Timeline Asset to a GameObject using a Playable Director component.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineWorkflowCreatingAssetInstance.html",
  "title": "Creating a Timeline Asset and Timeline instance"
}, {
  "description": "This workflow demonstrates how to use a Timeline Instance to animate a humanoid character with external motion clips.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineWorkflowHumanoidAnimation.html",
  "title": "Creating humanoid animation"
}, {
  "description": "This workflow demonstrates how to use an Animation Override track and an Avatar Mask to replace the upper-body animation of an Animation track.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineWorkflowOverrideMasking.html",
  "title": "Using Animation Override Tracks and Avatar Masking"
}, {
  "description": "You can record animation directly to an Animation track.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineWorkflowRecordingBasicAnimation.html",
  "title": "Recording basic animation with an Infinite clip"
}, {
  "description": "The Timeline Editor window provides many different workflows for creating Timeline Assets and instances, recording animation, scheduling animation, and creating cinematic content.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TimelineWorkflows.html",
  "title": "Timeline workflows"
}, {
  "description": "The Toolbar consists of seven basic controls.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Toolbar.html",
  "title": "The Toolbar"
}, {
  "description": "Tracker Modules are essentially just packages of audio samples that have been modeled, arranged and sequenced programatically.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TrackerModules.html",
  "title": "Tracker Modules"
}, {
  "description": "To transfer a Unity Project from one organization to another, you must be an owner or manager of both organizations.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TransferringProjects.html",
  "title": "Transfer a Project to a new Organization"
}, {
  "description": "The Transform is used to store a GameObject’s position, rotation, scale and parenting state and is thus very important.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Transforms.html",
  "title": "Transforms"
}, {
  "description": "Branch groups node is responsible for generating branches and fronds.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/tree-Branches.html",
  "title": "Branch Group Properties"
}, {
  "description": "We’ll now walk you through the creation of your first tree with the Tree creation tool.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/tree-FirstTree.html",
  "title": "Building Your First Tree"
}, {
  "description": "Leaf groups generate leaf geometry.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/tree-Leaves.html",
  "title": "Leaf Group Properties"
}, {
  "description": "With the Tree Creator package imported, you can select GameObject > 3D Object > Tree to add a new tree to the scene (this will also create a new Tree asset in the Project view).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/tree-Structure.html",
  "title": "Tree  Basics"
}, {
  "description": "The information on this page assumes the reader has basic knowledge of IMGUI (Immediate Mode GUI) concepts.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TreeViewAPI.html",
  "title": "TreeView"
}, {
  "description": "This section addresses common problems that can arise when using Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TroubleShooting.html",
  "title": "Troubleshooting"
}, {
  "description": "While developing for Android using Unity, you could encounter a number of issues.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TroubleShootingAndroid.html",
  "title": "Troubleshooting Android development"
}, {
  "description": "The following sections explain how to troubleshoot and prevent problems with the Unity editor in different situations.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TroubleShootingEditor.html",
  "title": "Troubleshooting The Editor"
}, {
  "description": "There are some situations with iOS where your game can work perfectly in the Unity editor but then doesn’t work or maybe doesn’t even start on the actual device.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/TroubleShootingIPhone.html",
  "title": "Troubleshooting on iOS devices"
}, {
  "description": "This manual page is primarily aimed at helping developers transition from iOS to tvOS.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/tvOS.html",
  "title": "Building games for Apple TV"
}, {
  "description": "Animation allows for each transition between control states to be fully animated using Unity’s animation system.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UIAnimationIntegration.html",
  "title": "Animation Integration"
}, {
  "description": "The Rect Transform layout system is flexible enough to handle a lot of different types of layouts and it also allows placing elements in a complete freeform fashion.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UIAutoLayout.html",
  "title": "Auto Layout"
}, {
  "description": "In this section we’ll look at how you can position UI elements relative to the Canvas and each other.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UIBasicLayout.html",
  "title": "Basic Layout"
}, {
  "description": "The Canvas is the area that all UI elements should be inside.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UICanvas.html",
  "title": "Canvas"
}, {
  "description": "UIElements is a new experimental feature introduced in Unity 2017.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UIElements.html",
  "title": "Getting started with UIElements"
}, {
  "description": "In this section you can learn about solutions to common UI tasks.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UIHowTos.html",
  "title": "UI How Tos"
}, {
  "description": "This section covers components in the UI system that handles interaction, such as mouse or touch events and interaction using a keyboard or controller.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UIInteractionComponents.html",
  "title": "Interaction Components"
}, {
  "description": "This section goes into more depth about Unity’s UI features.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UIReference.html",
  "title": "UI Reference"
}, {
  "description": "The UI system allows you to create user interfaces fast and intuitively.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UISystem.html",
  "title": "UI"
}, {
  "description": "With the introduction of the UI system, new Components have been added that will help you create GUI specific functionality.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UIVisualComponents.html",
  "title": "Visual Components"
}, {
  "description": "When an object, string or array is created, the memory required to store it is allocated from a central pool called the heap.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnderstandingAutomaticMemoryManagement.html",
  "title": "Understanding Automatic Memory Management"
}, {
  "description": "The word frustum refers to a solid shape that looks like a pyramid with the top cut off parallel to the base.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnderstandingFrustum.html",
  "title": "Understanding the View Frustum"
}, {
  "description": "Vector arithmetic is fundamental to 3D graphics, physics and animation and it is useful to understand it in depth to get the most out of Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnderstandingVectorArithmetic.html",
  "title": "Understanding Vector Arithmetic"
}, {
  "description": "This section has an overview and detailed reference pages on making your project multiplayer.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNet.html",
  "title": "Multiplayer and Networking"
}, {
  "description": "The network system has ways to perform actions across the network.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetActions.html",
  "title": "Remote Actions"
}, {
  "description": "When you are making a multiplayer game, In addition to synchronizing the properties of networked GameObjects, you are likely to need to send, receive, and react to other pieces of information - such as when the match starts, when a player joins or leaves the match, or other information specific to your type of game, for example a notification to all players that a flag has been captured in a “capture-the-flag” style game.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetActionsAndCommunication.html",
  "title": "Actions and communication"
}, {
  "description": "Servers and clients can both manage a GameObject’s behavior.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetAuthority.html",
  "title": "Network Authority"
}, {
  "description": "You can create scripts which inherit from these classes to customise the way Unity’s networking works.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetClassesReference.html",
  "title": "Multiplayer Classes Reference"
}, {
  "description": "Many multiplayer games can use the Network Manager to manage connections, but you can also use the lower-level NetworkServer and NetworkClient classes directly.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetClientServer.html",
  "title": "Network clients and servers"
}, {
  "description": "In Unity’s High Level API (HLAPI) system, multiplayer games include:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetConcepts.html",
  "title": "Networking HLAPI System Concepts"
}, {
  "description": "This document describes steps to converting a single player game to a multiplayer game, using the new Unity Multiplayer networking system.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetConverting.html",
  "title": "Converting a single-player game to Unity Multiplayer"
}, {
  "description": "When using the Network Manager with the Network Manager HUD, the NetworkManager.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetCustomizedMatchmakingCallbacks.html",
  "title": "Customized Matchmaking callbacks"
}, {
  "description": "The built-in Network Proximity Checker component is the built-in default component for determining a GameObject’s network visibility.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetCustomizingNetworkVisibility.html",
  "title": "Customizing network visibility"
}, {
  "description": "You can use spawn handler functions to customize the default behaviour when creating spawned GameObjects from prefabs on the client.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetCustomSpawning.html",
  "title": "Custom Spawn Functions"
}, {
  "description": "When you are making your multipayer game, you will need to implement a way for players to find each other, join existing matches or create new ones.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetDealingWithClientsServers.html",
  "title": "Dealing with clients and servers"
}, {
  "description": "Unity provides tools to get information about your game at run time.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetDebugging.html",
  "title": "Debugging Information"
}, {
  "description": "The Network Discovery component allows Unity multiplayer games to find each other on a local area network (a LAN).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetDiscovery.html",
  "title": "Network Discovery"
}, {
  "description": "Networked GameObjects are GameObjects which are controlled and synchronized by Unity’s networking system.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetGameObjects.html",
  "title": "Networked GameObjects"
}, {
  "description": "This page contains an overview of the most basic and common things you need when setting up a multiplayer project.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetGettingStarted.html",
  "title": "Setting up a multiplayer project"
}, {
  "description": "In a multiplayer network game without a dedicated server, one of the game instances acts as the host - the center of authority for the game.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetHostMigration.html",
  "title": "Host Migration"
}, {
  "description": "Most multiplayer games have a “lobby”; a Scene in the game for players to join before playing the actual game.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetLobby.html",
  "title": "Multiplayer Lobby"
}, {
  "description": "The Network Manager is a component for managing the networking aspects of a multiplayer game.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetManager.html",
  "title": "Using the Network Manager"
}, {
  "description": "Note: This documentation assumes that you understand fundamental networking concepts such as the relationship between a host, server and client.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetManagerHUD.html",
  "title": "Using the Network Manager HUD"
}, {
  "description": "Click the LAN Host button to start a game as a host on the local network.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetManagerHUDLanMode.html",
  "title": "The Network Manager HUD in LAN mode"
}, {
  "description": "Matchmaker mode provides a simple interface that allows players to create, find and join matches hosted on Unity’s Multiplayer Service.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetManagerHUDMatchMakerMode.html",
  "title": "The Network Manager HUD in Matchmaker mode"
}, {
  "description": "In addition to “high-level” Commands and RPC calls, you can also send raw network messages.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetMessages.html",
  "title": "Network Messages"
}, {
  "description": "\r\nRelated tutorials: Multiplayer Networking\r\n",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetOverview.html",
  "title": "Multiplayer Overview"
}, {
  "description": "Unity’s multiplayer HLAPI system handles player GameObjects differently to non-player GameObjects.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetPlayers.html",
  "title": "Player GameObjects"
}, {
  "description": "The Network Manager offers a built-in simple player spawning feature, however you may want to customize the player spawning process - for example to assign a colour to each new player spawned.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetPlayersCustom.html",
  "title": "Custom Player Spawning"
}, {
  "description": "Use the NetworkReader and NetworkWriter classes to write data to byte streams.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetReaderWriter.html",
  "title": "NetworkReader and NetworkWriter serializers"
}, {
  "description": "This section gives details of the components used with the Unity multiplayer system.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetReference.html",
  "title": "Multiplayer Component Reference"
}, {
  "description": "There are two types of networked GameObjects in Unity’s multiplayer system:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetSceneObjects.html",
  "title": "Scene GameObjects"
}, {
  "description": "In Unity, you usually “spawn” (that is, create) new GameObjects with Instantiate().",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetSpawning.html",
  "title": "Spawning GameObjects"
}, {
  "description": "In most cases, the use of SyncVars is enough for your game scripts to serialize their state to clients.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetStateSync-Advanced.html",
  "title": "Advanced State Synchronization"
}, {
  "description": "State synchronization refers to the synchronization of values such as integers, floating point numbers, strings and boolean values belonging to scripts on your networked GameObjects.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetStateSync.html",
  "title": "State synchronization"
}, {
  "description": "Unity’s multiplayer High Level API (HLAPI) is a system for building multiplayer capabilities for Unity games.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetUsingHLAPI.html",
  "title": "The Multiplayer High Level API"
}, {
  "description": "In addition to the high-level networking API (HLAPI), Unity also provides access to a lower-level networking API called the Transport Layer.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetUsingTransport.html",
  "title": "Using the Transport Layer API"
}, {
  "description": "Multiplayer games use the concept of network visibility to determine which players can see which GameObjects at any given time during gameplay.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UNetVisibility.html",
  "title": "Network visibility"
}, {
  "description": "Unity Remote 3 (further refered to as Unity Remote) is an application that allows you to use your iOS device as a remote control for your project in Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/unity-remote.html",
  "title": "Unity Remote 3 (DEPRECATED)"
}, {
  "description": "This section contains documentation for users developing 2D games in Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Unity2D.html",
  "title": "2D"
}, {
  "description": "Unity Ads is a mobile advertising network for iOS & Android that delivers market leading revenue from your user base, while increasing engagement and retention.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAds.html",
  "title": "Unity Ads"
}, {
  "description": "This guide covers both methods for integrating Unity Ads in the Unity engine:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAdsUnityIntegration.html",
  "title": "Unity Editor integration"
}, {
  "description": "Unity Analytics is a simple but powerful data platform that provides analytics for your Unity game.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalytics.html",
  "title": "Unity Analytics"
}, {
  "description": "Advanced Integration provides richer game data and enhances what you can see and do in the dashboard.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsAdvancedSDK.html",
  "title": "Advanced Integration (SDK)"
}, {
  "description": "The UnityAnalyticsIntegration script can be attached to any GameObject in any Scene in your game to initialize the Unity Analytics SDK.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsAttachSDK.html",
  "title": "Attach Game Script"
}, {
  "description": "Basic Integration has never been quicker and easier.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsBasicSDK.html",
  "title": "Basic Integration (SDK)"
}, {
  "description": "COPPA stands for the Children’s Online Privacy Protection Act (and related regulations).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsCOPPA.html",
  "title": "COPPA Compliance"
}, {
  "description": "Core Events are session-based and device-based Analytics events.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsCoreEvents.html",
  "title": "Core Events"
}, {
  "description": "In the Unity Editor, create a new C# script by going to:\r\nAssets->Create->C# Script\r\nName the newly created script: UnityAnalyticsIntegration (naming must be exact for the script to work correctly)",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsCreateSDK.html",
  "title": "Create Game Script"
}, {
  "description": "Custom Events can be any specific in-game action your user performs.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsCustomEvents.html",
  "title": "Custom Events"
}, {
  "description": "As an alternative to using the AnalyticsEventTracker component, you can send Custom Events directly via script by calling AnalyticsEvent.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsCustomEventScripting.html",
  "title": "Custom Event scripting"
}, {
  "description": "Custom events can be any specific in-game action your user performs.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsCustomEventsSDK.html",
  "title": "Custom Events"
}, {
  "description": "The Overview tab of your Unity Analytics Dashboard provides a number of predefined charts that track commonly used metrics and key performance indicators.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsDashbaordOverview.html",
  "title": "Overview tab "
}, {
  "description": "The Unity Analytics Service provides a web dashboard for:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsDashboard.html",
  "title": "Analytics Dashboard"
}, {
  "description": "View and edit settings for individual Unity Analytics projects on the Configure page.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsDashboardConfigure.html",
  "title": "Configure tab "
}, {
  "description": "View a list of all the standard and custom events and parameters you have dispatched from your project.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsDashboardEventManager.html",
  "title": "Event Manager "
}, {
  "description": "Export your raw event data so that you can process and visualize it using external tools.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsDashboardRDE.html",
  "title": "Raw Data Export page"
}, {
  "description": "Remote Settings are variables that you can set on your Analytics Dashboard and access in your game.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsDashboardRemoteSettings.html",
  "title": "Remote Settings page"
}, {
  "description": "Build reports for your Unity Analytics metrics and events using the Data Explorer.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsDataExplorer.html",
  "title": "Data Explorer"
}, {
  "description": "The General Data Protection Regulation (GDPR) is a European Union law regulating the data privacy of EU citizens.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsDataPrivacy.html",
  "title": "Unity Analytics and the EU General Data Protection Regulation (GDPR)"
}, {
  "description": "Unity Analytics allows you to permanently clear all data from your Analytics dashboard by performing a data reset.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsDataReset.html",
  "title": "Data reset"
}, {
  "description": "Both Standard and Custom events allow you to send additional information to the Analytics Service as part of an event.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsEventParameters.html",
  "title": "Analytics event parameters"
}, {
  "description": "Unity collects Analytics data by dispatching events when someone uses your application or game.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsEvents.html",
  "title": "Analytics events"
}, {
  "description": "Funnels track player progress through linear sequences of events, tasks, or actions in your game.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsFunnelAnalyzer.html",
  "title": "Funnel Analyzer tab "
}, {
  "description": "Funnels help you track whether players make it through linear sequences in your game.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsFunnels.html",
  "title": "Funnels"
}, {
  "description": "Download the latest version of the Unity Analytics SDK as a Unity package from the Unity Asset Store or download here:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsImportSDK.html",
  "title": "Import SDK"
}, {
  "description": "Visualize your data in real time at critical moments like game launch and during promotions.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsLivestream.html",
  "title": "Livestream page"
}, {
  "description": "If you cannot find a Project ID in the Services Window Settings, or if you observe a mis-match in Project IDs, this may be due to you upgrading a project using an older version of Unity, or by creating a new project while offline.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsMismatchedProjectId.html",
  "title": "What to Do if Project IDs Don't Match"
}, {
  "description": "Unity Analytics allows you to monitor your in-game revenue from monetization.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsMonetization.html",
  "title": "Monetization"
}, {
  "description": "Unity Analytics allows you to monitor your in-game revenue.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsMonetizationSDK.html",
  "title": "Monetization"
}, {
  "description": "Unity Analytics provides the data you need to manage your relationship with your players.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsOverview.html",
  "title": "Unity Analytics Overview"
}, {
  "description": "Unity Analytics Raw Data Export gives you full access to raw event data.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsRawDataExport.html",
  "title": "Unity Analytics Raw Data Export"
}, {
  "description": "Here are the implementation details:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsReceiptVerification.html",
  "title": "Receipt Verification"
}, {
  "description": "Here are the implementation details:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsReceiptVerificationSDK.html",
  "title": "Receipt Verification"
}, {
  "description": "Use the Unity Analytics Service Remote Settings feature to change variables in your game or application directly from the Analytics Dashboard.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsRemoteSettings.html",
  "title": "Remote Settings"
}, {
  "description": "Use the Remote Settings component to control the properties of other components in your Scene without writing any code.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsRemoteSettingsComponent.html",
  "title": "Remote Settings component"
}, {
  "description": "Before using Remote Settings, you must first enable Unity Services and the Unity Analytics Service for your Unity project.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsRemoteSettingsCreating.html",
  "title": "Creating and changing Remote Settings"
}, {
  "description": "To enable Remote Settings in a project:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsRemoteSettingsEnabling.html",
  "title": "Enabling Remote Settings "
}, {
  "description": "The Remote Settings window helps you manage your remote settings while you are developing your project in the Editor.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsRemoteSettingsManaging.html",
  "title": "Managing Remote Settings in the Unity Editor"
}, {
  "description": "When you create a Remote Settings key-value pair in the Unity Analytics Dashboard, the Unity Analytics Service stores that setting in the Configuration for your project that you have specified (either the Release or the Development configuration).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsRemoteSettingsNetRequests.html",
  "title": "Remote Settings network requests"
}, {
  "description": "Use the Unity Scripting API RemoteSettings class to handle your settings in code.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsRemoteSettingsScripting.html",
  "title": "Remote Settings scripting"
}, {
  "description": "While you can view the keys and values of both configurations in the Editor, Unity only loads one configuration at runtime.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsRemoteSettingsTesting.html",
  "title": "Testing Remote Settings"
}, {
  "description": "To use remote settings in a project, first install the Remote Settings package from the Unity Asset Store.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsRemoteSettingsUsing.html",
  "title": "Using Remote Settings in a Unity project"
}, {
  "description": "Prior to Unity 5.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsSDK.html",
  "title": "Legacy Unity Analytics (SDK Workflow)"
}, {
  "description": "Segments are subsets of your player base, split apart by key differentiators, such as country, platform, experience level, or spending patterns.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsSegmentBuilder.html",
  "title": "Segment Builder tab "
}, {
  "description": "Once you have set up your project for Unity Services, you can enable the Analytics service.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsSetup.html",
  "title": "Setting Up Analytics"
}, {
  "description": "Use Standard Events to track user experience and player behavior across five major areas:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsStandardEvents.html",
  "title": "Standard Events"
}, {
  "description": "This glossary defines the metrics and terminology used by the Unity Analytics System and documentation.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsTerminology.html",
  "title": "Analytics Metrics, Segments, and Terminology"
}, {
  "description": "The Unity Editor can act as a test environment to validate Analytics integration.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsTestSDK.html",
  "title": "Play To Validate"
}, {
  "description": "\r\nNote: 5.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsUpgrade51ToSDK.html",
  "title": "Unity Analytics Re-integrate SDK to 5.1"
}, {
  "description": "Follow the instructions in Setting Up Analytics which consists of these steps:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsUpgradeFrom51.html",
  "title": "Upgrade Unity Analytics 5.1 to 5.2 onwards"
}, {
  "description": "The process is divided into three general steps: ",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsUpgradeFromSDK.html",
  "title": "Upgrade Unity Analytics 4.x-5.1 (SDK) to 5.2 onwards"
}, {
  "description": "Unity Analytics comes built-in starting with version 5.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsUpgrading.html",
  "title": "Upgrading Unity Analytics"
}, {
  "description": "\r\nImportant: reporting user attributes to the Unity Analytics service is no longer supported.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsUserAttributes.html",
  "title": "User Attributes"
}, {
  "description": "Unity Analytics offers the ability to track user demographics.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityAnalyticsUserAttributesSDK.html",
  "title": "User Attributes"
}, {
  "description": "This section is your key to getting started with Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityBasics.html",
  "title": "Getting Started"
}, {
  "description": "Unity Cloud Build is a continuous integration service for Unity projects.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCloudBuild.html",
  "title": "Unity Cloud Build"
}, {
  "description": "Once you’ve configured your project in Unity Cloud Build, you can set up advanced build options for each of your build targets.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCloudBuildAdvancedOptions.html",
  "title": "Advanced options"
}, {
  "description": "Automated Build Generation is a feature of Cloud Build for Unity Teams Advanced.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCloudBuildContinuousIntegration.html",
  "title": "Automated Build Generation"
}, {
  "description": "Using Unity Cloud Build, you can create custom scripting #define directives.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCloudBuildCustomScriptingDefineDirectives.html",
  "title": "Custom scripting #define directives"
}, {
  "description": "Unity Cloud Build builds your projects for release by default.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCloudBuildDevelopmentBuilds.html",
  "title": "Development builds"
}, {
  "description": "By default, Unity Cloud Build builds the Scenes you’ve added to your project in the Unity Editor to File > Build Settings > Scenes in Build.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCloudBuildIncludingSpecificScenes.html",
  "title": "Including specific Scenes"
}, {
  "description": "Unity Cloud Build helps you automate the process of building your Unity Project for iOS devices.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCloudBuildiOS.html",
  "title": "Building for iOS"
}, {
  "description": "It’s often useful for your game’s run-time code to know key information about the build itself.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCloudBuildManifest.html",
  "title": "Build manifest"
}, {
  "description": "You can access the Unity Cloud Build manifest as JSON at runtime.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCloudBuildManifestAsJSON.html",
  "title": "Build manifest as JSON "
}, {
  "description": "\r\nBuildManifestObject is a ScriptableObject that you can use to access the values in the Build manifest via script, without needing to manually load the UnityCloudBuildManifest.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCloudBuildManifestAsScriptableObject.html",
  "title": "Build manifest as ScriptableObject"
}, {
  "description": "The pre- and post-export methods allow you to trigger actions before and after your Unity Project is built.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCloudBuildPreAndPostExportMethods.html",
  "title": "Pre- and post-export methods"
}, {
  "description": "You can further automate and integrate Unity Cloud Build into your own custom workflows using its REST API.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCloudBuildRestAPI.html",
  "title": "Cloud Build REST API"
}, {
  "description": "Unity Cloud Build allows you to build your Unity project for multiple platforms and operating systems.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCloudBuildSupportedPlatforms.html",
  "title": "Supported platforms"
}, {
  "description": "Unity Cloud Build can build projects created with most versions of the Unity Editor.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCloudBuildUnityVersions.html",
  "title": "Supported versions of Unity"
}, {
  "description": "In order for Unity Cloud Build to make builds for you, you have to first host your project in Unity Collaborate or a third-party source control system (also known as a “version control system”).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCloudBuildVcs.html",
  "title": "Version control systems"
}, {
  "description": "Unity Cloud Build supports projects stored in Git repositories.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCloudBuildVcsGit.html",
  "title": "Using the Unity Developer Dashboard to configure Unity Cloud Build for Git"
}, {
  "description": "Unity Cloud Build supports projects stored in Git repositories.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCloudBuildVcsGitUsingEditor.html",
  "title": "Using the Unity Editor to configure Unity Cloud Build for Git"
}, {
  "description": "Unity Cloud Build supports projects stored in Mercurial repositories.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCloudBuildVcsMercurial.html",
  "title": "Using the Unity Developer Dashboard to configure Unity Cloud Build for Mercurial"
}, {
  "description": "Unity Cloud Build supports projects stored in Mercurial repositories.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCloudBuildVcsMercurialUsingEditor.html",
  "title": "Using the Unity Editor to configure Unity Cloud Build for Mercurial"
}, {
  "description": "Unity Cloud Build supports projects hosted in Perforce (see www.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCloudBuildVcsPerforce.html",
  "title": "Using Perforce with Unity Cloud Build"
}, {
  "description": "Unity Cloud Build supports projects hosted in Apache Subversion (SVN) repositories (see subversion.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCloudBuildVcsSubversion.html",
  "title": "Using Apache Subversion (SVN) with Unity Cloud Build"
}, {
  "description": "If your iOS project requires additional Xcode frameworks, use the PBXProject API to add those frameworks to the Xcode project files created by Unity Cloud Build.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCloudBuildXcodeFrameworks.html",
  "title": "Xcode frameworks"
}, {
  "description": "Unity Collaborate is part of Unity Teams.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCollaborate.html",
  "title": "Unity Collaborate"
}, {
  "description": "\r\nUnity Collaborate is part of Unity Teams.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCollaborateAddingTeammates.html",
  "title": "Adding team members to your Unity Project"
}, {
  "description": "Unity Cloud Build is a continuous integration service for Unity Projects.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCollaborateEnableCloudBuild.html",
  "title": "Enabling Cloud Build with Collaborate"
}, {
  "description": "In some cases, you might want to exclude certain Assets in your Project from publishing to the cloud.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCollaborateIgnoreFiles.html",
  "title": "Excluding Assets from publishing to Collaborate"
}, {
  "description": "Colloborate allows you to partially publish a Project.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCollaboratePartialPublish.html",
  "title": "Publishing individual files to Collaborate"
}, {
  "description": "A conflict occurs when another team member makes changes to an Asset that you have also changed, and you try to update your Project with those changes.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCollaborateResolvingConflicts.html",
  "title": "Resolving file conflicts"
}, {
  "description": "Some changes made to a working copy of a file might not be suitable for publishing to the project.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCollaborateRevertingFiles.html",
  "title": "Reverting files"
}, {
  "description": "There are times when you need to revert your entire Project to a previous version.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCollaborateRollback.html",
  "title": "Restoring previous versions of a project"
}, {
  "description": "Typically, Unity Services are enabled by default.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCollaborateSettingUp.html",
  "title": "Setting up Unity Collaborate"
}, {
  "description": "This page details some simple troubleshooting tips for the most common problems that can arise while using Unity Collaborate.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCollaborateTroubleShooting.html",
  "title": "Collaborate troubleshooting tips"
}, {
  "description": "Unity Collaborate verifies that the version of Unity used for the update that you are publishing matches the version of Unity used to published the latest update shown in the Collab History window.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCollaborateUpgradeConsiderations.html",
  "title": "Managing Unity Editor versions"
}, {
  "description": "You can view the entire history of the Project and any changes made.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityCollaborateViewingHistory.html",
  "title": "Viewing history"
}, {
  "description": "UnityEvents are a way of allowing user driven callback to be persisted from edit time to run time without the need for additional programming and script configuration.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityEvents.html",
  "title": "UnityEvents"
}, {
  "description": "This page gives an overview of the default Unity keyboard shortcuts.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityHotkeys.html",
  "title": "Unity hotkeys"
}, {
  "description": "Unity IAP makes it easy to implement in-app purchases in your application across the most popular App stores.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAP.html",
  "title": "﻿Unity IAP"
}, {
  "description": "This guide describes the process of setting up the Amazon Appstore for use with the Unity in-app purchasing (IAP) system.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPAmazonConfiguration.html",
  "title": "Configuration for the Amazon Appstore"
}, {
  "description": "To fetch the current Amazon User ID for other Amazon services, use the IAmazonExtensions:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPAmazonExtendedFunctionality.html",
  "title": "Amazon Appstore and Amazon Underground Store "
}, {
  "description": "This guide describes the process of establishing the digital records and relationships necessary for a Unity game to interact with an In-App Purchase Store.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPAppleConfiguration.html",
  "title": "Configuring for Apple App Store and Mac App Store"
}, {
  "description": "Unity IAP retrieves localized product metadata during the initialization process, which you can access via the IStoreController’s products field.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPBrowsingMetadata.html",
  "title": "Browsing Product Metadata"
}, {
  "description": "\r\nCodeless IAP is the easiest way to implement in-app purchases in your Unity app.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPCodelessIAP.html",
  "title": "Codeless IAP"
}, {
  "description": "Did you find this page useful? Please give it a rating:\r\n",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPCrossPlatform.html",
  "title": "Cross Platform Guide"
}, {
  "description": "There are cross-store installation issues when using shared Android bundle identifiers to publish to multiple Android in-app purchase stores (such as Samsung and Google) simultaneously.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPCrossStoreInstallationIssues.html",
  "title": "Cross-store installation issues with Android in-app purchase stores"
}, {
  "description": "In order to use in-app purchases, your app must provide a list of Products for sale.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPDefiningProducts.html",
  "title": "Defining products"
}, {
  "description": "This guide describes the process of establishing the digital records and relationships necessary for a Unity game to interact with an In-App Purchase Store.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPGoogleConfiguration.html",
  "title": "Configuring for Google Play Store"
}, {
  "description": "Unity IAP uses V3 of Google’s Billing API, which features the concept of consumable products and explicit consumption API calls.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPGooglePlay.html",
  "title": "Google Play"
}, {
  "description": "Purchases may fail for a number of reasons, including network failure, payment failure or device settings.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPHandlingPurchaseFailures.html",
  "title": "Handling purchase failures"
}, {
  "description": "Your store must implement the IStore interface, the methods of which are detailed in following sections.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPImplementingAStore.html",
  "title": "Implementing a Store"
}, {
  "description": "You must provide an implementation of the IStoreListener interface which Unity IAP uses to inform your application of purchase-related events.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPInitialization.html",
  "title": "Initialization"
}, {
  "description": "When the user wants to buy a product call the InitiatePurchase method of the IStoreController, identifying the product the user wants to buy.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPInitiatingPurchases.html",
  "title": "Initiating Purchases"
}, {
  "description": "An App Receipt is stored on the device’s local storage and can be read as follows:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPiOSMAS.html",
  "title": "iOS & Mac App Stores"
}, {
  "description": "Your Store’s Purchase method is called when the user opts to make a purchase.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPIStoreHandlingPurchases.html",
  "title": "Handling purchases"
}, {
  "description": "Your store’s Initialize method is called by Unity IAP with an IStoreCallback that your store uses to communicate back to Unity IAP asynchronously.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPIStoreInitialization.html",
  "title": "Initialization"
}, {
  "description": "When your store’s RetrieveProducts method is called it should fetch the latest product metadata and, optionally, ownership status for the current user.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPIStoreRetrievingProducts.html",
  "title": "Retrieving products"
}, {
  "description": "Your store may require developers to supply additional configuration information during initialization, for which your module can register a configuration instance that implements the IStoreConfiguration interface:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPModuleConfiguration.html",
  "title": "Store Configuration"
}, {
  "description": "Your store may offer additional functionality that does not fit into the cross platform purchase flow, for example the ability to refresh app receipts on Apple’s stores.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPModuleExtension.html",
  "title": "Store Extensions"
}, {
  "description": "Call the RegisterStore method supplying a name for your store and your implementation, which must implement the IStore interface.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPModuleRegistration.html",
  "title": "Registering your store"
}, {
  "description": "Store modules extend the AbstractPurchasingModule class, acting as factories Unity IAP can use to obtain an instance of your store along with any configuration and extensions.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPModules.html",
  "title": "Store Modules"
}, {
  "description": "The CloudMoolah MOO Store is a commercial service that enables people to buy and sell mobile apps.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPMoolahMooStore.html",
  "title": "CloudMoolah MOO store"
}, {
  "description": "The ProcessPurchase function of your store listener is called when a purchase completes.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPProcessingPurchases.html",
  "title": "Processing Purchases"
}, {
  "description": "Unity IAP provides purchase receipts as a JSON hash containing the following keys and values:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPPurchaseReceipts.html",
  "title": "﻿Purchase Receipts"
}, {
  "description": "When a user reinstalls your application they should be granted any Non-Consumable or renewable Subscription products they already own.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPRestoringTransactions.html",
  "title": "Restoring Transactions"
}, {
  "description": "This guide describes the process of establishing the digital records and relationships necessary for a Unity app to interact with an in-app purchase store.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPSamsungConfiguration.html",
  "title": "Samsung Galaxy IAP configuration"
}, {
  "description": "Developer mode allows you to carry out IAP testing without incurring real-world monetary charges for products.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPSamsungGalaxy.html",
  "title": "Samsung Galaxy apps"
}, {
  "description": "Once you have set up your project for Unity Services, you can enable the Unity IAP service.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPSettingUp.html",
  "title": "Setting up Unity IAP"
}, {
  "description": "Stores may offer unique functionality that does not fit into the normal cross-platform purchase flow.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPStoreExtensions.html",
  "title": "Store Extensions"
}, {
  "description": "Store Guides",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPStoreGuides.html",
  "title": "Store Guides"
}, {
  "description": "Unity IAP supports Product subscription information queries through the SubscriptionManager class.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPSubscriptionProducts.html",
  "title": "Subscription Product support"
}, {
  "description": "Unity IAP features support for Microsoft’s In App Purchase simulator, which allows you to test IAP purchase flows on devices before publishing your application.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPUniversalWindows.html",
  "title": "Universal Windows Platform"
}, {
  "description": "Receipt validation helps you prevent users from accessing content they have not purchased.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPValidatingReceipts.html",
  "title": "Receipt validation"
}, {
  "description": "This guide describes the process of establishing the digital records and relationships necessary for a Unity game to interact with an In-App Purchase Store.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPWindowsConfiguration.html",
  "title": "Configuring for Windows Store"
}, {
  "description": "\r\nUnity IAP provides a streamlined channel for developers outside of China to publish apps in the Chinese market.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPXiaomi.html",
  "title": "Unity IAP Xiaomi integration guide"
}, {
  "description": "The AppInfo class stores client and Xiaomi credentials needed for client-to-server communication and authentication.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIAPXiaomiAPI.html",
  "title": "Unity Channel SDK and API extensions"
}, {
  "description": "Unity Integrations allow you to connect the following Unity Services in your development workflow to non-Unity tools:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityIntegrations.html",
  "title": "Unity Integrations"
}, {
  "description": "Use the Unity Editor to create 2D and 3D games, apps and experiences.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityManual.html",
  "title": "Unity User Manual (2018.1)"
}, {
  "description": "Two common errors you might encounter are:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityMultiplayerCommonErrors.html",
  "title": "Common Errors"
}, {
  "description": "To integrate Unity Multiplayer Services using the Networking High-Level API, you must use the NetworkMatch class directly in your scripts.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityMultiplayerIntegratingHighLevel.html",
  "title": "Integration using Unity's High-Level API"
}, {
  "description": "To integrate Unity Multiplayer Services using the NetworkManagerHUD, follow these steps:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityMultiplayerIntegratingHUD.html",
  "title": "Integration using the HUD"
}, {
  "description": "If you need the maximum amount of flexibilty when integrating Unity Multiplayer Services, you can use the NetworkTransport class directly.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityMultiplayerIntegratingLowLevel.html",
  "title": "Integration using NetworkTransport"
}, {
  "description": "There are three different methods you can use to start working with the Multiplayer Service in your project.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityMultiplayerIntegratingOverview.html",
  "title": "Integrating the Multiplayer Service"
}, {
  "description": "Unity’s Multiplayer Service is the easiest way to set up real-time, networked games for Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityMultiplayerService.html",
  "title": "Multiplayer Services"
}, {
  "description": "To start using Unity Multiplayer, your project must be set up to use Unity Services.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityMultiplayerSettingUp.html",
  "title": "Setting up Unity Multiplayer"
}, {
  "description": "This section serves as a complete introduction to the Unity software.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityOverview.html",
  "title": "Working in Unity"
}, {
  "description": "Unity Performance Reporting captures and aggregates exception data and native crash reports, to help you understand what’s happening during run time and to optimize your project faster.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityPerformanceReporting.html",
  "title": "Unity Performance Reporting"
}, {
  "description": "When you build your application using Xcode, iOS\/OSX places the symbols in a dSYM folder with a name similar to the following:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityPerformanceReportingFindingiOSSymbols.html",
  "title": "Finding and uploading missing iOS\/OSX application symbols"
}, {
  "description": "Once you have set up your Project for Unity Services, you can enable the Performance Reporting service.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityPerformanceReportingSettingUp.html",
  "title": "Setting up Performance Reporting"
}, {
  "description": "Symbols map program addresses to function names.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityPerformanceReportingSymbols.html",
  "title": "Performance Reporting missing symbols"
}, {
  "description": "Exceptions that occur during run time are flagged up in the console as normal.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityPerformanceReportingUnderstandingReports.html",
  "title": "Understanding exception reports"
}, {
  "description": "Unity Remote is a downloadable app designed to help with Android, iOS and tvOS development.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityRemote5.html",
  "title": "Unity Remote"
}, {
  "description": "Unity is more than an engine.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityServices.html",
  "title": "Unity Services"
}, {
  "description": "There are several types of DownloadHandlers:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityWebRequest-CreatingDownloadHandlers.html",
  "title": "Creating DownloadHandlers"
}, {
  "description": "WebRequests can be instantiated like any other object.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityWebRequest-CreatingUnityWebRequests.html",
  "title": "Creating UnityWebRequests"
}, {
  "description": "Currently, only one type of upload handler is available: UploadHandlerRaw.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityWebRequest-CreatingUploadHandlers.html",
  "title": "Creating UploadHandlers"
}, {
  "description": "To download an AssetBundle from a remote server, you can use UnityWebRequest.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityWebRequest-DownloadingAssetBundle.html",
  "title": "Downloading an AssetBundle from an HTTP server (GET)"
}, {
  "description": "This section details the options available in the High-Level API and the scenarios they are intended to address.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityWebRequest-HLAPI.html",
  "title": "Common operations: using the HLAPI"
}, {
  "description": "While the HLAPI is designed to minimize boilerplate code, the Low-Level API (LLAPI) is designed to permit maximum flexibility.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityWebRequest-LLAPI.html",
  "title": "Advanced operations: Using the LLAPI"
}, {
  "description": "To retrieve simple data such as textual data or binary data from a standard HTTP or HTTPS web server, use the UnityWebRequest.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityWebRequest-RetrievingTextBinaryData.html",
  "title": "Retrieving text or binary data from an HTTP Server (GET)"
}, {
  "description": "To retrieve a Texture file from a remote server, you can use UnityWebRequest.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityWebRequest-RetrievingTexture.html",
  "title": "Retrieving a Texture from an HTTP Server (GET)"
}, {
  "description": "There are two primary functions for sending data to a server formatted as a HTML form.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityWebRequest-SendingForm.html",
  "title": "Sending a form to an HTTP server (POST)"
}, {
  "description": "Some modern web applications prefer that files be uploaded via the HTTP PUT verb.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityWebRequest-UploadingRawData.html",
  "title": "Uploading raw data to an HTTP server (PUT)"
}, {
  "description": "UnityWebRequest provides a modular system for composing HTTP requests and handling HTTP responses.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UnityWebRequest.html",
  "title": "UnityWebRequest"
}, {
  "description": "Currently if you want to build for Universal Windows 10 Applications (a.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/universal-windows-10-apps.html",
  "title": "Universal Windows 10 Applications: Getting Started"
}, {
  "description": "This page lists any changes in 2017.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UpgradeGuide20171.html",
  "title": "Upgrading to Unity 2017.1"
}, {
  "description": "This page lists any changes in 2017.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UpgradeGuide20172.html",
  "title": "Upgrading to Unity 2017.2"
}, {
  "description": "This page lists any changes in 2017.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UpgradeGuide20173.html",
  "title": "Upgrading to Unity 2017.3"
}, {
  "description": "Did you find this page useful? Please give it a rating:\r\n",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UpgradeGuide20181.html",
  "title": "Upgrading to Unity 2018.1"
}, {
  "description": "If you have an FBX file with a root node marked up as a skeleton, it will be imported with an additional root node in 3.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UpgradeGuide3435.html",
  "title": "Upgrading to Unity 3.5"
}, {
  "description": "Unity 4.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UpgradeGuide3540.html",
  "title": "Upgrading to Unity 4.0"
}, {
  "description": "These are notes to be aware of when upgrading projects from Unity 4 to Unity 5, if your project uses the AI\/Navmesh features.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UpgradeGuide5-AI.html",
  "title": "AI in Unity 5.0"
}, {
  "description": "These are notes to be aware of when upgrading projects from Unity 4 to Unity 5, if your project uses animation features.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UpgradeGuide5-Animation.html",
  "title": "Animation in Unity 5.0"
}, {
  "description": "These are notes to be aware of when upgrading projects from Unity 4 to Unity 5, if your project uses audio features.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UpgradeGuide5-Audio.html",
  "title": "Audio in Unity 5.0"
}, {
  "description": "When upgrading a project from Unity 4 to Unity 5, you may need to re-bake stored data because some of the prebaked data formats have changed.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UpgradeGuide5-BakedDataFormats.html",
  "title": "Baked Data in Unity 5.0"
}, {
  "description": "More information about features that have changed and may affect your project when upgrading from Unity 4 to Unity 5",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UpgradeGuide5-Misc.html",
  "title": "Other Upgrade Notes for Unity 5.0"
}, {
  "description": "Unity 5.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UpgradeGuide5-Physics.html",
  "title": "Physics in Unity 5.0"
}, {
  "description": "These are notes to be aware of when upgrading projects from Unity 4 to Unity 5, if your project uses plugins, including native audio plugins.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UpgradeGuide5-Plugins.html",
  "title": "Plugins in Unity 5.0"
}, {
  "description": "These are notes to be aware of when upgrading projects from Unity 4 to Unity 5, if your project uses custom shader code.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UpgradeGuide5-Shaders.html",
  "title": "Shaders in Unity 5.0"
}, {
  "description": "Lots of Unity’s features and systems have been upgraded in Unity 5, including Physics, Audio, Animation, Shaders and more.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UpgradeGuide5.html",
  "title": "Upgrading to Unity 5.0"
}, {
  "description": "UV packing for baked UVs not filling the 0–1 space (smaller or bigger) has been fixed.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UpgradeGuide52.html",
  "title": "Upgrading to Unity 5.2"
}, {
  "description": "Lightmap Snapshot was renamed to Lighting Data asset.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UpgradeGuide53.html",
  "title": "Upgrading to Unity 5.3"
}, {
  "description": "When upgrading projects from Unity 5.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UpgradeGuide54.html",
  "title": "Upgrading to Unity 5.4"
}, {
  "description": "In Unity 5.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UpgradeGuide54Networking.html",
  "title": "5.4 Networking API Changes"
}, {
  "description": "Physically based shading related code has been refactored in\r\nUnity 5.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UpgradeGuide55.html",
  "title": "Upgrading to Unity 5.5"
}, {
  "description": "This page lists any changes in 5.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UpgradeGuide56.html",
  "title": "Upgrading to Unity 5.6"
}, {
  "description": "Visit the pages below for information about upgrading to later versions of Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UpgradeGuides.html",
  "title": "Upgrade Guides"
}, {
  "description": "\r\nComponents are the nuts & bolts of objects and behaviors in a game.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UsingComponents.html",
  "title": "Using Components"
}, {
  "description": "Usually, scripts are kept in a project as source files and compiled by Unity whenever the source changes.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UsingDLL.html",
  "title": "Managed Plugins"
}, {
  "description": "To set DirectX11 as your default Graphics API in the Editor or Standalone Player, go to the Player Settings (menu: Edit > Project Settings > Player) and navigate to Other Settings.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UsingDX11GL3Features.html",
  "title": "DirectX"
}, {
  "description": "In order to take full advantage of Unity’s humanoid animation system and retargeting, you need to have a rigged and skinned humanoid type mesh.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UsingHumanoidChars.html",
  "title": "Humanoid Asset preparation"
}, {
  "description": "Lights are very easy to use in Unity - you simply need to create a light of the desired type (eg, from the menu GameObject > Light > Point Light) and place it where you want it in the scene.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UsingLights.html",
  "title": "Using Lights"
}, {
  "description": "In Unity, precomputed lighting is calculated in the background either as an automatic process or when manually initiated.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UsingPrecomputedLighting.html",
  "title": "Using precomputed lighting"
}, {
  "description": "You can add the Reflection Probe component to any object in a Scene but it’s standard to add each probe to a separate empty GameObject.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UsingReflectionProbes.html",
  "title": "Using Reflection Probes"
}, {
  "description": "This section provides a detailed tour of the most common editor windows, and how to make full use of them.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UsingTheEditor.html",
  "title": "The Main Windows"
}, {
  "description": "Projects in the Unity Editor are made up of multiple GameObjects that contain scripts, sounds, Meshes, and other graphical elements such as Lights.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UsingTheInspector.html",
  "title": "The Inspector window"
}, {
  "description": "The Mesh class is the basic script interface to an object’s mesh geometry.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UsingtheMeshClass.html",
  "title": "Using the Mesh Class"
}, {
  "description": "The Scene View is your interactive view into the world you are creating.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/UsingTheSceneView.html",
  "title": "The Scene View"
}, {
  "description": "When creating a script, you are essentially creating your own new type of component that can be attached to Game Objects just like any other component.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/VariablesAndTheInspector.html",
  "title": "Variables and the Inspector"
}, {
  "description": "Although vector operations are easy to describe, they are surprisingly subtle and powerful and have many uses in games programming.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/VectorCookbook.html",
  "title": "Vector Cookbook"
}, {
  "description": "Unity checks whether updates are available.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/VersionCheck.html",
  "title": "Check For Updates"
}, {
  "description": "You can use Unity in conjunction with most common version control tools, including Perforce and PlasticSCM.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/VersionControl.html",
  "title": "Version Control"
}, {
  "description": "Unity supports version control integration with Perforce and Plastic SCM.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Versioncontrolintegration.html",
  "title": "Version control integration"
}, {
  "description": "The Video Player component can play content imported from a variety of sources.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Video.html",
  "title": "Video sources"
}, {
  "description": "Unity’s panoramic video feature enables you to:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/VideoPanoramic.html",
  "title": "Panoramic video"
}, {
  "description": "Use Unity’s video system to integrate video into your game.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/VideoPlayer.html",
  "title": "Video overview"
}, {
  "description": "Unity can import video files of many different formats.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/VideoSources-FileCompatibility.html",
  "title": "Video file compatibility"
}, {
  "description": "Video files are more accurately described as “containers”.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/VideoSources-VideoFiles.html",
  "title": "Understanding video files"
}, {
  "description": "Unity’s Video Clips and Video Player component support alpha, which is the standard term used to refer to transparency.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/VideoTransparency.html",
  "title": "Video transparency support"
}, {
  "description": "The Scene view control bar lets you choose various options for viewing the Scene and also control whether lighting and audio are enabled.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/ViewModes.html",
  "title": "Scene view Control Bar"
}, {
  "description": "A more sophisticated C# development environment.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/VisualStudioIntegration.html",
  "title": "Visual Studio C# integration"
}, {
  "description": "Unity natively supports Audio Spatializers for virtual reality (VR) projects.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/VRAudioSpatializer.html",
  "title": "VR Audio Spatializers"
}, {
  "description": "Async Reprojection Video is a layer (referred to as an external surface) that an application can use to feed video frames directly into the async reprojection system.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/VRDevices-GoogleVRVideoAsyncReprojection.html",
  "title": "Unity Google VR Video Async Reprojection"
}, {
  "description": "See the detailed documentation on the Oculus Developer website.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/VRDevices-Oculus.html",
  "title": "Oculus"
}, {
  "description": "Steam is required to run OpenVR applications, so install Steam and SteamVR.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/VRDevices-OpenVR.html",
  "title": "OpenVR"
}, {
  "description": "Unity provides built-in support for a number of virtual reality devices.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/VRDevices.html",
  "title": "VR devices"
}, {
  "description": "Unity VR lets you target virtual reality devices directly from Unity, without any external plug-ins in projects.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/VROverview.html",
  "title": "VR overview"
}, {
  "description": "Did you find this page useful? Please give it a rating:\r\n",
  "link": "https:\/\/docs.unity3d.com\/Manual\/VRReference.html",
  "title": "XR API reference"
}, {
  "description": "Vuforia is a cross-platform Augmented Reality (AR) and Mixed Reality (MR) application development platform, with robust tracking and performance on a variety of hardware (including mobile devices and mixed reality Head Mounted Displays (HMD) such as the Microsoft HoloLens).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/vuforia-sdk-overview.html",
  "title": "Vuforia"
}, {
  "description": "This section provides information about the important XR platform settings affecting development of Vuforia Augmented\/Mixed Reality applications with Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/vuforia_configuration.html",
  "title": "Vuforia platform configuration settings"
}, {
  "description": "This guide provides instructions on setting up a Unity project with Vuforia and creating your first Vuforia application with Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/vuforia_get_started.html",
  "title": "Vuforia quick start guide"
}, {
  "description": "To add an Image Target to the Scene, go to GameObject > Vuforia > Image.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/vuforia_get_started_adding_image_targets.html",
  "title": "Adding Image Targets to your Scene"
}, {
  "description": "This page shows you how to display a GameObject when the camera recognizes and tracks an on-screen Image Target.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/vuforia_get_started_displaying_3d_content.html",
  "title": "Displaying 3D models on top of tracked images"
}, {
  "description": "This section shows you how to set up a simple Image Target and get it responding to basic tracking events.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/vuforia_get_started_image_targets_setup.html",
  "title": "Setting up Image Targets"
}, {
  "description": "Setting up your project to develop Vuforia AR or MR mobile applications is very similar to the set-up process for building with Unity for a mobile platform.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/vuforia_get_started_project_setup.html",
  "title": "Setting up your Project for Vuforia"
}, {
  "description": "In the Unity Editor, navigate to Asset > Import Package > Custom Package and find the package on your hard drive.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/vuforia_get_started_target_database_import.html",
  "title": "Importing and activating the Target Database in Unity"
}, {
  "description": "This page provides an overview of both hardware and software requirements for using the Vuforia SDK with Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/vuforia_requirements.html",
  "title": "Vuforia hardware and software requirements"
}, {
  "description": "This page provides useful tips to help you make AR\/MR applications with Vuforia in Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/vuforia_tips.html",
  "title": "Vuforia tips, troubleshooting and resources"
}, {
  "description": "The Web Player feature was removed from 5.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Web.html",
  "title": "Web Player"
}, {
  "description": "Audio in WebGL is done differently then on all other platforms.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/webgl-audio.html",
  "title": "Using Audio In WebGL"
}, {
  "description": "Unity WebGL supports all major desktop browsers to some degree.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/webgl-browsercompatibility.html",
  "title": "WebGL Browser Compatibility"
}, {
  "description": "When you build a WebGL project, Unity creates a folder with the following files:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/webgl-building.html",
  "title": "Building and running a WebGL project"
}, {
  "description": "Cursor locking (using Cursor.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/webgl-cursorfullscreen.html",
  "title": "Cursor locking and full-screen mode in WebGL"
}, {
  "description": "Unity WebGL content cannot currently be debugged in Visual Studio, which can make it difficult to find out what exactly is going wrong with your content.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/webgl-debugging.html",
  "title": "Debugging and trouble shooting WebGL builds"
}, {
  "description": "When you build a WebGL project in release mode (see Publishing builds), Unity compresses your build output files to reduce the download size of your build.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/webgl-deploying.html",
  "title": "WebGL: Deploying compressed builds"
}, {
  "description": "The WebGL build option allows Unity to publish content as JavaScript programs which use HTML5 technologies and the WebGL rendering API to run Unity content in a web browser.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/webgl-gettingstarted.html",
  "title": "Getting started with WebGL development"
}, {
  "description": "WebGL is an API for rendering graphics in web browsers, which is based on the functionality of the OpenGL ES graphics library.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/webgl-graphics.html",
  "title": "WebGL Graphics"
}, {
  "description": "Gamepads and Joysticks are supported in WebGL (using the Input class) on browsers which support the HTML5 Gamepad API.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/webgl-input.html",
  "title": "Input in WebGL"
}, {
  "description": "When building content for the web, you might need to communicate with other elements on your web page.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/webgl-interactingwithbrowserscripting.html",
  "title": "WebGL: Interacting with browser scripting"
}, {
  "description": "Memory in Unity WebGL can be a constraining factor restricting the complexity of the content you can run, so we would like to provide some explanation on how memory is used in WebGL.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/webgl-memory.html",
  "title": "Memory Considerations when targeting WebGL"
}, {
  "description": "Due to security implications, JavaScript code does not have direct access to IP Sockets to implement network connectivity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/webgl-networking.html",
  "title": "WebGL Networking"
}, {
  "description": "This is a bit difficult to answer, as it depends on many factors.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/webgl-performance.html",
  "title": "WebGL performance considerations"
}, {
  "description": "When you build a WebGL project, Unity embeds the player in an HTML page so that it can be played in the browser.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/webgl-templates.html",
  "title": "Using WebGL Templates"
}, {
  "description": "This section of the User Manual contains documentation on developing for the WebGL platform.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/webgl.html",
  "title": "WebGL"
}, {
  "description": "\r\n\r\n",
  "link": "https:\/\/docs.unity3d.com\/Manual\/WhatsNew20181.html",
  "title": "New in Unity 2018.1"
}, {
  "description": "The Wheel Collider component is powered by the PhysX 3 Vehicles SDK.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/WheelColliderTutorial.html",
  "title": "Wheel Collider Tutorial"
}, {
  "description": "\r\n\r\n",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Windows-Mixed-Reality-Input.html",
  "title": "Input for Windows Mixed Reality"
}, {
  "description": "This section of the User Manual contains documentation on developing for the Windows platform.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/Windows.html",
  "title": "Windows"
}, {
  "description": "Unity provides some facilities to ease the debugging on Windows for forensic or live debugging of game or editor processes.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/WindowsDebugging.html",
  "title": "﻿Windows Debugging"
}, {
  "description": "This section contains information which can be applied for several Windows platforms.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/WindowsGeneral.html",
  "title": "Windows General"
}, {
  "description": "Anchor Sharing is a system for saving a World Anchor on one device in such a way that it can be loaded onto different devices.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/windowsholographic-anchorsharing.html",
  "title": "HoloLens Anchor Sharing"
}, {
  "description": "Persistence is a system for saving World Anchor states across multiple runs of the same application.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/windowsholographic-persistence.html",
  "title": "HoloLens WorldAnchor persistence"
}, {
  "description": "Use the PhotoCapture API to take photos from the HoloLens web camera.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/windowsholographic-photocapture.html",
  "title": "HoloLens photo capture"
}, {
  "description": "Use the VideoCapture API to record videos directly to the file system in the MP4 format.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/windowsholographic-videocapture.html",
  "title": "HoloLens video capture"
}, {
  "description": "The Web Camera API is an asynchronous API that provides the ability to take pictures and record videos.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/windowsholographic-webcamera.html",
  "title": "HoloLens Web Camera"
}, {
  "description": "Windows Standalone player can detect if it’s running at Low Integrity Level (see Microsoft’s documentation on Designing Applications to Run at a Low Integrity Level for more information).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/WindowsLowIntegrity.html",
  "title": "WindowsLowIntegrity"
}, {
  "description": "You can add C++ (.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/WindowsPlayerCPlusPlusSourceCodePluginsForIL2CPP.html",
  "title": "Windows Player: C++ source code plugins for IL2CPP"
}, {
  "description": "A Project using the IL2CPP scripting backend will typically (can differ due to build settings) produce these files:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/WindowsPlayerIL2CPPBuildProducedFiles.html",
  "title": "Windows Player: IL2CPP build files"
}, {
  "description": "IL2CPP is a fully-supported scripting backend that can be used as an alternative to Mono when building projects for Windows Player.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/WindowsPlayerIL2CPPScriptingBackend.html",
  "title": "Windows Player: IL2CPP Scripting Backend"
}, {
  "description": "When you build a Unity project to the Windows standalone platform Unity produces the following files (where ‘ProjectName’ is the name of your project):",
  "link": "https:\/\/docs.unity3d.com\/Manual\/WindowsStandaloneBinaries.html",
  "title": "Windows standalone Player build binaries"
}, {
  "description": "You could call it a bridge between your main application and Unity engine.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/windowsstore-appcallbacks.html",
  "title": "AppCallbacks class"
}, {
  "description": "The API allows you to launch the user’s default app for a file type or protocol.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/windowsstore-assocation-launching.html",
  "title": "﻿Universal Windows Platform: Association launching"
}, {
  "description": "Associate these lines with button click.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/windowsstore-code-snippets.html",
  "title": "﻿Universal Windows Platform: Code snippets"
}, {
  "description": "Universal Windows Apps don’t accept command line arguments by default, so to pass them you have to call a special function from App.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/windowsstore-commandlinearguments.html",
  "title": "Universal Windows Platform: Command line arguments"
}, {
  "description": "Although IL2CPP does not have a C# debugger at this time, it’s still possible to debug generated C++ code using Visual Studio.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/windowsstore-debugging-il2cpp.html",
  "title": "Universal Windows Platform: Debugging on IL2CPP Scripting Backend"
}, {
  "description": "When you have a crash, or a weird behavior, always check the player log which is located here - <user>\\AppData\\Local\\Packages<productname>\\TempState\\UnityPlayer.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/windowsstore-debugging.html",
  "title": "﻿Universal Windows Platform: Debugging on .NET Scripting Backend"
}, {
  "description": "Go to Build Settings and build your project to a folder",
  "link": "https:\/\/docs.unity3d.com\/Manual\/windowsstore-deployment.html",
  "title": "﻿Universal Windows Platform: Deployment"
}, {
  "description": "The .",
  "link": "https:\/\/docs.unity3d.com\/Manual\/windowsstore-dotnet.html",
  "title": "Universal Windows Platform: .NET Scripting Backend"
}, {
  "description": "Example projects are stored on the Unity Technologies Bitbucket.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/windowsstore-examples.html",
  "title": "﻿Universal Windows Platform: Examples"
}, {
  "description": "Under publishing settings on Universal Windows Platform player settings, there’s a drop down menu called “Compilation overrides”.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/windowsstore-faq.html",
  "title": "﻿FAQ"
}, {
  "description": "Building a project from Unity to Universal Windows Platform with IL2CPP scripting backend will create a Visual Studio C++ solution containing three projects:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/windowsstore-generatedproject-il2cpp.html",
  "title": "Universal Windows Platform: Generated project with IL2CPP scripting backend"
}, {
  "description": "Unity supports three CPU architectures when targeting Universal Windows Platform: X86, X64 and ARM.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/windowsstore-gettingstarted.html",
  "title": "﻿Getting Started"
}, {
  "description": "IL2CPP is a fully-supported scripting back end that can be used as an alternative to .",
  "link": "https:\/\/docs.unity3d.com\/Manual\/windowsstore-il2cpp.html",
  "title": "Universal Windows Platform: IL2CPP scripting back end"
}, {
  "description": "This page contains known issues with apps built for the Universal Windows Platform caused by external factors that aren’t related to Unity, such as drivers and libraries.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/windowsstore-knownissues.html",
  "title": "Known issues"
}, {
  "description": "The .",
  "link": "https:\/\/docs.unity3d.com\/Manual\/windowsstore-missingtypes.html",
  "title": "Universal Windows Platform: Missing .NET Types on .NET Scripting Backend"
}, {
  "description": "At this point in time, the plugin model for Universal Windows Platform with IL2CPP scripting backend is much more similar to other Unity platforms (such as Windows standalone), rather than Universal Windows Platform with .",
  "link": "https:\/\/docs.unity3d.com\/Manual\/windowsstore-plugins-il2cpp.html",
  "title": "Universal Windows Platform: Plugins on IL2CPP Scripting Backend"
}, {
  "description": "To view these settings, go to the Unity Editor’s Project Window, select the plug-in file, then in the Inspector window navigate to Platform settings > Universal Windows Platform (the Windows icon).",
  "link": "https:\/\/docs.unity3d.com\/Manual\/windowsstore-plugins.html",
  "title": "Universal Windows Platform: Plugins on .NET Scripting Backend"
}, {
  "description": "You can connect Unity’s profiler to running Universal Windows Application.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/windowsstore-profiler.html",
  "title": "﻿Universal Windows Platform: Profiler"
}, {
  "description": "Unity generates an XAML C# Visual Studio solution.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/windowsstore-projecttypes.html",
  "title": "﻿Universal Windows Platform: Generated project with .NET scripting backend"
}, {
  "description": "Scripting backend is a framework that powers scripting in Unity.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/windowsstore-scriptingbackends.html",
  "title": "Scripting Backends"
}, {
  "description": "It is possible to use WinRT API directly in Unity scripts.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/windowsstore-scripts.html",
  "title": "Universal Windows Platform: WinRT API in C# scripts"
}, {
  "description": "Unity allows you to target these Windows SDKs when targeting Windows Store:",
  "link": "https:\/\/docs.unity3d.com\/Manual\/windowsstore-sdks.html",
  "title": "Windows Store: Windows SDKs"
}, {
  "description": "",
  "link": "https:\/\/docs.unity3d.com\/Manual\/WindowsStore.html",
  "title": "Universal Windows Platform"
}, {
  "description": "Windows 8.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/WindowsUniversalApps.html",
  "title": "Windows 8.1 Universal Applications"
}, {
  "description": "Unity has a simple wizard that lets you quickly create your own ragdoll.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/wizard-RagdollWizard.html",
  "title": "Ragdoll Wizard"
}, {
  "description": "All Windows Mixed Reality devices use specific forms of interaction to take input from the user.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/wmr_input_types.html",
  "title": "WMR input and interaction concepts"
}, {
  "description": "Windows Mixed Reality (WMR) applications are Universal Windows Applications, and follow the same general guidelines as other Windows Store applications.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/wmr_quick_start.html",
  "title": "WMR quick start guide"
}, {
  "description": "This section discusses hardware compatibilities and software requirements for using Windows Mixed Reality devices and applications.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/wmr_requirements.html",
  "title": "WMR hardware and software requirements"
}, {
  "description": "Windows Mixed Reality (WMR) is a Microsoft platform built around the Windows 10 API, allowing applications to render digital content on holographic and immersive display devices.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/wmr_sdk_overview.html",
  "title": "Windows Mixed Reality"
}, {
  "description": "Unity provides tools that allow you to test applications during the development process.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/wmr_testing.html",
  "title": "WMR testing during development"
}, {
  "description": "When the application crashes without the debugger attached, it is possible to get a dump file, if appropriate settings are enabled on the phone.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/wp8-1-debugging.html",
  "title": "Windows Phone 8.1: Debugging"
}, {
  "description": "Windows Phone 8.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/WP8-1.html",
  "title": "Windows Phone 8.1"
}, {
  "description": "This section provides overviews for all the XR SDKs supported by Unity, covering topics such as quick start guides, SDK configuration settings and troubleshooting.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/XR-SDK_overviews.html",
  "title": "XR SDKs"
}, {
  "description": "XR is an umbrella term, encompassing Virtual Reality (VR), Augmented Reality (AR) and Mixed Reality (MR) applications.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/XR.html",
  "title": "XR"
}, {
  "description": "This section provides information on all Unity supported input devices used to interact in Virtual Reality, Augmented Reality and Mixed Reality applications.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/xr_input.html",
  "title": "Unity XR input"
}, {
  "description": "An example of a simple but complete scene is given below.",
  "link": "https:\/\/docs.unity3d.com\/Manual\/YAMLSceneExample.html",
  "title": "An Example of a YAML Scene File"
}]
